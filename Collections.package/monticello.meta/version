(name 'Collections-GDK.880' message 'empty log message' id 'fdd5eda0-66c7-4c45-af2d-7249213f85eb' date '26 January 2021' time '6:45:22.945022 pm' author 'GDK' ancestors ((name 'Collections-GDK.879' message 'empty log message' id '0f9d744d-51bf-4d63-ba7c-e467fbe2c4d9' date '25 January 2021' time '3:50:33.774365 pm' author 'GDK' ancestors ((name 'Collections-GDK.878' message 'empty log message' id '61693d60-163b-4d0c-af41-9f4fadd2fd02' date '24 January 2021' time '6:53:50.175133 pm' author 'GDK' ancestors ((name 'Collections-ul.877' message '- recalculate tally in WeakIdentityDictionary >> #noCheckNoGrowFillFrom: to prevent it becoming greater than the maximum number of elements the dictionary can hold' id 'df2c680a-81dd-49bf-a1c2-a0fec288ce0f' date '27 February 2020' time '2:00:22.678898 pm' author 'ul' ancestors ((name 'Collections-mt.876' message 'Prepare 5.3rc2 --- Fixes #isEmpty for weak collections.' id '282a3821-8c7b-974f-b426-2cc481055eab' date '26 February 2020' time '5:24:00.015527 pm' author 'mt' ancestors ((name 'Collections-ul.875' message '- remove cruft and migration code from HashedCollection class >> #goodPrimeAtLeast:' id 'e8d8fa4d-f205-4861-ac70-46989463beed' date '17 February 2020' time '12:18:54.69743 am' author 'ul' ancestors ((name 'Collections-ul.874' message 'HashedCollection changes:
- speed up #goodPrimeAtLeast: when its argument is small- let #sizeFor: return the smallest possible capacity (3)- use #sizeFor: instead of #goodPrimeAtLeast: in #compact. This fixes the case when a 4 element dictionary is compacted to 80% capacity (array size = 5), which is higher than the advertised maximum: 75%.- fixed the formula in #sizeFor:, which made the shortcut for small values unnecessary. Removed the shortcut. The fix often yields smaller dictionaries.- store good primes in a class variable GoodPrimes for faster access and possible customization- use blocks instead of symbols in #compactAll and #rehashAll- introduced #slowSize in HashedCollection, which makes it possible to not override #growSize and #compact in weak subclasses' id 'b9affc2a-3c70-44f8-8e6a-66b7df1a41d0' date '17 February 2020' time '12:18:14.300566 am' author 'ul' ancestors ((name 'Collections-topa.873' message 'Fix browser-dependency of Collections' id '45abc260-998e-4352-89cb-2e33b4f4b59c' date '11 February 2020' time '1:29:50.690328 pm' author 'topa' ancestors ((name 'Collections-ul.872' message 'Various performance tweaks in a single commit:- be straightforward in Dictionary >> #fillFrom:with:	- when aCollection is a Dictionary use #associationsDo:, as it very likely it has associations, and it''s faster than #keysAndValuesDo:	- when it''s not a Dictionary, use #do: instead of #associationsDo:, because the former is what we can expect a Collection to implement- use existing search methods in String >> #findDelimiters:startingAt:, because those are faster, and there''s no need to reinvent the wheel. All users other than #findTokens:* should be rewritten to use #indexOfAnyOf:* instead.- almost twice as fast (amortized cost) Symbol >> #lookup: for existing symbols(Same as Collections-ul.869 in the Treated Inbox but with updated Trunk ancestry.)' id '735423f6-6dbb-4f4a-b2a7-f311cc7e8806' date '4 February 2020' time '1:26:07.104018 pm' author 'ul' ancestors ((name 'Collections-nice.870' message 'Fix sendersOfIt for searching senders of an expression including a literal (byte) arrayIf you select following text	preference: ''Send Mouse Wheel Events to Keyboard Focus''		categoryList: #(Morphic keyboard mouse)		description: ''If enabled, follow the behavior known from Microsoft Windows, where the mouse wheel works for the widget that has the keyboard focus. If disabled, follow the Mac OS style, where the mouse wheel is send to the widget under the mouse position''		type: #Boolean		and browse senders, then if search for senders of #preference: instead of the whole keywordThis is because ''#(Morphic keyboard mouse)'' was replaced with ''#aSymbol keyboard mouse)''Also handle the nasty character literals like $: or those that create imbalanced enclosing $( $[ ${' id '1dd850f8-5ca9-4444-833f-fd10805c0e43' date '6 January 2020' time '5:12:04.309788 pm' author 'nice' ancestors ((name 'Collections-fn.869' message 'Add quick-check for identity to String>>sameAs: (similar to Character>>sameAs:).Example:[MenuIcons smallInspectItIconContents sameAs: MenuIcons smallInspectItIconContents] benchBefore:1,740,000 per second. 574 nanoseconds per run. 0 % GC time.After:94,800,000 per second. 10.5 nanoseconds per run. 0 % GC time.' id 'c29ef38b-f152-468e-bac9-74515c099ac4' date '3 January 2020' time '10:27:08.945712 am' author 'fn' ancestors ((name 'Collections-nice.868' message 'Fix RunArrayTest>>testAt2 (testing access out of bounds)Beware, Text depends on this feature of accessing runs out of bounds, because the characterIndex might be past end.To avoid problems, transform previous #at: implementation into #atPin: and use that in Text.#atPin: clamps the index in accessible range.' id 'e4026d16-31b5-430f-8c22-6475db37bb91' date '28 December 2019' time '1:23:35.502843 pm' author 'nice' ancestors ((name 'Collections-mt.866' message 'Complements Morphic-mt.1598 to bring all those find*-parsing methods together. We might want to put it into an extension category? Maybe "*Tools-converting"?' id 'd4ee3e01-f703-8b47-88e2-5c3d52dbaf11' date '3 December 2019' time '2:05:26.496677 pm' author 'mt' ancestors ((name 'Collections-cmm.865' message 'Let the printString of an OrderedDictionary reveal its key sequence.' id '8a7c3294-372d-431b-b1f2-1daff3cb3a9e' date '30 November 2019' time '9:33:26.626104 pm' author 'cmm' ancestors ((name 'Collections-mt.864' message 'Merges Collections-kfr.812 but renames #printMatrix to the existing #stringForReadout. We might want to use that one for ObjectExplorer ... See Object >> #asExplorerString.' id '5e0200f3-d834-4849-93ad-393e5b2b1af2' date '27 November 2019' time '10:46:36.719363 am' author 'mt' ancestors ((name 'Collections-mt.863' message 'Merges Collections-ct.861.' id '217307c8-b585-da43-9494-9a0db5e31144' date '19 November 2019' time '11:21:39.854265 am' author 'mt' ancestors ((name 'Collections-mt.862' message 'Merges Collections-ct.856. Harmonize all #detect: variations including their comments. Complements CollectionsTests-mt.327.' id '892a021e-ac24-bd4f-84ba-12edb793c7a0' date '19 November 2019' time '11:10:22.542265 am' author 'mt' ancestors ((name 'Collections-mt.861' message 'Merges and extends Collections-ct.855. Complements CollectionsTests-mt.326.' id '541ac3b5-5e2f-0443-99b2-4f3fc3a87a5b' date '18 November 2019' time '5:31:24.433051 pm' author 'mt' ancestors ((name 'Collections-mt.860' message 'Merges and refines Collections-ct.849. Complements CollectionsTests-mt.325.' id '53878a25-899e-1d4a-8612-70ebbfefb9fc' date '18 November 2019' time '11:46:33.642051 am' author 'mt' ancestors ((name 'Collections-mt.859' message 'Merge to complement CollectionsTests-mt.324.' id 'e09e1b73-88f1-8c48-a741-ed021620da1e' date '18 November 2019' time '10:35:50.278051 am' author 'mt' ancestors ((name 'Collections-ct.857' message 'Fix a copy bug revealed in CollectionsTests-ct.321' id '8ef4b53e-ab8c-f64e-ad7e-4c24e28b2ccc' date '27 September 2019' time '4:16:15.510642 pm' author 'ct' ancestors ((name 'Collections-jr.855' message 'Catch the lookup of nil in WeakKeyDictionaryWhile no nil key can be added, keys become nil when they are garbage collected. This must not let nil accidentally "inherit" the value of such a stale association.It only happens in unfortunate situations when nil and the collected key would hash to the same place in the hash table (array). Yet it does happen.' id '9a5b562f-ca9a-624c-9012-7840cb25db4e' date '25 September 2019' time '3:23:14.995261 pm' author 'jr' ancestors ((name 'Collections-mt.854' message 'Fixes regression with Monticello configuration file-outs (.mcm).I find it kind of surprising that #printElementsOn: is used as a serialization format ... ;-)' id '2872f979-2300-5c47-ae2a-915321068785' date '17 September 2019' time '4:18:47.166388 pm' author 'mt' ancestors ((name 'Collections-mt.853' message 'Merges Collections-mt.849.Note that this does only mark certain messages as "to deprecate", which has not happened yet.' id '9a52d97c-7987-b644-912a-974c709c7320' date '9 September 2019' time '10:09:35.326051 am' author 'mt' ancestors ((name 'Collections-mt.851' message 'Merges Collections-ct.829, which I moved to treated inbox due to incompatible ancestry."Refactor Matrix instance creation: Matrix new returns a valid (empty) matrix instead of an uninitialized object"' id 'f2b64324-98fe-5846-8e48-cfc0a1481b61' date '2 September 2019' time '11:43:25.156478 am' author 'mt' ancestors ((name 'Collections-ct.850' message 'Implement formatting on TextTry out something like:''Hello {1}!'' asText format: {Utilities authorInitials asText allBold}.' id 'f0af391e-59c7-4b41-815c-0aa3ae8afb6d' date '15 August 2019' time '11:33:51.432735 pm' author 'ct' ancestors ((name 'Collections-fn.847' message 'Remove redundant methods for copying from Character (following Chris'' suggestion at http://forum.world.st/The-Trunk-Kernel-fn-1223-mcz-tp5098738p5098777.html).' id '22fbf3f6-8234-41df-9de5-a38187e659c6' date '24 July 2019' time '9:23:16.683899 am' author 'fn' ancestors ((name 'Collections-mt.846' message 'Fixes #collect:as: for Set into Dictionary. See CollectionsTests-pre.314.Thanks to Levente for the idea!' id '0e0c1523-750b-9148-80c2-8730995b997d' date '23 July 2019' time '9:33:10.753815 am' author 'mt' ancestors ((name 'Collections-mt.845' message 'During all-literals enumeration, do not decend into association values.Users want to find the tokens they typed, not what the system generated or somehow stored. In particular, there is no need to look into class variables for literals. :-)' id 'f3187206-088a-4183-ae97-52fdb06b88cf' date '22 July 2019' time '10:01:05.9849 am' author 'mt' ancestors ((name 'Collections-dtl.844' message 'Characters and small floats are immediate objects in Spur and should not implement #nextObject.' id '8b4fd324-ffc3-4805-acd5-196a6f120137' date '18 July 2019' time '8:08:26.956143 pm' author 'dtl' ancestors ((name 'Collections-mt.843' message 'Refactoring of #literalsDo: - Step 3 of 3. For more information, see http://forum.world.st/Please-Review-Refactoring-for-literalsDo-etc-tp5099756p5100896.html.' id '7eec09f6-7031-2b40-af5a-8468dba01848' date '12 July 2019' time '10:01:59.574568 am' author 'mt' ancestors ((name 'Collections-mt.842' message 'Refactoring of #literalsDo: - Step 2 of 3. For more information, see http://forum.world.st/Please-Review-Refactoring-for-literalsDo-etc-tp5099756p5100896.html.' id '3515a0c8-a91a-5b47-a466-71ea1e2d5b85' date '12 July 2019' time '9:59:20.039568 am' author 'mt' ancestors ((name 'Collections-mt.841' message 'Refactoring of #literalsDo: - Step 1 of 3. For more information, see http://forum.world.st/Please-Review-Refactoring-for-literalsDo-etc-tp5099756p5100896.html.' id '2d41256f-bbb4-f54d-9d84-87c482bfa9dd' date '12 July 2019' time '9:56:25.049568 am' author 'mt' ancestors ((name 'Collections-mt.840' message 'Removes last traces of special treatment for one-character symbols.See http://forum.world.st/Symbol-gt-OneCharacterSymbols-td5101085.html' id 'aa463bb4-e73d-cf40-b565-c8f87687be06' date '12 July 2019' time '8:38:57.127612 am' author 'mt' ancestors ((name 'Collections-mt.839' message 'Improves code commentary, structure, and performance. Thanks Levente for the tips!(Adds tests for #findFeatures in CollectionsTests-mt.313).' id '76695fa3-7ed2-cb4e-8c6e-b33c83dd526f' date '5 July 2019' time '4:54:03.194089 pm' author 'mt' ancestors ((name 'Collections-mt.838' message 'To String, adds simple analysis of natural language in source code. No word stemming.1) Refactor #findTokens: to look like #lines (i.e. #linesDo: and #lineIndicesDo:).2) Add #findFeaturesDo: like #findTokens:do: and #linesDo:.Try this:HTTPDownloadRequest name findFeatures.(Morph >> #drawOn:) getSource asString findFeatures.Where can that be useful?- Automatic insertion of "*" for search terms like "WeakDictionary" to also find WeakIdentityDictionary etc.- Prefix emphasis for names lists of classes in code browsers: MCAddition, MCAncestry, etc.' id 'ac4ab442-79c0-d246-8dec-914be7ee5356' date '4 July 2019' time '4:32:40.854026 pm' author 'mt' ancestors ((name 'Collections-pre.837' message 'Extends the #asOctetString comment.' id '182f9f97-631a-064e-a5f8-c4d060b4253f' date '24 June 2019' time '1:52:53.529208 pm' author 'pre' ancestors ((name 'Collections-pre.836' message 'Moves two methods belonging to Morphic to that package.' id '317eb24c-8286-c44b-aea8-8cf2119fb38d' date '14 June 2019' time '8:26:00.375862 pm' author 'pre' ancestors ((name 'Collections-cmm.835' message '- Moved three methods belonging to Chronology to that package.' id '691806ad-7981-4e23-aad9-864eaf710a5a' date '25 May 2019' time '5:37:43.260101 pm' author 'cmm' ancestors ((name 'Collections-mt.834' message 'Replace the few sends to #valueWithPossibleArgument: with #cull: because there is no need to expect blocks with more than one argument to be filled with nils. Updates comments.' id '505856e5-ecbf-cf41-ab6d-ef0b7b3dd45b' date '21 May 2019' time '10:47:25.375822 am' author 'mt' ancestors ((name 'Collections-mt.833' message 'Second iteration of #take: (and #any:). #any: relates to #anyOne and thus signals an error if the collection is not large enough. #take: uses #any: but accounts for smaller collections.' id '44057ed3-9b55-0b49-8472-71d5c3fdbeeb' date '13 May 2019' time '9:46:28.73801 am' author 'mt' ancestors ((name 'Collections-mt.832' message 'Adds #take: to create a sub-collection from any collection by specifying the number of elements. Works like #first: for sequenceable collections but does not fail if collection is too small.' id 'b3c087f4-c2bc-d542-91d7-9c214ae3a97f' date '9 May 2019' time '3:27:06.069782 pm' author 'mt' ancestors ((name 'Collections-nice.831' message 'Fix two occurrences of addLast:times: that crept in since I proposed the deprecation.' id 'f1eda889-8e88-4e90-aca1-96620127ab63' date '7 May 2019' time '9:33:06.030048 am' author 'nice' ancestors ((name 'Collections-nice.830' message 'Merge: Collections-nice.829, Collections-nice.499Rename RunArray unique selector #addLast:times: as #add:withOccurrences: It''s a bit less expressive but it''s universal.Deprecate #addLast:times:After 6 years purgatory in inbox without further complaints, now is the last time I add an occurrence of this change.' id '3eccc0fe-9098-4c67-ad2b-78b02e5287e5' date '7 May 2019' time '9:25:17.144861 am' author 'nice' ancestors ((name 'Collections-nice.829' message 'Remove unused digitShiftSum: (since Kernel-nice.1224)' id '695419ed-754d-41ff-8b51-b8715934b1f5' date '3 May 2019' time '11:06:11.65639 pm' author 'nice' ancestors ((name 'Collections-fn.828' message 'Character shouldNotImplement postCopy.' id 'a663df49-93bf-413e-a942-29f1d0fa4605' date '29 April 2019' time '12:52:37.794699 pm' author 'fn' ancestors ((name 'Collections-nice.827' message 'Provide fastMultiply: helper #digitShiftSum:' id '6dd69760-fdb4-4e8c-8809-38a4fb90b11e' date '27 April 2019' time '10:34:08.261332 pm' author 'nice' ancestors ((name 'Collections-nice.826' message 'Fix bugs in LazyCharacterSetThe block instance variable should not refer to itself, or we''ll get an infinite recursion when evaluating.Thus when modifying the collection (#add: #addAll: #remove: #removeAll:), we must use a temporary reference to blockFix another typo bug in removeAll s/include:/includes:/Unfortunately, there was a Player>>#include: preventing an easy detection of the bugExample:	(CharacterSet separators complement reject: [:e | e isVowel])		removeAll: ($0 to: $9);		includes: $3.' id '116c66c9-4c34-5c4f-a9d9-c21d3141c5ea' date '25 April 2019' time '2:22:58.283343 pm' author 'nice' ancestors ((name 'Collections-fn.825' message 'Just like strings, characters should convert themselves to an integer when involved in arithmetic with a number.Example:$c < 98.9 "false"98.9 < $c "opened debugger, now returns true"' id '3110d8f6-fa38-4d91-8358-aed2eadbd9a7' date '12 April 2019' time '9:30:29.397159 am' author 'fn' ancestors ((name 'Collections-nice.824' message 'Implement Collection>>#log2, since it already responds to #ln and #log...Correct a Pharoism in DefaultSortFunction comment, there is no #threeWayCompareTo: because we prefer the space-ship operator <=>Correct a slip in LazyCharacterSet comment.Let ({1. 3/2. 2} as: Interval) work as it should.Remove Interval>>#remove: since it duplicates unecessarily super remove:ifAbsent: (which shouldNotImplement already).Don''t spend too much time sorting an Interval, it''s already sorted.' id 'e6d75dba-26a8-4945-a930-3d79f8cd4969' date '7 April 2019' time '10:40:26.559826 pm' author 'nice' ancestors ((name 'Collections-ul.823' message 'Fixed bug in Heap >> #upHeap:. When the first element of a Heap was removed, the index of the first object was not always updated.' id '2fef1e34-e45a-4f70-bb7b-56aa1c610df9' date '22 March 2019' time '12:04:40.596433 pm' author 'ul' ancestors ((name 'Collections-pre.822' message 'Adds #isMutator to Symbol which is analogous to asMutator.' id '483c4461-cee4-4a4f-82d3-fbc03e7201cc' date '20 March 2019' time '8:05:20.383677 pm' author 'pre' ancestors ((name 'Collections-dtl.821' message 'Classes are expected to be unique in the system, but in some cases (e.g. Magma) it is also useful to expect a proxy for a class to test equivalent to the actual class. Therefore, in SequenceableCollection>>= use #= rather than #== for the class comparison.' id '9bfa29b3-5e9f-4c61-b19b-e0bb05403589' date '16 February 2019' time '6:18:27.925895 pm' author 'dtl' ancestors ((name 'Collections-nice.820' message 'Definitively abandon SequenceableCollection equality tests based on equal species.Old behaviour can still be obtained thru hasEqualElements: but the default is to not try to support such trans-class equality feature because it is much too complex.Particularly Interval are no more equal to Arrays with same sequence. We can thus optimize hash a bit more and fix the old bugs of equa objects with different hashes. Merge Collections-cbc.813 for this and rehashAll in postscript.There are not so many classes concerned by this change, mainly RunArray, Interval and LinkedList:Collection withAllSubclasses select: [:e | [e basicNew species ~= e] on: Error do: [false]]-> an OrderedCollection(WeakRegistry LinkedList Interval ByteCharacterSet CharacterSetComplement LazyCharacterSet WideCharacterSet ShortRunArray Semaphore Mutex TextLineInterval WeakArray Monitor MCVersionName ByteSymbol WideSymbol)We will have to change the tests that rely on such equality.' id 'bb383133-067c-4133-987b-c481a7de69c7' date '12 February 2019' time '11:56:35.262017 pm' author 'nice' ancestors ((name 'Collections-ul.819' message '- merge sort tweaks' id '73993c05-fb6d-497a-9d99-2087eff4e1a4' date '3 February 2019' time '6:41:04.151586 pm' author 'ul' ancestors ((name 'Collections-pre.818' message 'Adds a isOfSameSizeCheck: analogous to the emptyCheck to be used to check whether an argument has the same size as the receiver.' id '75f53672-b087-3542-be05-41a072b91917' date '25 January 2019' time '5:54:07.601527 pm' author 'pre' ancestors ((name 'Collections-topa.806' message 'Fix separators to include U+00A0 (no break space)Thanks Ron!' id '46b95db5-a773-4113-92f0-5ee905404b49' date '12 September 2018' time '3:28:40.687052 pm' author 'topa' ancestors ((name 'Collections-cmm.805' message 'Goes with Morphic-cmm.1461 to provide access to TextIndent attributes from the alignment menu.' id '7c024534-7188-47c5-b5e8-41e6dccf91ea' date '31 August 2018' time '5:57:40.555042 pm' author 'cmm' ancestors ((name 'Collections-eem.804' message 'Fix TranscriptStream class>>redirectToStdOut: on "platforms" where stdout is not necessarily available (Windows).  The existing implementation raises an error on start up on these "platforms".' id 'e4fae5d7-2676-4f01-bc05-21ac3946d248' date '25 August 2018' time '3:03:35.102786 pm' author 'eem' ancestors ((name 'Collections-eem.803' message 'More rational Dictionary>>fillFrom:with: so that collect:as: Dictionary matches e.g. Dictionary withAll:Since 2010 Dictionary withAll: { 2->3 } =>  a Dictionary(2->3 ).But''abc'' collect: [ :each | each -> each asciiValue ] as: Dictionary => a Dictionary(1->$a->97 2->$b->98 3->$c->99 )With this change no tests appear to break (at least none that explicitly call collect:as:) and''abc'' collect: [ :each | each -> each asciiValue ] as: Dictionary => a Dictionary($a->97 $b->98 $c->99 )' id '86665c06-0176-4eb8-b9dd-2b8dc3677fd6' date '21 August 2018' time '2:09:17.558296 pm' author 'eem' ancestors ((name 'Collections-dtl.802' message 'Change Text class>>string:runs: to call setString:setRunsChecking: instead of setString:setRuns: to prevent creating a Text with run length not matching string length. This fixes the problem originally reported by Tim Johnson in http://lists.squeakfoundation.org/pipermail/squeak-dev/2018-July/199461.htmlAdd patch by K K Subbu to fix instantiating text when the string and the runarray are of mismatched lengths. This allows a filein to retain text attributes even if the runarray does not match the string length, as may be the case for a fileIn that had been edited externally (otherwise the text will be converted to a string without the intended attributes).Name: Collections-kks.803Author: kksTime: 14 July 2018, 11:14:34.247017 pmUUID: c6ea08ba-fcdd-46f8-89c0-c61d0d524531Ancestors: Collections-dtl.802Attempt to retain as much styling as possible while filing in text from streams where the runs may fall short or extend beyond the string.Based on Bob''s suggestions at http://lists.squeakfoundation.org/pipermail/squeak-dev/2018-July/199530.html' id '95497d30-f52f-4f82-ac8c-3e65cfa30df1' date '19 July 2018' time '12:40:11.186143 am' author 'dtl' ancestors ((name 'Collections-cmm.801' message 'It turns out better and more consistent for String>>#condensedIntoOneLine to do a uniform conversion than trimBlanks.' id 'dbaa6e91-604d-4f66-aef8-9c1900c499a7' date '15 July 2018' time '4:33:18.797462 pm' author 'cmm' ancestors ((name 'Collections-ul.800' message 'Character changes:- deprecated #characterTable- removed the CharacterTable class variable- store ClassificationTable data in a WordArray (reinitialized by the package postscript)- use self to create character constants (#euro, #nbsp)String optimizations for- #findFirstInString:inSet:startingAt:- #isAllDigits- #isOctetString' id '369bd2ae-d7b3-40cd-acbd-b731aee61d94' date '2 July 2018' time '11:44:52.435558 pm' author 'ul' ancestors ((name 'Collections-ul.799' message '- use ifNil:ifNotNil: & friends instead of isNil ifTrue:, == nil ifTrue, etc' id 'b0bbc442-2e2b-4d95-8b44-c3d9c504eae3' date '2 July 2018' time '8:56:32.531434 pm' author 'ul' ancestors ((name 'Collections-ul.798' message 'HashedCollection changes:- added 3, 7 and 13 to #goodPrimes. These will mainly be used during compaction as the default grow sequence is 5, 11, 17, etc..- improved performance of #goodPrimeAtLeast: by reordering comparisons- finally deprecated #findElementOrNil: and #fullCheckSequenceableCollection changes:- improved performance of #findBinary* methods by reordering comparisons and postponing index calculation- did the same in SortedCollection >> #indexForInserting: along with using #ifNil:ifNotNil:' id '8ed17235-fb2c-4453-9e6e-977d6d838cac' date '2 July 2018' time '8:52:05.858045 pm' author 'ul' ancestors ((name 'Collections-cmm.797' message 'Added String>>#condensedIntoOneLine to support new editing hot key.' id '00fa2143-c85b-4a5c-9615-2c45ae597af6' date '1 July 2018' time '6:04:20.270181 pm' author 'cmm' ancestors ((name 'Collections-ul.796' message '- added missing return to ByteCharacterSet class >> #fromMap:' id 'f657f34e-d277-4433-b106-f661ef3eef1e' date '18 May 2018' time '12:37:42.876883 pm' author 'ul' ancestors ((name 'Collections-mt.795' message 'Fixes an endless-loop bug as well as adds support for hrefs without quotes in the HtmlReadWriter.' id 'ce581475-faa1-3446-978c-84ef85a10d63' date '17 May 2018' time '8:08:41.389712 am' author 'mt' ancestors ((name 'Collections-nice.794' message 'Provide CharacterSet includesCode: and also ASCII and non ASCII maps.' id '1ffc2862-2360-4a20-876b-782ae5cb72f5' date '4 May 2018' time '12:48:13.071978 am' author 'nice' ancestors ((name 'Collections-eem.793' message 'revert' id '9e90b3ee-26a8-44d7-850c-e7b0c54fe0a6' date '3 May 2018' time '10:36:26.780414 am' author 'eem' ancestors ((name 'Collections-eem.792' message 'Four times faster implementation of isAsciiString.' id '7d8995ed-835e-44b0-bf4c-0b0780f5c96f' date '3 May 2018' time '12:55:52.175146 am' author 'eem' ancestors ((name 'Collections-pre.791' message 'Deprecates the RFC2047 class as the name is too formal. It is replaced by the QEncoding converter.' id 'f5f76ffb-064c-6e4e-a1ac-c660d0e1fb57' date '30 April 2018' time '3:49:17.014101 pm' author 'pre' ancestors ((name 'Collections-pre.790' message 'Updates the q encoding converter to be able to encode header values. Beyond this there seems to be an issue regarding the separation of concerns between String and this converter. Currently the decoding happens mostly in String while the encoding happens in the MimeConverter.' id '24dbc4a0-d944-a942-a1d5-d8ef264cac5d' date '30 April 2018' time '3:40:58.440101 pm' author 'pre' ancestors ((name 'Collections-pre.789' message 'Implements the rusty and dead mimeEncode method for QuotedPrintableMimeConverter. Refactors some of the RFC2047 code.' id 'addaf36c-be0c-444f-bc50-074f2e57533e' date '30 April 2018' time '1:25:47.613117 pm' author 'pre' ancestors ((name 'Collections-pre.788' message 'Adds a Bit7 MIME converter which is kind of essential but was missing from the previous MIME converter addition commit.' id '1c0f801e-7fa9-3f40-b692-8c673163b377' date '30 April 2018' time '11:26:48.275837 am' author 'pre' ancestors ((name 'Collections-bf.787' message 'Allow to write Strings to binary WriteStream.' id 'ed53996c-b8a6-40b7-a186-37ec55737b62' date '26 April 2018' time '1:25:29.283438 pm' author 'bf' ancestors ((name 'Collections-pre.786' message 'Adds the convenience function for choosing a MIMEConverter and a NullMimeConverter' id '749ef5a4-6cb3-884d-a03d-226d0072660a' date '20 April 2018' time '10:03:48.482703 am' author 'pre' ancestors ((name 'Collections-cmm.785' message 'Add #at:ifPresent:ifAbsent: for API compatibility with other kinds of directly-accessible Collections.' id '37e9870a-5379-4185-8538-fada710dad5d' date '30 March 2018' time '5:57:37.727038 pm' author 'cmm' ancestors ((name 'Collections-eem.784' message 'Provide more efficient implementation(s) of at:ifPresent:ifAbsent: given impending use in the Compiler.' id '1862bd2e-3307-4973-b7b1-c8f6ad8d5f53' date '9 March 2018' time '5:18:51.529302 pm' author 'eem' ancestors ((name 'Collections-ul.783' message 'WeakIdentityKeyDictionary changes:- implemented #slowSize to be able to count of actually stored associations- overridden #compact to cut tally back based on #slowSize- compact the dictionary after removing unreferenced keys in #removeUnreferencedKeysThis all will ensure that if Undeclared is empty, then #isEmpty will return true after Smalltalk cleanOutUndeclared is executed.' id '3cb7824b-9833-4ab9-bbac-66e36049b6ed' date '5 March 2018' time '10:52:44.810023 pm' author 'ul' ancestors ((name 'Collections-ul.782' message '- various minor tweaks' id 'e2bb4a8b-6a0e-4342-b347-4f2226460a85' date '5 February 2018' time '9:00:26.138464 pm' author 'ul' ancestors ((name 'Collections-mt.781' message 'For the ReleaseBuilder, adds setter for #characterLimit Transcript preference.' id 'c0e03e0a-31fe-384d-bc46-71aff7946d0f' date '26 January 2018' time '7:41:59.694036 am' author 'mt' ancestors ((name 'Collections-mt.780' message 'Adds convenience API to Text that matches the one in String. Reduces the need for #asString is many cases. Look into Text''s protocol "Converting" so see what we already have in this regard.This is basically a tooling thing where texts (i.e. formatted strings) appear in places where you would just work with the String API.' id '20b43cba-f50d-4f4c-97f7-85d93f6bd4f5' date '25 January 2018' time '8:17:31.08605 am' author 'mt' ancestors ((name 'Collections-eem.779' message 'Fix bytesPerBasicElement for Spur.' id '36376941-8dc4-4b3c-8935-f2839a6321c1' date '20 December 2017' time '12:47:12.586523 am' author 'eem' ancestors ((name 'Collections-mt.778' message 'Fixes lazy initialization of byteArrayMap. I renamed "initialize" to "create" because I thought that (1) a special return value of an initialize method would be surprising and (2) the accessor for #byteArrayMap should remain concise.' id 'b85b1a4a-983f-e847-932d-fa9b6ff0a24f' date '14 December 2017' time '11:09:04.741531 am' author 'mt' ancestors ((name 'Collections-nice.777' message 'Clean up leftovers in CharacterSet and SortFunction' id '4e267cfa-394e-4767-bcac-9c6937b8ed09' date '1 December 2017' time '9:37:36.392066 am' author 'nice' ancestors ((name 'Collections-nice.776' message 'Rename AbstractCharacterSet->CharacterSetThis is Part 2.- remove AbstractCharacterSet- recycle existing CharacterSet as abstract  (it previously was byte-CharacterSet but instances have been migrated to ByteCharacterSet in step 1)- keep byteArrayMap instance variable in abstract class, because all CharacterSet can have a map usable for accelerated primitive.- make CharacterSet a factory- clean-up ByteCharacterSet now that it is hooked back as a CharacterSet subclassNote: now CharacterSet allCharacters will return a Set with all characters, including the wide Characters.If you want only the byte characters, then use ByteCharacterSet allCharacters.' id '0682d8f2-1e46-4d55-be53-ed1efc8873cc' date '1 December 2017' time '2:42:56.081887 am' author 'nice' ancestors ((name 'Collections-nice.775' message 'Rename CharacterSet -> ByteCharacterSetThis is step 1:- create a parallel ByteCharacterSet- then mutate CharacterSet instances -> ByteCharacterSet in postscript' id '5ef7a80c-6213-4e8e-8f0c-b45e110ce15e' date '1 December 2017' time '1:25:19.882602 am' author 'nice' ancestors ((name 'Collections-nice.774' message 'Fulfill gratuitous ANSI expectation about(1 to: 2) readStream contents classThis will fix ReadStreamTest>>#testContents2 that I broke with my implementation of Interval>>copyFrom:to:.The expectation:either contents answers the interval itself (please tell me why a shallow copy would not be acceptable???) or it answers same class as select: (that would be the interval species).' id 'd8c8b26f-2bca-438d-9b75-b929e5290df3' date '1 December 2017' time '12:08:06.998278 am' author 'nice' ancestors ((name 'Collections-nice.773' message 'Let Collection withAllSubclasses someSatisfy: #isAbstract. That may help some initializedInstance.Provide a well behaved Interval initializedInstance.' id 'ada0362a-409d-4c86-8929-52acda17d6f8' date '30 November 2017' time '11:32:28.759622 pm' author 'nice' ancestors ((name 'Collections-nice.772' message 'Fix the CharacterSet failures that I just createdI would have sweared that I ran the tests...Not all the tests? Embarassing...' id 'e43714c3-3e4c-4502-bb00-75852da33184' date '30 November 2017' time '10:30:07.12046 pm' author 'nice' ancestors ((name 'Collections-nice.771' message 'Fix awfully broken CharacterSetComplement select:/reject:If we want to select:/reject:, we must not only enumerate the absent characters, but rather all the characters in the complement.That''s way two many, thus we prefer to do it with a LazyCharacterSet, anything else is unfeasible (we don''t even know the upper limit of the set of characters...).Introduce an AbstractCharacterSet superclass of all the CharacterSet family in order to begin factoring some behavior.TODO: we should better renameCharacterSet -> ByteCharacterSetAbstractCharacterSet -> CharacterSet.We delay this quite technical operation, because we don''t want to break existing instances, AND we want to redirect (Byte)CharacterSet references to (Abstract)CharacterSet, the Abstract one becoming a factory.' id 'd8b64711-6119-429b-b3f5-259b46ef864b' date '30 November 2017' time '9:57:27.873964 pm' author 'nice' ancestors ((name 'Collections-nice.770' message 'Let CharacterSet union: work as expected and answer a (Wide)CharacterSet(Complement) when possible.' id 'bab44976-95d4-e142-a0f7-eb954c3c237c' date '30 November 2017' time '6:01:07.729917 pm' author 'nice' ancestors ((name 'Collections-tpr.769' message 'Minor changes relating to FilePath use' id 'be0bba64-3ddd-45fa-8627-c842ab821515' date '27 November 2017' time '4:16:19.721254 pm' author 'tpr' ancestors ((name 'Collections-nice.768' message 'Merge (revised SortFunction + Transcript characterLimit)' id '3431c5cc-a7a1-4317-b07d-24a59bd26bb0' date '26 November 2017' time '10:39:18.783084 pm' author 'nice' ancestors ((name 'Collections-eem.767' message 'Make the Transcript''s characterLimit a preference.' id '9705b40c-d81d-4667-b9eb-fbfccbe2e955' date '14 November 2017' time '11:29:19.620473 am' author 'eem' ancestors ((name 'Collections-bp.766' message 'move method to the EToys package in order to break the introduces dependency from Collections to EToys again' id 'bdbd2235-fc3c-4754-b390-84ecd1b03efa' date '6 November 2017' time '9:21:14.115712 pm' author 'bp' ancestors ((name 'Collections-bp.765' message 'Bring back String>>#replaceHtmlCharRefs from Squeak3.4 to make HtmlParser work again.' id '5207defa-6a76-4177-93d0-b5a6806b805e' date '22 October 2017' time '9:52:05.334068 pm' author 'bp' ancestors ((name 'Collections-topa.764' message 'Improve #initializedInstance and #empty for certain collections' id '8b1c780c-c4fb-4a8c-baac-050c5a3e67c2' date '14 October 2017' time '1:30:58.746815 pm' author 'topa' ancestors ((name 'Collections-pre.763' message 'Merges Collections-tonyg.734 which fixes Mantis #4665 and deals with the difference in counting at the public interface of streams and counting the steps in the underlying buffer.' id 'ffff1838-0f68-9e49-bd57-6263eaebd8d7' date '31 August 2017' time '3:14:26.5764 pm' author 'pre' ancestors ((name 'Collections-pre.762' message 'Changes the HTMLReadWriter to deal correctly with nested tags and their mapping to text attributes. Also adds a comment to the class.' id 'd7838b91-7ce4-c34c-ac5a-c46cee281140' date '29 August 2017' time '4:50:11.458834 pm' author 'pre' ancestors ((name 'Collections-bf.761' message 'Remove ByteArray>>at:put: and fix the fallback code in ByteArray>>#replaceFrom:to:with:startingAt: to match prim 105' id '5b68150c-4eb0-4210-9fac-c4aa09623b6d' date '20 July 2017' time '12:42:02.196604 pm' author 'bf' ancestors ((name 'Collections-eem.760' message 'Make Interval>>, answer another Interval if possible, so that (1 to: 2), (3 to: 4) answers (1 to: 4) not #(1 2 3 4).Correct a misapprension in String>>hash.Use the preferred var:type: and nuke an unused declaration in some translated primitives.' id '622a9db4-e0d8-4c28-886a-d9b71a8fac49' date '12 July 2017' time '5:29:57.850345 pm' author 'eem' ancestors ((name 'Collections-pre.759' message 'OrderedDictionary was missing the simple last selector.' id '730c33f1-c2a6-a246-9795-6d2c28af6005' date '30 June 2017' time '11:39:43.025092 am' author 'pre' ancestors ((name 'Collections-eem.758' message 'Deprecate addNewElement:' id '19a4f20b-1ac9-4bed-9262-1cab35e89afd' date '23 June 2017' time '12:06:10.238234 pm' author 'eem' ancestors ((name 'Collections-eem.757' message 'Add Set>>ifAbsentAdd: as a better named equivalent of addNewElement:.Reimplement withoutDuplicates using ifAbsentAdd:.Add the obvious Set-specific implementation of addIfNotPresent:.Fix a bug with RunArray>>=; the old code would error if compared against other than a collection.' id 'bdb8992f-4170-46e3-a573-f2bb4cd7a2af' date '23 June 2017' time '11:32:54.271499 am' author 'eem' ancestors ((name 'Collections-eem.756' message 'Add SequenceableCollection>>withoutDuplicates for a more elegant fix to MailMessage>>to:' id '8d7c03bc-1cdb-44c7-9173-10d50c0dae29' date '14 June 2017' time '11:03:24.917631 am' author 'eem' ancestors ((name 'Collections-eem.755' message 'Fix withoutTrailingDigits for e.g. ''Lucida Grande 15'' withoutTrailingDigits.  Harvested from Terf.' id 'b20639f6-1b01-45b5-8311-6abe8fad12c7' date '25 May 2017' time '3:30:29.925042 pm' author 'eem' ancestors ((name 'Collections-nice.754' message 'MergeCollections-ul.753:	- minor tweaks for String class >> #compare:with:collated: and String >> #findSubstring:in:startingAt:matchTable:Collections-nice.753:	Nuke obsolete brace constructs used by compiler long long ago.Since encoder v3 (plus closures) there is a dedicated byte code for constructing those arrays dynamically, so the #braceWith: like messages are not sent for a while and won''t be used anymore in foreseeable future.' id '5845f4e7-535d-4be0-9579-e925731e8dab' date '5 May 2017' time '10:19:34.289321 pm' author 'nice' ancestors ((name 'Collections-ul.753' message '- minor tweaks for String class >> #compare:with:collated: and String >> #findSubstring:in:startingAt:matchTable:' id '9c169c46-7fca-4bd9-a1d2-12ebd52b93a8' date '27 April 2017' time '12:08:58.187065 am' author 'ul' ancestors ((name 'Collections-nice.752' message 'Classify a few ''as yet unclassified'' methods' id 'd3620c7a-7ead-43fb-93ee-21dce320c7eb' date '26 April 2017' time '10:54:03.973466 pm' author 'nice' ancestors ((name 'Collections-ul.751' message '- removed implementations of #clone' id 'e526dee8-c2dc-4f9e-8b5d-96cd22f1e24b' date '25 April 2017' time '6:55:32.620027 pm' author 'ul' ancestors ((name 'Collections-ul.750' message 'SequenceableCollection changes: - #indexOfSubCollection:startingAt:ifAbsent: sends indexOfSubCollection:startingAt:- fix: #identityIndexOf:startingAt:ifAbsent: didn''t use startIndex' id '766fe870-89dd-455b-b0e9-8b14c7ab8548' date '24 April 2017' time '3:36:04.668235 pm' author 'ul' ancestors ((name 'Collections-ul.749' message '- rewrote senders of #clone to use #shallowCopy' id '455e6beb-40fe-41a4-a35e-675211c77f10' date '24 April 2017' time '1:00:31.346232 pm' author 'ul' ancestors ((name 'Collections-ul.748' message '- merged with Collections-ul.743- ArrayedCollection >> #mergeSortFrom:to:by: signals errors instead of assertion failures and uses #shallowCopy instead of #clone- optimized Heap >> #removeFirst and SequenceCollection >> #beginsWith:' id '834a2107-7087-42e3-a165-edc40a9f65f7' date '23 April 2017' time '6:01:07.769449 pm' author 'ul' ancestors ((name 'Collections-pre.747' message 'changes decoding of mime headers to decode directly to squeak encoding' id '6fe02314-e789-064a-b678-0caec3506aac' date '20 April 2017' time '11:37:10.168994 am' author 'pre' ancestors ((name 'Collections-eem.746' message 'Nuke the pointless override of ByteSString class>>stringHash:initialHash: in ByteSymbol class.  Rewrite the non-byte version to use the hashMultiply primitive.' id '8d9adaca-1401-4323-974f-1aed16ae3688' date '18 April 2017' time '2:10:45.148995 pm' author 'eem' ancestors ((name 'Collections-eem.745' message 'Clarify the two primitiveStringHash uses.  The one in ByteArray class is translated to a primitive in MiscPrimitivePlugin.  The one in ByteString class is not; it uses the translated primitive derived from ByteArray class>>hashBytes:startingWith:.(N.B. Requires a soon-to-be-committed change to VMMaker to accet the int decl for speciesHash.")' id 'c26d3130-3164-4fdb-b302-858a554d8d8d' date '18 April 2017' time '11:39:44.905833 am' author 'eem' ancestors ((name 'Collections-eem.744' message 'Regularize literal printing for the Collection literal classes (which include Character).  Replace the idiosyncratic forms storeAsLiteralByteArrayOn: and printAsLiteralFormOn: with printAsLiteralOn:.Assums Kernel-eem.1082 or later.' id 'a4dd8fb1-e4df-4031-b093-12296c5862f8' date '3 April 2017' time '4:06:10.757097 pm' author 'eem' ancestors ((name 'Collections-eem.743' message 'Replace mention of MethodContext with Context in class comments as appropriate.' id 'c8c62336-051e-4025-82d1-7dc2bebe4b6e' date '30 March 2017' time '6:02:18.123591 pm' author 'eem' ancestors ((name 'Collections-ul.742' message '- minor tweaks in String >> #alike: and Symbol class >> #hasInterned:ifTrue:' id 'e13a7666-393a-49e3-ae8f-3fd24d09cb69' date '13 March 2017' time '3:48:27.984404 am' author 'ul' ancestors ((name 'Collections-ul.741' message '- trimmed some more #ifAbsent: sends' id 'aca328b5-8334-400c-b7d9-9bf1ce83f49f' date '12 March 2017' time '10:38:18.989253 pm' author 'ul' ancestors ((name 'Collections-fn.740' message 'HtmlReadWriter: Add support for style attributes in div and span containers and numberic HTML entities.' id '1133e89d-10ca-4fa1-a98c-c1082fd360e6' date '7 March 2017' time '10:49:27.466847 am' author 'fn' ancestors ((name 'Collections-ul.739' message '- use micro optimization for #~~ and #notNil in common collection methods- reuse one of the OrderedCollections in RunArray >> #scanFrom:- two other minor tweaks in KeyedSet- removed accidentally commited Set >> #includes2:' id '66c6ecf2-71bf-4e7d-80e6-5ace72fa19ba' date '28 February 2017' time '7:34:55.711173 pm' author 'ul' ancestors ((name 'Collections-ul.738' message 'Part #3 of Improve SequenceableCollection''s index-related search methods- fixed typo in #indexOf:startingAt:ifAbsent:- trimmed unnecessary #ifAbsent: sends- improved a few methods' id '3cdaac93-5a62-4fb6-8037-4323767c63a1' date '27 February 2017' time '12:50:24.923499 am' author 'ul' ancestors ((name 'Collections-ul.737' message 'Part #2 of Improve SequenceableCollection''s index-related search methods- rewrote remaining #indexOf*ifAbsent: implementations in SequenceableCollection- removed remaining #indexOf*ifAbsent: implementations from subclasses- implemented correct variant of #indexOfSubCollection:startingAt: in String (''abc'' indexOfSubCollection: #[98] startingAt: 1 ifAbsent: [ 0 ] returns 0 instead of 2)' id '8c9af190-2eba-4c9c-98d6-65aab3850908' date '26 February 2017' time '11:57:55.668118 pm' author 'ul' ancestors ((name 'Collections-ul.736' message 'Part #1 of Improve SequenceableCollection''s index-related search methods- moved actual implementations (in subclasses too) to block-free methods: #indexOf:startingAt:, #identityIndexOf:startingAt:, #indexOfAnyOf:startingAt:, #indexOfSubCollection:startingAt:, #lastIndexOf:startingAt: and #lastIndexOfAnyOf:startingAt:- added #identityIndexOf:startingAt:, #identityIndexOf:startingAt:ifAbsent:, #lastIndexOfAnyOf:, #lastIndexOfAnyOf:ifAbsent:- removed the now unnecessary #indexOf: override from ByteArray ans String- pulled up #indexOfSubCollection: from String- improved #replaceAll:with:' id '81b6c60e-5ac9-4fd9-a53e-ba9259958a1d' date '26 February 2017' time '9:40:39.679834 pm' author 'ul' ancestors ((name 'Collections-ul.735' message '- merged Collections-tonyg.733.1- Character >> #isSeparator''s old version''s big comeback with improved comment and performance (25% faster on cog_linux64x64_squeak.cog.spur_201702211732).' id '69162a09-6a34-44b2-9a07-5a43e2020df6' date '25 February 2017' time '11:13:28.853237 pm' author 'ul' ancestors ((name 'Collections-eem.734' message 'Eliminate the ugly hack to speed up stream wide character writes.  The trade-offs with Spur have changed and the cure is now arguably worse than the disease.  The VM no longer supports the primitive (since it cannot be sufficiently polymorphic).  hence the hack is paid for on every write but pays off only on wide chaacter writes to byte strings.  Now that Spur''s become is much faster than V3 let''s accept that the writing of a wide character to a byte string stream won''t be as fast, since all other stream writes will be.Slightly faster (and correctly commented) version of isSeparator.' id 'a81dce52-1da2-4c87-b8a7-fd6bf485396b' date '24 February 2017' time '3:51:29.783168 pm' author 'eem' ancestors ((name 'Collections-topa.733' message 'HtmlReadWriter: Support alignment, strike through' id '98316bc6-4edd-4b8c-aae9-16d87505b8e9' date '10 February 2017' time '5:21:27.588874 pm' author 'topa' ancestors ((name 'Collections-topa.732' message 'TextAttributes: - allow for attributes that should be treated as blocks   even if they appear adajcent due to mixing with other attribues  (Indent, Align, DoIt/PrintIt) - make DoIt/PrintIt _not_ appear Purple but just add underlining    to existing (mabye shout-generated) attributes. - let TextAction>>analyze: accept things like ''3 > 4''. (Previously disallowed) - make DoIt/PrintIt be written AND read with HtmlReadWriter.    Convention for both ways:      - single-line DoIt/PrintIts are wrapped in ''<code>...</code>''     - multi-line DoIt/PrintIt are wrapped in''<code><pre>..</pre></code>''     - line-breaks within DoIt/PrintIt are not converted to ''<br>'' and vice versa.HtmlReadWriter - emulates a WriteStream, so openHtmlOn: can be fed the HtmlReadWriter for configuration (eg, of line breaks). - honors the new blockish attributes.Co-authored by Bert Freudenberg.' id 'fd95461f-6d7f-4f24-b57a-dcc23e75cdb9' date '9 February 2017' time '7:47:59.962131 pm' author 'topa' ancestors ((name 'Collections-dtl.731' message 'Merge Collections-monty.714' id '35b44f6d-37d7-47b0-a30e-7792cbf86e52' date '7 February 2017' time '7:39:36.894882 pm' author 'dtl' ancestors ((name 'Collections-ul.730' message '- merge' id '960b46c2-39af-42c0-8855-92413ba0dbda' date '25 December 2016' time '4:19:28.820055 pm' author 'ul' ancestors ((name 'Collections-ul.729' message '- minor OrderedCollection optimizations' id 'dedb0ac7-ea11-42b9-8a91-2839a52866c7' date '25 December 2016' time '4:16:33.349302 pm' author 'ul' ancestors ((name 'Collections-nice.728' message 'Merge Collections-nice.723 (WeakIdentityDictionary)' id 'fcb31400-a826-4642-8ad1-83c813998ba9' date '14 December 2016' time '8:01:20.748497 pm' author 'nice' ancestors ((name 'Collections-ul.727' message '- micro-optimized OrderedCollection''s #first, #last, #removeFirst and #removeLlast' id '08250fa9-de61-4316-a96e-c2e4d3e53d1a' date '6 December 2016' time '7:01:42.838977 pm' author 'ul' ancestors ((name 'Collections-topa.726' message 'Adopt improved (ie, actually working) Linked List from our relatives.' id '8409fe6a-d5ea-4d4e-ac78-243182dd1fd7' date '6 December 2016' time '2:31:08.021296 pm' author 'topa' ancestors ((name 'Collections-topa.725' message 'Fix a few comments' id 'd521fd18-86b5-42ce-8c74-475031b54934' date '5 December 2016' time '8:58:22.49114 pm' author 'topa' ancestors ((name 'Collections-eem.724' message 'The various scanFor: and scanForEmptySlotFor: implementations only need to access the size of their array once.Fix protocol for an #=' id '83cb6b85-2b47-4c92-a953-e3787a19d53b' date '3 December 2016' time '9:30:36.13835 am' author 'eem' ancestors ((name 'Collections-eem.723' message 'Provide a default bytesPerElement that accords with reality.' id '470b6823-5711-407f-bdf3-ae2d7585fcba' date '18 November 2016' time '4:48:38.535448 pm' author 'eem' ancestors ((name 'Collections-nice.722' message 'Improve anyOne: don''t perform an emptyCheck before extracting any element, that''s useless: anyOne is an empty check by itself ;). Extract first if we can, then error if we can''t.Correct DoubleByteArray comment (it''s not HalfWordArray anymore)' id 'e951d8a8-3e64-4f5c-821a-6aad7a1955c4' date '26 October 2016' time '12:27:56.637026 am' author 'nice' ancestors ((name 'Collections-eem.721' message 'Comment an unexpectedly controversial method.' id '2bb84a66-90fc-4430-8da4-509fef3d7eb4' date '25 October 2016' time '1:52:30.584675 pm' author 'eem' ancestors ((name 'Collections-nice.720' message 'Change implementation of isEmpty to not rely on size by default, because size could be slow (default implementation enumerates the whole collection) or even infinite.Provide implementation in subclasses in order to preserve efficiency.' id '7018ec94-c3e6-4cfe-b087-11f110445aa0' date '22 October 2016' time '2:39:21.705933 pm' author 'nice' ancestors ((name 'Collections-nice.719' message 'Let reversed preserve Interval class.Handle the case of empty Interval specially (preserve the bounds).' id 'a873d200-0ee0-4297-aebd-510f92ea243c' date '20 October 2016' time '10:28:18.384751 pm' author 'nice' ancestors ((name 'Collections-nice.718' message 'Merge nice-717 for providing HalfWordArray and DoubleWordArrayRename HalfWord -> DoubleByte according to Eliot''s protocol' id '13d0b4c6-3da0-48a4-bf4e-789740593810' date '20 October 2016' time '10:23:53.462294 pm' author 'nice' ancestors ((name 'Collections-nice.717' message 'Introduce HalfWordArray and DoubleWordArray for positive 16 bits and 64 bits integer elements.' id 'f94b2210-9435-4dce-81d4-fe6fb57b3ec7' date '21 September 2016' time '9:43:43.472517 pm' author 'nice' ancestors ((name 'Collections-dtl.716' message 'Merge Collections-dtl.715, Collections-tfel.715' id '33e9eb9e-1da0-49a7-9840-9770305ec0d4' date '29 August 2016' time '8:02:18.941698 pm' author 'dtl' ancestors ((name 'Collections-dtl.715' message 'When the redirectToStdOut preference is enabled, let the standard output stream be a view on the Transcript. Flush output to stdout on endEntry. Make cr and lf work for the stdout view. Permit other views to continue functioning normally in the image, with the standard output as an additional view.' id '7d00851c-8dae-4128-9550-138e30c644f5' date '27 August 2016' time '11:16:53.919203 pm' author 'dtl' ancestors ((name 'Collections-ul.714' message 'SequenceableCollection>>copyReplaceAll:with:asTokens:- return a copy in all cases- avoid quadratic performance when many replacements have to be doneAttributedTextStream:- avoid creation of unnecessary objects during initialization- use default size 10Don''t let #next:putAll:startingAt: roll back the receiver when the first argument is negative.' id '88200af6-48e5-4ae3-a247-a0b5a74985bf' date '24 August 2016' time '9:22:59.948045 pm' author 'ul' ancestors ((name 'Collections-mt.713' message 'Revert previous change because Collections have no dependency on System.' id '9ae54fc6-0cc6-f243-abd7-b2510484603c' date '17 August 2016' time '5:53:25.818397 pm' author 'mt' ancestors ((name 'Collections-mt.712' message 'Quickfix: Due to some hick-ups with clickable text actions and mouse (up) events, process do-it actions as deferred message. For example, if you open windows in a do-it, those windows will now be at the top again.(Note that we should think about fixing TextEditor >> #mouseDown: and NewParagraph >> #clickAt:for:controller: later.)' id 'df56cb06-3e8b-3444-aeae-194a531f000a' date '17 August 2016' time '4:57:14.736674 pm' author 'mt' ancestors ((name 'Collections-mt.711' message 'Appendix to System-mt.897' id '050b17d5-24f7-bd41-abcc-8c1b4839170a' date '16 August 2016' time '3:32:21.426602 pm' author 'mt' ancestors ((name 'Collections-mt.710' message 'To avoid code duplication, add a simple attribute check to texts (in addition to #unembellished).' id 'dd858f23-f52e-0440-af76-9431683dd8e9' date '13 August 2016' time '1:04:17.836735 pm' author 'mt' ancestors ((name 'Collections-mt.709' message 'Preference help text updates. Thanks Tim R.!' id 'be99cb4b-3143-1c48-8258-5df83e13745e' date '13 August 2016' time '9:19:13.299008 am' author 'mt' ancestors ((name 'Collections-mt.708' message 'When analyzing the input string to add a text url, give the user a chance to verify and correct the result. (Use to update help texts for the release.)' id 'cdf7485c-7680-c04f-8808-5b3c84619133' date '12 August 2016' time '1:31:36.259343 pm' author 'mt' ancestors ((name 'Collections-mt.707' message 'Deprecate #sortBy:.' id '08096a9d-2908-cb43-9f45-47106e6f1eb5' date '12 August 2016' time '10:24:25.707343 am' author 'mt' ancestors ((name 'Collections-mt.706' message 'Consider UI theme for colorizing text actions.' id '345741f6-24ee-ab49-891f-ae8fa3954ea2' date '11 August 2016' time '4:42:16.852564 pm' author 'mt' ancestors ((name 'Collections-mt.705' message 'Fix two small bugs in HTML parser regarding strings in tag properties and href contents.' id 'fbaaa045-4df3-c746-9de5-d8102495a1e3' date '11 August 2016' time '4:29:13.490564 pm' author 'mt' ancestors ((name 'Collections-mt.704' message 'In preparation for showing the release notes on a help page, make TextReadWriter interface more like ImageReadWriter interface.' id 'bc70536e-2c54-5247-acc6-3422b7d7c748' date '11 August 2016' time '2:58:37.39736 pm' author 'mt' ancestors ((name 'Collections-mt.703' message 'Small fix for SWiki HTML parsing. Recognize also non-hash color names. Our Color class is fine with it, too.' id '32b3f850-392c-9a4d-b0cb-7e1ed37c9bc6' date '2 August 2016' time '10:05:41.089882 am' author 'mt' ancestors ((name 'Collections-mt.702' message '*** Widget Refactorings and UI Themes (Part 2 of 11) ***Simplify window colors and prepare them and other properties of system windows to be themed.' id 'b1aa2c6f-bf2f-a642-ae79-6d85d806a417' date '31 July 2016' time '10:34:09.51149 am' author 'mt' ancestors ((name 'Collections-topa.701' message 'Add an Ascii85 converter akin to Base64MimeConverter' id '5ae1b44b-94ef-4657-a76e-387509401f08' date '10 July 2016' time '9:00:58.083099 pm' author 'topa' ancestors ((name 'Collections-eem.700' message 'Better error messages for primitive failure of one-way become.  Set lastChar in TranscriptStream (does this really belong in Collections?) when resetting.' id '3761f170-2d94-4ed1-bf3d-1790217dc3d3' date '7 July 2016' time '11:10:35.817225 am' author 'eem' ancestors ((name 'Collections-eem.699' message 'Fix growth on become failure due to insufficient memory.' id 'b82a57a1-a212-4ebe-a738-59abebf9a380' date '23 June 2016' time '4:28:17.428149 pm' author 'eem' ancestors ((name 'Collections-ul.698' message 'Heap revamp #3:- Heap is a subclass of Collection instead of SequenceableCollection.- Heap has it''s own category Collections-Heap; just like how it is with Stack.- Updated class comment.' id 'cf02bd5c-5cfa-499c-88df-c00ae1760a38' date '2 June 2016' time '11:47:32.688405 pm' author 'ul' ancestors ((name 'Collections-ul.697' message 'Heap revamp #2.Deprecated the now unusued #fullySort, #reSort, #sorts:before:, #trim and #updateObjectIndex:Bonus: do not re-sort the receiver of SortedCollection >> #sortBlock: when it only has one element.' id '4d7d52f4-cdbb-423f-9923-aee902c885b0' date '2 June 2016' time '8:31:09.211811 pm' author 'ul' ancestors ((name 'Collections-ul.696' message '- added #quickSort and #quickSort: to ArrayedCollection' id '0ec3a2e6-cd17-46b2-970f-2c1dc1227411' date '2 June 2016' time '5:58:47.938458 pm' author 'ul' ancestors ((name 'Collections-ul.695' message 'Heap revamp #1:class side:- Heaps can be created on an existing array with #on: #on:size: and #on:size:sortBlock:- #withAll: and #withAll:sortBlock: avoid creating an extra copy if the argument is already an Arrayinstance side:- imported and improved #= from Pharo- #growTo: won''t raise an error when newSize is less than array size (e.g. during compaction)- #sortBlock: restores the heap invariant on its own- improved #select:, #collect, #at:, #removeAt:, #add:- added #sort and #compact; compatible with other collections- #capacity returns the real capacity- inlined #sorts:before: and #indexUpdateBlock: for performance- improved performance and legibility of the heap operations #upHeap: #downHeap: and #downHeapSingle:- added #isValidHeap- added some comments' id 'be1e0401-02a2-49e4-827f-fe0fee861114' date '2 June 2016' time '5:48:18.403513 pm' author 'ul' ancestors ((name 'Collections-topa.694' message 'provide some sample text in Text' id 'b7698582-d2b0-4c81-b338-63705fd800ab' date '1 June 2016' time '12:04:48.190653 pm' author 'topa' ancestors ((name 'Collections-mt.693' message 'Extend the TranscriptStream''s model protocol to support "Window Active On First Click" preference. Usually, only subclasses of Model behave accordingly. Other "models" have to mimick the protocol.' id '68109039-441c-e344-a65b-e5b114d57cfa' date '13 May 2016' time '9:37:08.465429 pm' author 'mt' ancestors ((name 'Collections-mt.692' message 'Deprecate #includesSubString: with capital S.' id '13bdc3eb-7645-0749-a45c-78613894b24c' date '13 May 2016' time '10:39:16.768561 am' author 'mt' ancestors ((name 'Collections-mt.691' message 'Adds comment to TextReadWriter to explain the idea behind it.' id '81841163-90dd-154a-9adb-f8471b7d09af' date '7 May 2016' time '10:24:05.360568 am' author 'mt' ancestors ((name 'Collections-ul.690' message '- use #basicAt: for string access in the remaining misc primitives- give up on the nil matchTable in ByteString >> #findSubstring:in:startingAt:matchTable:- slightly faster ReadStream >> #upTo: for strings- optimized version of ReadStream >> #skipTo: (this may break #skipTo: for its subclasses, but those shouldn''t really exist in the first place)' id 'a58318cb-049e-4741-b337-541b33eb99e7' date '26 April 2016' time '2:03:24.991845 am' author 'ul' ancestors ((name 'Collections-cbc.689' message 'Fix comment in Dictioanry class>>newFrom: so that the examples actually work.' id '84ae8fa7-91ee-4f47-8bdf-eadcac286a1e' date '13 April 2016' time '3:28:58.221861 pm' author 'cbc' ancestors ((name 'Collections-mt.688' message 'Remove infinite generators on streams due to lack of use cases.' id 'f8eaf0a0-9f3d-bd4d-b350-5437f277b970' date '13 April 2016' time '10:21:42.107044 am' author 'mt' ancestors ((name 'Collections-mt.687' message 'Support flatten across nested collections and streams.' id 'e2089a91-178b-ab42-8e57-a71bfb023e74' date '12 April 2016' time '11:26:12.382799 am' author 'mt' ancestors ((name 'Collections-mt.686' message 'Adds possibility to map and filter streams using generators. There are *Infinitely-versions of map and filter to support streams that can have contents again after #atEnd returned true - like socket streams. In that case, there is an #upToNil to get a chunk of objects to work with.' id '3ce0e394-c4eb-9c4d-9367-4f885e4a62f8' date '12 April 2016' time '11:24:26.579799 am' author 'mt' ancestors ((name 'Collections-ul.685' message 'Use Spur''s new character comparison abilities in some String methods.' id 'db8fd391-2306-4ccc-87d5-b5dee96a78ab' date '3 April 2016' time '3:21:51.035808 am' author 'ul' ancestors ((name 'Collections-eem.684' message 'Fix PositionableStream>>basicUpTo:.  It should replicate upTo:, not next:.' id '3cd95866-5b71-4755-8659-1e0fbb6fbe4d' date '30 March 2016' time '1:40:38.127809 pm' author 'eem' ancestors ((name 'Collections-ul.683' message 'Improvement #peekFor: performance.' id 'f0634d1c-37d8-4ed1-84cc-6439546aaa74' date '30 March 2016' time '2:23:29.737891 am' author 'ul' ancestors ((name 'Collections-ul.682' message '- avoid creating intermediate objects in String >> #padded:to:with:' id '5276c8f7-606f-42d1-9ce5-e48b88fdac2d' date '20 March 2016' time '12:59:06.124515 am' author 'ul' ancestors ((name 'Collections-ul.681' message '- Let WriteStream''s #nextPutAll: and #next:putAll:startingAt: take the quick route too when collection and aCollection are both strings of the same field size.- PositionableStream >> #next:putAll:startingAt: can rely on the indexability of its argument, thus avoid creating copies of it. It also returns the collection argument, like other implementors of this method, instead of some copied subcollection.' id '738dd2f1-c003-4e50-899b-371486e5c419' date '19 March 2016' time '1:39:02.54665 pm' author 'ul' ancestors ((name 'Collections-ul.680' message '#includes: will return false if the receiver is some kind of character set and the argument is not a character. E.g. [''0'' asCharacterSet includes: 48.123] won''t evaluate to true anymore, nor will [ '''' asCharacterSet includes: nil ] raise an error.#occurrencesOf: revamp - round #2- added optimized implementations to all Collection subclasses where it was sensible - as suggested by Nicolas.- moved all implementations from testing to enumeration category, because this method doesn''t answer a boolean value, but it''s similar to #count:, which is in enumeration.' id '0d7db6dd-bde1-40f0-919d-638fc4e8a9c7' date '10 March 2016' time '4:33:52.197801 pm' author 'ul' ancestors ((name 'Collections-ul.679' message '#occurrencesOf: revamp:- optimized Bag''s implementation- added optimized versions to ArrayedCollection, String and ByteArray' id '9f4b6193-4632-48c7-a99f-ee37923bf28b' date '8 March 2016' time '5:24:30.010047 pm' author 'ul' ancestors ((name 'Collections-eem.678' message 'Make ByteArray>>unsignedLong[64]At:bigEndian: 64-bit aware.' id '5f42102e-7dd0-4fc7-b437-5ba06a88240d' date '22 February 2016' time '9:39:42.620109 am' author 'eem' ancestors ((name 'Collections-ul.677' message 'Let #arrayType define the class of array in WeakSet.' id '3973645f-83f8-4013-806f-a9c56673dec0' date '9 January 2016' time '2:32:25.271894 pm' author 'ul' ancestors ((name 'Collections-eem.676' message 'Handle out-of-memory failure of elementsForwardIdentityTo:.' id 'e3bea3a9-1d66-4cae-b3e3-5ed8e46d3194' date '5 January 2016' time '12:38:09.288345 pm' author 'eem' ancestors ((name 'Collections-cmm.675' message 'grownBy: should answer the same class of object asked to be grown.' id 'd019e6cc-abbb-4077-9e3d-2f471f6fb07a' date '3 January 2016' time '3:33:44.302 pm' author 'cmm' ancestors ((name 'Collections-eem.672' message 'Only print ByteArrays as literals, not every subclass of ByteArray that doesn''t have its own print method.' id '9b35923c-464e-4b66-8541-2e307f79186b' date '12 November 2015' time '5:21:54.525 pm' author 'eem' ancestors ((name 'Collections-mt.671' message 'Just like #emphasisAt: tolerate null-texts when accessing color information.' id '54b6a544-b195-4ee2-90d6-6c70d89fdcfb' date '12 November 2015' time '10:14:25.954 am' author 'mt' ancestors ((name 'Collections-mt.670' message 'Adds convenient color check method for texts. Just like #emphasisAt: does for font emphasis.' id '85d65b1c-ab3c-4da8-8061-65f7d0d0bd64' date '12 November 2015' time '10:06:12.325 am' author 'mt' ancestors ((name 'Collections-ul.669' message 'Changed Set >> #= and Dictionary >> #= to check the species of the receiver and the argument.PluggableDictionary and PluggableSet also check hashBlock and equalBlock.WeakSet and friends will work once we start using ephemerons.' id '01e30af9-3dd4-4b5e-ab40-89ce43884565' date '2 November 2015' time '2:00:09.732 am' author 'ul' ancestors ((name 'Collections-ul.668' message 'In Dictionary >> #=, make sure that the dictionaries agree on what the common keys are. This way the behaviour of #= will be symmetric when the two dictionaries implement key equality differently.' id '8abfa05a-70c6-4e38-bc00-7d665183106c' date '13 October 2015' time '1:07:48.216 am' author 'ul' ancestors ((name 'Collections-ul.667' message 'Added the missing methods of ByteArray''s platform independent access category: #signedByteAt: #signedByteAt:put: #long64At:put:bigEndian: and #long64At:bigEndian:. The 64-bit methods are not optimized.Added #associationClass to Dictionary and its subclasses, which returns the class of the associations the Dictionary holds. This allows us to simplify the implementations of #at:put: and friends in the subclasses.String changes:- introduced #asIntegerSigned: which converts the receiver to an Integer.- #asSignedInteger should return nil for empty string.- optimized #asUnsignedInteger as well' id '7cd785ff-1839-4075-ac56-4b71054529d8' date '10 October 2015' time '3:40:46.732 pm' author 'ul' ancestors ((name 'Collections-topa.666' message 'Move already deprecated messages to their penultimate place (KeyedSet)' id '44cc0ebe-d308-40f6-80eb-c98ad30ab6b6' date '8 October 2015' time '9:00:08.857 pm' author 'topa' ancestors ((name 'Collections-topa.665' message '#oldBack is deprecated, inline it into its sole sender.' id '4ec6165c-480c-483d-bce3-ca38e3a71e10' date '8 October 2015' time '8:33:41.622 pm' author 'topa' ancestors ((name 'Collections-topa.664' message 'Deprecated nextPutKeyword:withArg: and oldBack' id '4a54b921-445f-4539-81df-137d1f575110' date '8 October 2015' time '8:26:53.881 pm' author 'topa' ancestors ((name 'Collections-topa.662' message 'Make Text more polymorphic with String (again)' id '6d4a71bf-33fb-4f9e-826e-e8703447be63' date '7 October 2015' time '11:13:28.941 pm' author 'topa' ancestors ((name 'Collections-topa.661' message 're-save 3' id '9557550c-a7b8-4b22-aa48-bfba7444d905' date '7 October 2015' time '11:11:41.143 pm' author 'topa' ancestors ((name 'Collections-topa.660' message 're-save 2' id '5422d6e5-e4e9-4238-aca9-3a805b1c9e98' date '7 October 2015' time '8:31:57.916 pm' author 'topa' ancestors ((name 'Collections-topa.659' message 're-save' id '6dd2011e-0412-4c05-9871-0887472958ed' date '7 October 2015' time '8:29:04.654 pm' author 'topa' ancestors ((name 'Collections-topa.658' message 'Make Text more polymorphic with String' id '83dfd8ec-adbe-431e-b4eb-9f1585dfe83d' date '7 October 2015' time '8:10:49.578 pm' author 'topa' ancestors ((name 'Collections-mt.657' message 'Removes method that has been deprecated since 3.10 into custom package for consistency.' id '48404c29-18ed-9749-93c2-4481deec4180' date '7 October 2015' time '1:47:21.191 pm' author 'mt' ancestors ((name 'Collections-eem.656' message 'Add Dictionary>>at:ifPresent:ifAbsentPut:.Move Dictionary>>fasterKeys & keyForIdentity: to 50Deprecated' id '50ec1b3e-c058-4167-889e-836e994b500b' date '25 September 2015' time '11:36:48.911 am' author 'eem' ancestors ((name 'Collections-ul.655' message '- 64-bit compatible and faster ByteArray>>unsignedLong64At:put:bigEndian:- faster ByteArray>>unsignedLong64At:bigEndian:' id '179eb75e-eb8d-4c16-8934-158921d1ff81' date '9 September 2015' time '8:30:27.564 pm' author 'ul' ancestors ((name 'Collections-ul.654' message 'Optimized all integer accessor methods in ByteArray''s platform independent access category.' id '12c2810c-d06f-4ae8-86b4-67ca6f1d6d79' date '6 September 2015' time '11:42:17.51 pm' author 'ul' ancestors ((name 'Collections-eem.653' message 'Remove carriage returns from some time stamps.Nuke unused private method in old finalization scheme.' id 'dfc67d6b-1eaf-42c5-929d-b136b4d28ef0' date '2 September 2015' time '6:26:05.268 pm' author 'eem' ancestors ((name 'Collections-cbc.652' message '#unsignedLong64At:put:bigEndian: on average fast.' id '88079716-328d-4a41-8838-595e6782882c' date '31 August 2015' time '8:32:50.179 pm' author 'cbc' ancestors ((name 'Collections-cbc.651' message 'Faster #unsignedLong64At:bigEndian:' id '1d7408f6-a290-0d4b-8b83-6a6a2e4f325e' date '31 August 2015' time '3:53:15.138 pm' author 'cbc' ancestors ((name 'Collections-cbc.650' message 'Add ByteArray methods to deal with long64bit values.' id '35dc53fb-613d-f84a-bd9d-ffc19957feb8' date '28 August 2015' time '3:56:04.013 pm' author 'cbc' ancestors ((name 'Collections-ul.649' message '- removed migration code from CharacterSet' id '4d8f9b81-5a5c-41b3-a466-a05df4a883ff' date '23 August 2015' time '11:59:16.66 pm' author 'ul' ancestors ((name 'Collections-ul.648' message 'CharacterSet:- store the size in an instance variable- moved removal logic to #remove:ifAbsent:, while kept the behavior of #remove:- migrate existing instances by sending #size in the postscript' id '03127fe2-feda-47f9-ba11-984377a172ff' date '23 August 2015' time '11:56:36.78 pm' author 'ul' ancestors ((name 'Collections-ul.647' message '- in Spur we can speed up Character >> #sameAs: by using #==' id '8f7a52eb-415a-4aaf-9b8a-26ff5d388a10' date '22 August 2015' time '10:44:11.184 pm' author 'ul' ancestors ((name 'Collections-ul.646' message '- removed migration code from WideCharacterSet' id 'db0d3568-8710-49c8-826e-3100979e6b48' date '22 August 2015' time '1:27:33.8 pm' author 'ul' ancestors ((name 'Collections-ul.645' message 'Use the extracted Bitset in WideCharacterSet:- decreased chunk size from 65536 to 256. This should give a purpose to use a dictionary instread of an array for map, because its size will have a chance to be larger than 64.- byteArrayMap is always initialized, so there''s no need to use the method to reference it, nor to check if it''s initialized- moved #remove: behavior to #remove:ifAbsent:, just like it''s done by most collections. Kept the existing behavior of #remove: to not signal an error when the character is not in the collection.- use #atAllPut: to clear the byteArrayMap in #removeAll, because it should be faster than allocating a new instance- improved #size''s performance- migrate instances on-the-fly- migrate any unmigrated instaces during the postscript- removed the unused methods' id 'd0e515b8-18ad-43f0-b96a-c13fa4834fc5' date '22 August 2015' time '1:25:51.922 pm' author 'ul' ancestors ((name 'Collections-ul.644' message 'Extracted and enhanced Bitset from WideCharacterSet.' id '55f3957f-2ae4-4899-b3db-62dd7723d0f2' date '22 August 2015' time '2:50:48.28 am' author 'ul' ancestors ((name 'Collections-ul.643' message 'String:- reuse the code of #indexOf:startingAt: from #indexOf: and #indexOf:startingAt:ifAbsent: ByteArray:- use the fast primitive for #indexOf:* the same way it is done in String' id '12dbac56-4a90-45c3-8987-3ceb621a1c58' date '20 August 2015' time '9:08:27.692 pm' author 'ul' ancestors ((name 'Collections-ul.642' message '- Character >> #shouldBePrintedAsLiteral uses the local variable holding the integer value of the character. Also added quick returns.WideCharacterSet- faster #includes:- use #integerDictionary for map' id '4a6c1591-8a42-41a2-b3ae-2644c2d12320' date '17 August 2015' time '10:12:38.668 pm' author 'ul' ancestors ((name 'Collections-ul.641' message 'Character:- even faster #isSeparator- class side #initialize sends #initializeClassificationTable- atomic class side #initializeDigitValuesString:- renamed #includesSubString: to #includesSubstring:- deprecated #includesSubString:General:#includesSubString: -> #includesSubstring:' id 'c373bfdf-0a07-40c8-8505-75c157cbb352' date '14 August 2015' time '6:59:54.138 pm' author 'ul' ancestors ((name 'Collections-ul.640' message 'Character:- sped up various methods by storing and reusing the result of #asInteger in a temporary variable.- sped up #isSeparator by eliminating the last branch. Swapped the tab and cr checks, because source code has more tabs than crs.- unified methods with mixed #asInteger and #asciiValue sends- #isAscii uses #< instead of #between:and:, like #isOctetCharacter does.- #asUnicode uses the same shortcut as #encodedCharSet does- quick return in #printOn: and #storeOn:String:- added identity check (should help with Text comparison) and quick returns to #=- spaceship operator uses #compare: if the argument is a string- added a fast #asSignedInteger implementationText:- removed the identity check from Text >> #=, because String >> #= does it- the spaceship operator uses String''s spaceship operator' id '1065564d-36c5-43a1-842b-3be19ce91a3e' date '12 August 2015' time '10:35:29.572 pm' author 'ul' ancestors ((name 'Collections-cmm.639' message 'Squeak 5.0 release, Spur bootstrap changes to transition to Spur object model and core system.' id '09c450e3-5490-437a-9799-9444bef22954' date '19 July 2015' time '1:16:45.217 pm' author 'cmm' ancestors ((name 'Collections-topa.638' message 'Let''s say PluggableTextAttributes are not serializable.' id 'aa218acf-c29b-4df1-ab0a-285f1f71c6a7' date '8 July 2015' time '4:17:26.216 pm' author 'topa' ancestors ((name 'Collections-topa.637' message 'Always store Characters as if they had one instance variable with their value, regardless whether they are actually shaped that way.' id '32673ced-9c32-44cf-a95e-0cab2033fd30' date '29 June 2015' time '3:58:07.48 pm' author 'topa' ancestors ((name 'Collections-eem.636' message 'findLast:startingAt: dual for findFirst:startingAt:' id '0ccecc27-ca23-41aa-be79-584dbc53e4d0' date '29 May 2015' time '4:03:27.101 pm' author 'eem' ancestors ((name 'Collections-mt.635' message 'Some debug code removed from html readwriter..' id '5c6d47bf-db22-7a4b-b35e-24626842474b' date '10 May 2015' time '2:31:43.749 pm' author 'mt' ancestors ((name 'Collections-ul.634' message 'Revert the workaround from Collections-ul.633.' id 'c956dc83-2ef3-4df4-b1be-449dfb4be1bb' date '7 May 2015' time '5:02:54.386 pm' author 'ul' ancestors ((name 'Collections-ul.633' message 'Don''t try to use Character''s ClassificationTable when the new class variables are not initialized properly. This is a possible workaround to fix the Spur bootstrap.' id '4937e4f5-8560-437c-a820-0cae464e47a0' date '5 May 2015' time '7:52:50.385 pm' author 'ul' ancestors ((name 'Collections-ul.632' message 'Removed MutexForPicking and RandomForPicking from Collection along with the methods referencing them, because the accessor methods were private, and they were only intended to be used for shuffling.Separated #groupBy: from #groupBy:having:.' id '5581dccd-80b4-4a89-8918-450ff62093da' date '5 May 2015' time '1:10:58.584 am' author 'ul' ancestors ((name 'Collections-mt.631' message 'HtmlReadWriter: support for comments added, list of ignored tags added' id '0b21fbfc-3cd6-8f45-bf1a-d7e3c5e5c107' date '3 May 2015' time '10:38:38.118 pm' author 'mt' ancestors ((name 'Collections-mt.630' message 'HTML escaping added to html read/writer' id 'c6ffc6e0-978d-da42-acdb-4917691a695c' date '3 May 2015' time '8:49:41.443 pm' author 'mt' ancestors ((name 'Collections-mt.629' message 'Introduced a TextReadWriter (abstract) and a HtmlReadWriter (concrete) similar to ImageReadWriter. The goal is to convert foreign data into Squeak''s text format.Possible additions: RtfReadWriter, DocReadWriter, ...' id 'a8c03faf-7161-bf42-8143-7fd4833709e9' date '3 May 2015' time '5:57:18.046 pm' author 'mt' ancestors ((name 'Collections-ul.628' message 'Merged Collections-ul.625.' id '45ec1e72-ea02-42fc-8dcb-10a1dfd22209' date '3 May 2015' time '2:37:08.318 pm' author 'ul' ancestors ((name 'Collections-ul.627' message 'Merged Collections-ul.624.Updated #initializeClassificationTable to save only the fully initialized table to the class variable.Reinitialize String in postscript to update the lower/uppercasing tables there too.' id '6562bd09-b06e-436f-8771-a7cf2ecf6a25' date '3 May 2015' time '2:23:44.317 pm' author 'ul' ancestors ((name 'Collections-mt.626' message 'Added the (configurable) possibility to disable forced transcript updates as well as to enable a generic redirection to stdout.Only works when using the #show: or #showln: interface in Transcript.' id 'e8f27fe3-f480-8244-92bb-a23d8f61fd20' date '1 May 2015' time '8:10:29.695 pm' author 'mt' ancestors ((name 'Collections-mt.625' message 'Speed-up #endsWith: for strings.' id '0edce141-a23a-a845-a735-743f311112b2' date '1 May 2015' time '5:56:35.941 pm' author 'mt' ancestors ((name 'Collections-tfel.624' message 'remove overrides for beginsWith: in ByteStrings and ByteSymbols, because these actually perform worse now than the generic implementation in String' id '5cb7424e-b88f-3b4e-beb3-c97639f2d91f' date '1 May 2015' time '3:39:37.7 pm' author 'tfel' ancestors ((name 'Collections-tfel.623' message 'fix fallback code for ByteString>>findSubstring:in:startingAt:matchTable: when passing a starting index <= 0' id 'baf2902d-52b9-2442-a513-8a5a6ff0ce30' date '1 May 2015' time '11:06:35.625 am' author 'tfel' ancestors ((name 'Collections-nice.622' message '#toBraceStack: is not used for compiling { } for so long that it''s really time to get rid of it.Symbol>>numArgs: does not need to copy self into a temp var.' id '93c764da-c5b6-4fa6-aa98-a9ad54611907' date '1 May 2015' time '12:40:25.475 am' author 'nice' ancestors ((name 'Collections-mt.621' message 'Convenience method added to String to remove line endings/breaks from a string.' id '6f4e3139-96df-e946-addd-df636cc9a712' date '19 April 2015' time '12:46:14.477 pm' author 'mt' ancestors ((name 'Collections-ul.620' message 'Removed the migration code, and obsolete private methods from LRUCache.' id '3f6f10ae-f7e2-4218-92cb-02ac39b1d25c' date '13 April 2015' time '5:37:50.831 am' author 'ul' ancestors ((name 'Collections-ul.619' message 'Reset all LRUCache instances in postscript to force migration to the new internal list format.' id 'be05c88a-9d99-4e79-a4af-d986d63ee773' date '13 April 2015' time '5:28:55.991 am' author 'ul' ancestors ((name 'Collections-ul.618' message 'Various OrderedCollection changes.Adding:- #addAllFirst: can accept any collection as argument, but uses #reverseDo: if the argument has that method. It''s implemented with double dispatch by #addAllFirstTo:.- Simplified and recategorized #at:ifAbsentPut:, but kept the unusual semantics of nil values.- Simplified #addAllLast: a bit, and updated its comment.Removing:- #removeAllSuchThat: stores the read element in a temporary- #removeFirst: and #removeLast: doesn''t use #removeFirst and #removeLast anymore.Error handling:- removed the unsent #errorConditionNotSatisfied method- changed #errorNoSuchElement to use the name of the receiver instead of "an ordered collection"- added #errorNotEnoughElements, which is used by #removeFirst: and #removeLast:Other:- implemented #indexOf:startingAt:ifAbsent: for better performance- fixed the comment of #isSortedBy:between:and:' id '5a6b50bd-668b-48d1-b4c5-fe0b78c6271a' date '13 April 2015' time '12:08:16.127 am' author 'ul' ancestors ((name 'Collections-ul.617' message 'LRUCache changes:- added a #reset method, which removes all elements from the cache- replaced the Arrays storing the list of elements with custom classes (LRUCacheHeadNode and LRUCacheNode).- fix: the map variable gets correctly updated, when the cache is full' id '483f2798-971c-4066-8b82-4a2271420294' date '12 April 2015' time '2:59:01.46 am' author 'ul' ancestors ((name 'Collections-ul.616' message 'Optimized Interval >> #sum, OrderedCollection >> #at: and OrderedCollection >> #at:put:.' id 'ff292158-e8cd-4d21-aae6-c15135dd707f' date '11 April 2015' time '11:12:16.588 pm' author 'ul' ancestors ((name 'Collections-bf.615' message 'Restore WeakArray>>species. It''s apparently not the culprit for the obsolete class refs.' id '081c8444-1766-451d-baa2-311e9f0d9374' date '10 April 2015' time '5:46:52.241 pm' author 'bf' ancestors ((name 'Collections-bf.614' message 'Revert WeakArray>>species temporarily to see if this fixes testNoObsoleteClasses on the build server' id '11d550b8-ccbb-4711-be86-8626971305d9' date '10 April 2015' time '4:36:46.5 pm' author 'bf' ancestors ((name 'Collections-tfel.613' message 'Fix replaceFrom:to:with:startingAt: for ByteArray if run on a VM without primitive 105' id '9e6e47d3-17ac-f847-976f-40872d002ab8' date '9 April 2015' time '9:09:08.368 am' author 'tfel' ancestors ((name 'Collections-bf.612' message 'Ensure that copyWith/out retains the weak-ness of a weak array.' id '1b9e2fc6-03fb-41c2-a3e8-197fa24c108a' date '7 April 2015' time '2:04:06.99 pm' author 'bf' ancestors ((name 'Collections-ul.611' message '- Stricter and faster implementation of String >> #format:.' id '8b7bf86a-b335-47a9-9c3b-c87148584c44' date '5 April 2015' time '3:02:11.144 pm' author 'ul' ancestors ((name 'Collections-ul.610' message '- Slightly faster SequenceableCollection >> #copyUpT* (for ByteString receivers).- SequenceableCollection >> #shuffled belongs to the shuffling category.- Added FormatCharacterSet to String, which will be used by the new implementation of #format:- Removed an unused temporary from String >> #expandMacrosWithArguments:' id '66e95716-d97a-425e-b14c-4c8825bdde8d' date '5 April 2015' time '3:01:45.533 pm' author 'ul' ancestors ((name 'Collections-cmm.608' message 'Merged cmm.603.' id 'ff08c5f7-9d9e-4d4f-99e1-b5e52118e9fb' date '3 April 2015' time '3:26:16.674 pm' author 'cmm' ancestors ((name 'Collections-ul.607' message 'Simplified CharacterSet class>>separators.Fixed ReadStream >> #nextFloat, when collection is not a ByteString.' id '607c7a3f-c462-454c-8e18-02c49e4ae91a' date '2 April 2015' time '12:07:14.622 am' author 'ul' ancestors ((name 'Collections-ul.606' message 'Cache and share #separators and #nonSeparators in CharacterSet (just like #crlf). Remove them on #cleanUp.Implemented CharacterSet class >> #withAll:.Removed #noSeparatorMap, #noSeparators, #separatorMap from String class. Also removed the class variables CSNonSeparators, CSSeparators, and CSLineEnders. All users were rewritten to use CharacterSet''s version of these sets.' id 'cd3ba2f1-88d3-4f8a-a06b-089509ceccdf' date '1 April 2015' time '11:35:01.718 pm' author 'ul' ancestors ((name 'Collections-mt.605' message 'Support #withBlanksTrimmed in texts.' id 'b661cec7-af10-7a42-9c4c-a09449425548' date '30 March 2015' time '8:46:49.164 am' author 'mt' ancestors ((name 'Collections-ul.604' message 'Reverted the previous workaround for the class comment saving bug, because it''s enough to flush the changes file after saving the class comment. See Kerneul-ul.910 for the actual fix.' id 'ddf1747a-03bc-4cc1-bb21-a76ff64052df' date '9 March 2015' time '2:44:00.566 am' author 'ul' ancestors ((name 'Collections-eem.603' message 'Three fewer uses of isKindOf:' id '6521c82f-d8de-4c07-a754-3bc3a8667746' date '3 February 2015' time '12:06:59.618 pm' author 'eem' ancestors ((name 'Collections-mt.602' message 'Merged improvements for OrderedDictionary from inbox (ul.601).Fixed problem in (mt.600 version) #copyFrom:to: with memory allocation. Preferred this over ul.601 because it is faster (8 per second vs. 12 per second).d := OrderedDictionary new.1 to: 1000000 do: [:ea | d at: ea put: nil].[d copyFrom: 250000 to: 750000] bench.' id '96d6fefa-c902-7640-bd09-c17016199e81' date '20 January 2015' time '8:27:19.919 am' author 'mt' ancestors ((name 'Collections-ul.601' message '- Added FloatCollection >> #asFloatArray which gives slightly better performance.OrderedDictionary changes:- Compact eagerly on removal. This ensures that the order Array is always compact: its elements between 1..tally are the associations stored in the dictionary in insertion order.- Removed the lastIndex variable, because it''s always the same as tally.- Since order is compact, access by index takes O(1) time, and to copy the order array, we can always use a fast primitive.- use nil in #sort instead of a block- #errorOutOfBounds is only understood by SequenceableCollections- avoid the use of fractions, use integer operations instead- don''t sort the order array when it only has one element' id '02a48b9d-87a4-4ae0-9ae5-42a2f22e08ea' date '19 January 2015' time '8:43:39.075 pm' author 'ul' ancestors ((name 'Collections-mt.600' message 'Copy ranges of elements in OrderedDictionary.' id '32764222-c0d1-9943-a0ae-ac6a5684f053' date '19 January 2015' time '10:14:01.368 am' author 'mt' ancestors ((name 'Collections-mt.599' message 'Implemented "First wins"-strategy wrt. to the order of associations. Allowed for simplifying the code.Order array does only grow to 75% to mitigate the greediness of the Dictionary.' id '48da0044-2d14-3048-b9f0-90a215344a36' date '19 January 2015' time '9:11:48.572 am' author 'mt' ancestors ((name 'Collections-ul.598' message '- Fix: OrderedCollection >> #asArray returns an Array instead of an instance of the class returned by the class side #arrayType method.- Slightly more efficient OrderedCollection >> #sort:.- Merged Collections-ul.589:	- Deprecated Collection class >> #randomForPicking.	- Replaced all accesses to RandomForPicking with ThreadSafeRandom value.	- WeakKeyDictionary >> associationsDo: ignores associations with GC''d keys. This affects all enumerator methods, and makes overriding #keysDo: unnecessary.	- Added a new method SequenceableCollection #>> groupsDo:, which works like #groupsOf:atATimeDo:, but uses the block''s argument count as the group size.Depends on Kernel-ul.893' id '9c200c9a-6210-44da-a42a-0287f65906f1' date '18 January 2015' time '8:28:40.971 pm' author 'ul' ancestors ((name 'Collections-ul.589' message '- Deprecated Collection class >> #randomForPicking.- Replaced all accesses to RandomForPicking with ThreadSafeRandom value.- WeakKeyDictionary >> associationsDo: ignores associations with GC''d keys. This affects all enumerator methods, and makes overriding #keysDo: unnecessary.- Added a new method SequenceableCollection #>> groupsDo:, which works like #groupsOf:atATimeDo:, but uses the block''s argument count as the group size.Depends on Kernel-ul.891' id '3f079add-7154-43c9-a265-bd59cb4cbcb8' date '17 December 2014' time '3:31:06.906 pm' author 'ul' ancestors ((name 'Collections-bf.588' message 'Restore timestamps lost in assignment conversion.' id 'fa77c95e-6dc5-4ae1-acdc-2d1478d62476' date '8 December 2014' time '1:30:10.896 am' author 'bf' ancestors ((name 'Collections-ul.587' message 'Optimized Interval >> #sum.' id '30ba8551-0c97-4cf5-b830-9386f272b8d2' date '18 November 2014' time '11:53:01.797 pm' author 'ul' ancestors ((name 'Collections-ul.586' message 'Symbol table changes:- ensure that enumerations stay consistent- avoid read-write and write-write race conditions- added a safe #condenseNewSymbols method, which is a replacement for former unsafe methods (#shutDown: and #compactSymbolTable). It''s also automatically triggered whenever there are more than 1000 NewSymbols.- deprecated #compactSymbolTable- updated some commentsNote that interning many symbols is a bit slower, but thread safety is more important.' id '4c460675-3065-4b48-aa30-52ad67e15076' date '27 October 2014' time '12:52:51.886 am' author 'ul' ancestors ((name 'Collections-cmm.585' message 'Speed up visiting with #addNewElement:.   It provides the common pattern of checking for inclusion, followed by add:, in just one scan, instead of two.' id '954b50eb-27a5-41e8-9b9f-a49f39336c75' date '20 October 2014' time '7:48:42.698 pm' author 'cmm' ancestors ((name 'Collections-ul.584' message 'Character changes:- use the value instance variable instead of #asciiValue where possible- implemented #<= and #>=' id '804f22d8-8350-4e41-b218-3ab57aa6a6cb' date '8 October 2014' time '12:27:20.538 pm' author 'ul' ancestors ((name 'Collections-nice.583' message 'Also classify these SortFunction support in *Collections rather than *Kernel' id '7c0afd87-bf86-40d5-890e-eb3f4ad51e68' date '19 September 2014' time '10:54:26.296 pm' author 'nice' ancestors ((name 'Collections-nice.582' message 'Port TAG-SortFunctions of Travis Griggs from Cincom public store - version (11,tgriggs)Note that no collation policy were used for String.The spaceship operator <=> is also required in Kernel-Numbers.See also the blog http://objology.blogspot.fr/2010/11/tag-sortfunctions.html and http://objology.blogspot.fr/2010/11/tag-sortfunctions-redux.htmlNote about the cost of these sort functions:as shown by this mini-bench on cog, using a Symbol costs a bit more (perform:) than a block activation, and monadic block a bit more than dyadic one because activated twice more, but it seems acceptable to me with regard to the great simplification and expressiveness of code :| collec1 collec2 collec3 |collec1 := (1 to: 200000) collect: [:i | 1000000 atRandom-500000].collec2 := collec1 copy.collec3 := collec1 copy.{[collec1 sort: [:a :b | a abs < b abs]] timeToRun.[collec2 sort: [:e | e abs] ascending] timeToRun.[collec3 sort: #abs ascending] timeToRun.} #(345 532 912)' id '52a598f1-224e-4649-a95f-4e78547b5ed5' date '19 September 2014' time '10:22:13.338 pm' author 'nice' ancestors ((name 'Collections-nice.581' message 'Remove #padToEndWith: from RWBinaryOrTextStream now that it has been moved up to WriteStream.' id 'eca9043e-1eff-4ea5-a0ea-20e74b8f595f' date '16 September 2014' time '11:03:38.254 pm' author 'nice' ancestors ((name 'Collections-nice.580' message 'peekLast commit and try again...' id '5f8aabc7-d706-48e6-8d68-e591c6d00176' date '28 July 2014' time '10:42:04.046 pm' author 'nice' ancestors ((name 'Collections-nice.579' message 'Implement #peekLast in RWBinaryOrTextStream because it has to care whether isBinary or not.' id 'ef7ba0ca-4d01-4aac-9236-a968a13d7eae' date '28 July 2014' time '10:32:31.105 pm' author 'nice' ancestors ((name 'Collections-eem.578' message 'Implement peekLast in TranscriptStream.Implement WriteStream>>ensureEndsWith: in terms of peekLast.' id '5ecf4e5c-8071-4cba-b887-144271ecfa61' date '28 July 2014' time '9:59:54.044 am' author 'eem' ancestors ((name 'Collections-nice.577' message 'Convert Base64MimeConverter implementation from ReadWriteStream to alternate WriteStream/ReadStream.Beware, the main class messages now answer a ReadStream, not a ReadWriteStream.' id 'c5925cce-0dac-4744-9c8e-08888f259f63' date '26 July 2014' time '11:34:56.071 pm' author 'nice' ancestors ((name 'Collections-nice.576' message 'Convert a WriteStream into a ReadStream.Beware, this version is optimized to avoid a copy, but is sharing some state.Thus:	s := WriteStream on: String new.	self writeSomethingOn: s.	self readSomethingFrom: s readStream.is a good replacement for:	s := ReadWriteStream on: String new.	self writeSomethingOn: s.	self readSomethingFrom: s resetBut avoid overwriting like this:	w := String new writeStream.	self writeSomethingOn: w.	r := w readStream.	self writeSomethingElseOn: w reset.	self compare: r to: w readStream.' id '1ec2cb3f-f168-4b7b-9ec1-57ae79508f5d' date '24 July 2014' time '10:36:08.474 pm' author 'nice' ancestors ((name 'Collections-eem.575' message 'Remove obsolete primitive new implementation inInterval class (SequenceableCollection no longer implementsnew).  Use basicNew in from:to:[by:].Spur has a different implementation of new so easier todelete the bogus one than duplicate Spur''s in Interval class.' id 'b3abf840-44a6-4590-9f3f-e1f02970cf32' date '19 July 2014' time '5:49:54.711 am' author 'eem' ancestors ((name 'Collections-nice.574' message 'Less ascii/binary dance.The sender of nextString doesn''t try to force ascii, anymore so the implementor doesn''t have to force binary.' id 'ee31aa60-b1d6-41cb-89ed-337ec58dcafe' date '18 July 2014' time '2:21:02.715 am' author 'nice' ancestors ((name 'Collections-ul.573' message 'Character changes- introduced #encodedCharSet to access the EncodedCharSet of a character- all methods use #encodedCharSet instead of (EncodedCharSet charSetAt: self leadingChar)- #isAlphaNumeric uses the EncodedCharSet class''s #isAlphaNumeric: method' id '189a8283-4840-4746-8807-47f3597745fd' date '7 July 2014' time '10:02:49.741 pm' author 'ul' ancestors ((name 'Collections-nice.572' message 'Let asUppercase and asLowercase use the unicode tables for wide strings/characters.Care is also taken to correctly handle characters with east asian encoding, but I''m not sure how healthy is this support in trunk...Remove Character>>basicSqueakToIso which is totally obsolete (does not the right thing) and is not sent.' id '387e24c8-d4ec-4a93-8bbd-cb72a293fb0b' date '29 May 2014' time '3:09:56.261 pm' author 'nice' ancestors ((name 'Collections-eem.571' message 'Speed up testing different sized strings for equality byadding a size text to String>>#=.  Tis speeds up e.g.comparing the first 10,000 ByteString instances to eachother by -67%.' id '5610c761-96af-422f-bb1d-63bc87a1cc7a' date '27 May 2014' time '11:49:16.946 am' author 'eem' ancestors ((name 'Collections-nice.570' message 'Let''s optimize a bit LinkedList>>at:ifAbsent: by scanning the list only once, unlike super.' id '1069cfcc-6bd7-4d7d-87fb-0a0a546f8a0c' date '25 May 2014' time '12:37:21.454 am' author 'nice' ancestors ((name 'Collections-nice.569' message 'Add NullStream>>ensureCr' id '149c58d9-b3ff-4318-87cb-902041bfdf54' date '16 May 2014' time '10:32:00.466 pm' author 'nice' ancestors ((name 'Collections-dtl.568' message 'Add a flush to WriteStream>>nextChunkPut:This is a workaround for a bug in the runtime library of some versions of Ubuntu. The symptom is that creation of a class comment for a class that previously had no comment leads to a file size error in the new RemoteStream that points to the class comment. Actual file size and contents of the changes file are not affected by this bug, and the error occurs when reading contents of the changes file immediately following the initial save, Flushing the stream after writing a chunk to the changes file prevents the problem.' id 'a7bc6178-b9ac-4b87-bf97-478cc4927158' date '5 May 2014' time '12:39:30.026 pm' author 'dtl' ancestors ((name 'Collections-eem.567' message 'Fix ([Read|Write]Stream on:...from:...to:...) contents.  The old codewould always copy from 1 to the end, not from whatever thefrom: argument was.' id '78f9c7bb-cb9d-487c-91ba-edd8b89502c1' date '2 May 2014' time '9:54:58.139 am' author 'eem' ancestors ((name 'Collections-nice.566' message 'Let NullStream understand protocol for Character writing.' id 'dc820d7f-79ef-49ee-b1b2-b4f8d7161b4e' date '2 May 2014' time '3:48:25.893 pm' author 'nice' ancestors ((name 'Collections-topa.565' message 'When a stream is created on a collection, it tries to keepusing that collection instead of copying, even in the caseof mutation of the original collection.The code removed prevented this.' id 'b7c264b3-1e69-494d-8979-6f71bc9b846d' date '25 March 2014' time '2:28:36.459 pm' author 'topa' ancestors ((name 'Collections-ul.564' message 'Make sure that Array >> #isLiteral won''t get into an infinite recursion, even if the receiver has an recursive structure.' id '4b9a37ef-df86-40a0-a0dd-8e8b2c04d4ed' date '3 February 2014' time '2:35:36.802 pm' author 'ul' ancestors ((name 'Collections-ul.563' message 'Use the intended fix instead ofanother one for SequenceableCollection class>>new:streamContents:.' id '33f6afa6-4437-4c9b-8844-c445de6b661c' date '20 January 2014' time '5:14:54.483 pm' author 'ul' ancestors ((name 'Collections-ul.562' message '- fixed SequenceableCollection class >> new:streamContents: as suggested by Nicolas Cellier' id '7f1df35e-341a-4826-af42-ad9fba9311e3' date '20 January 2014' time '4:50:22.53 pm' author 'ul' ancestors ((name 'Collections-cwp.561' message 'Flagged methods that need to be made environment-aware.' id 'f56874c6-140a-4497-86b1-694b8b00acd6' date '18 January 2014' time '10:30:33.417 am' author 'cwp' ancestors ((name 'Collections-dtl.560' message 'Relax parsing in RunArray>>scanFrom: to meet expectations of RunArrayTest>>testScanFromTrailer. The example string used in that test does not seem to match the implemention of the fileOut serialization, but the test may be right and the implementation wrong. In any case, relax the parsing here to meet the test expectations, and to be more consistent with the original version of the #scanFrom: method that assumed any unexpected charater to be a separator.' id '1ef138a7-e60c-4698-9cc4-c2f641e5607f' date '16 January 2014' time '8:05:51.73 pm' author 'dtl' ancestors ((name 'Collections-dtl.559' message 'A font height may be either an integer or a float, so change TextFontReference class>>scanFrom: to accept either. This fixes an issue in RunArray class>>scanFrom: which relies on TextFontReference to read the numeric value of font height, which may have been specified as a float in the case of a TTCFont.' id 'a489f57a-b23a-4399-9089-bed7a27b9215' date '6 January 2014' time '6:25:59.947 pm' author 'dtl' ancestors ((name 'Collections-dtl.558' message 'Merge Collections-dtl.556 from inbox and provide additional method categorization for methods in TextAttribute subclasses.Simplify RunArray class>>scanFrom: by arranging for TextAttribute to create the appropriate instance. Remove explicit references to TextAttribute subclasses from RunArray.TextSqkProjectLink is a text attribute that controls project entry and is thus associated with Project.. Move it from Collections-Text to System-Support.' id 'be81a699-1d54-493c-a0b9-6a772ca4d669' date '3 January 2014' time '8:06:41.532 pm' author 'dtl' ancestors ((name 'Collections-dtl.556' message 'Simplify RunArray class>>scanFrom: by arranging for TextAttribute to create the appropriate instance. Remove explicit references to TextAttribute subclasses from RunArray.TextSqkProjectLink is a text attribute that controls project entry and is thus associated with Project.. Move it from Collections-Text to System-Support.' id 'c115b70b-d18c-4f60-b218-2f48af79d653' date '2 January 2014' time '3:54:39.379 pm' author 'dtl' ancestors ((name 'Collections-fbs.555' message 'Move Transcripter out of Collections to a new home, in System-Recovery.' id '3b044956-1e6b-3e4e-a427-7fd939032a30' date '30 December 2013' time '9:59:59.491 am' author 'fbs' ancestors ((name 'Collections-fbs.554' message 'Make browseWithPrettyPrint, browseWithDragNDrop pragma-based preferences.' id 'eed3b0bf-2aaa-8d43-acc7-693d5881a32c' date '29 December 2013' time '7:10:52.228 pm' author 'fbs' ancestors ((name 'Collections-fbs.553' message 'Move all of Collections'' file in/out logic to System, where the other file in/out logic lives (in System-Object Storage and friends).' id '30896006-fd4c-fc47-803c-572d1c1779ad' date '28 December 2013' time '10:22:03.872 pm' author 'fbs' ancestors ((name 'Collections-nice.552' message 'Use non logging Compiler protocol rather than providing a logged: false argument.' id '18bb4a8d-6d47-46b3-ad6f-7514b1e5da7a' date '16 December 2013' time '3:54:57.309 pm' author 'nice' ancestors ((name 'Collections-ul.551' message 'Removed migration code from LRUCache for real.' id '185f3154-6e81-495e-9cf2-27e2ff132f54' date '15 December 2013' time '8:21:59.982 pm' author 'ul' ancestors ((name 'Collections-dtl.550' message 'Move Transcriptor back to Collections.Make the emergency evaluator work in Morphic if MVC is not present, and vice versa.Use Paragraph in MVC, and NewParagraph in Morphic.Morphic implementation is adapted from Cuis.Resolve MVC/Morphic differences through Project current.' id 'b493ee27-501d-44f9-86fe-237401bdeee4' date '14 December 2013' time '4:36:35.768 pm' author 'dtl' ancestors ((name 'Collections-fbs.549' message 'Transcripter is actually MVC specific. Move it there, and other UI frameworks can define their own emergency evaluator.' id '0f65b403-968d-8445-af4f-a0888ccb807d' date '13 December 2013' time '6:54:48.313 pm' author 'fbs' ancestors ((name 'Collections-dtl.548' message 'Transcripter>>initInFrame: should do nothing when not in MVC' id 'b167353b-b9ab-4911-8168-c5f184cab62a' date '12 December 2013' time '6:58:08.878 pm' author 'dtl' ancestors ((name 'Collections-ul.547' message 'Finish migration. Remove migration code.' id 'b9d6e526-de0c-47ae-ae30-97c8bb601e4c' date '10 December 2013' time '7:15:33.532 pm' author 'ul' ancestors ((name 'Collections-ul.546' message 'Scalable LRUCache. Migration code is in the postscript.' id '6fa6992c-8f61-47fa-aedd-173df2cb89f0' date '10 December 2013' time '7:14:34.339 pm' author 'ul' ancestors ((name 'Collections-fbs.545' message 'Creating instances based on user input belongs in a higher level package than Collections.' id 'bae1876f-4049-654b-bd00-d8ed69dd41b7' date '24 November 2013' time '6:41:27.704 pm' author 'fbs' ancestors ((name 'Collections-fbs.544' message 'Move LRUCache from System to Collections, because that''s a more sensible home.This also has the nice property that it breaks the Balloon->System dependency.' id '15771139-bae8-3347-8d63-a02d324e1e48' date '24 November 2013' time '12:47:44.329 pm' author 'fbs' ancestors ((name 'Collections-nice.543' message 'Introduce NotFound Error for errorNotFound: (the comment told it should be a specific error, now it is - this is required for Xtreams).Eliminate code duplication in KeyNotFound.Correct typo in String>>translateToUppercase.' id '5642a410-e41a-4753-b1ce-53e5d750e70d' date '19 November 2013' time '11:33:03.586 pm' author 'nice' ancestors ((name 'Collections-ul.542' message 'Make Dictionary >> #includesKey: more lightweight.' id 'e52fefbe-fb04-46f4-a956-f7bbcb5c8965' date '26 October 2013' time '12:22:26.493 am' author 'ul' ancestors ((name 'Collections-cmm.541' message '- Revert addition of WriteStream>>#endEntry.- Fix to recent Transcripter change.' id '412ef59f-6c4a-4844-94b8-137546e2f0f0' date '15 October 2013' time '2:08:54.58 pm' author 'cmm' ancestors ((name 'Collections-nice.540' message 'Give back the scanCharactersFrom:to:with:rightX:font: methods to *Graphics' id '22b71986-3b7f-4cbc-9e4d-175e39b847fe' date '9 October 2013' time '2:11:22.561 am' author 'nice' ancestors ((name 'Collections-tpr.539' message 'Strings need to understand how to delegate character scanning to the next stage of the process' id 'e33fd51f-59a0-41ab-bbee-08a8a969f31a' date '8 October 2013' time '2:48:12.552 pm' author 'tpr' ancestors ((name 'Collections-cmm.538' message '- Logging output to a #endEntry is sometimes necessary.  So let''s still allow switching to another kind of WriteStream.' id 'f041f162-9c02-499f-866e-27d2e1a31b6b' date '30 September 2013' time '7:50:52.954 pm' author 'cmm' ancestors ((name 'Collections-tpr.537' message 'Add Character class>>characterForColumnBreak - to replace TextComposer equivalent. See Mantis 4814' id 'b3a96179-9642-40b1-93f3-3f1d82f3e256' date '30 September 2013' time '4:06:41.402 pm' author 'tpr' ancestors ((name 'Collections-fbs.536' message 'Update Collections (!) to use RecentMessages.' id '228d0203-45e3-4942-afd0-289273c84fe1' date '24 September 2013' time '10:27:39.488 pm' author 'fbs' ancestors ((name 'Collections-nice.535' message 'Remove OneCharacterSymbols optimization since it is presumed quasi-unused, at least since recent Scanner change.' id '51a740f5-7aa3-452b-aff4-bfeadb8e4ce5' date '8 September 2013' time '10:22:51.173 pm' author 'nice' ancestors ((name 'Collections-cmm.534' message 'Levente''s suggestion.' id '81387474-1ded-423a-b2b9-1def9afbb228' date '7 September 2013' time '12:09:48.775 pm' author 'cmm' ancestors ((name 'Collections-cmm.533' message 'Safer compareSafely:.' id 'f2cabfdf-d828-4a01-a4c5-3080cce8f8cb' date '7 September 2013' time '12:08:00.54 pm' author 'cmm' ancestors ((name 'Collections-cmm.532' message 'Fixed Character>>#isAscii.' id '1e297562-60f7-4d78-ab43-c074c3d56fb6' date '6 September 2013' time '4:52:34.416 pm' author 'cmm' ancestors ((name 'Collections-cmm.531' message '- Remove redundant isVariableBinding override.- Characters can now be tested for isAscii.- Dictionary''s and Set''s made proxy-friendly.- Remove redundant isLiteral override.- Allow #asMutator to work for getter or setter selectors.' id 'da0031c2-e1d3-4f49-a425-9808728e3f1a' date '6 September 2013' time '2:26:33.695 pm' author 'cmm' ancestors ((name 'Collections-ul.530' message 'Fixed/refactored #selectorsContaining:, #selectorsMatching: and #allSymbols in Symbol class.' id 'ea12e381-2990-4d8e-9efb-d034bc676f9f' date '4 September 2013' time '8:59:21.417 pm' author 'ul' ancestors ((name 'Collections-ul.529' message '- reimplemented ArrayedCollection >> #isSorted and #isSortedBy:- added #isSorted and #isSortedBy: to OrderedCollection- added two new variants: #isSortedBetween:and: and #isSortedBy:between:and: which only check the given range' id '50df97ce-0aed-44f0-a0bf-e0f96d541205' date '8 August 2013' time '2:41:52.108 pm' author 'ul' ancestors ((name 'Collections-fbs.528' message 'Consolidate all finalization stuff in System-Finalization.' id 'b987940e-565a-9941-b026-85a6ba5b5d43' date '6 August 2013' time '10:14:16.491 pm' author 'fbs' ancestors ((name 'Collections-nice.527' message 'Simplify Base64MimeConverter class initialization with Character>>to:' id '17e38fb5-76dd-499b-aa6d-bfe07045c28d' date '30 July 2013' time '2:13:07.506 am' author 'nice' ancestors ((name 'Collections-fbs.526' message 'Move ProgressNotification to Collections. Even though it''s not hugely Collection-y, it''s used by low level packages, and it''s usually used to signal processing a collection of things.' id 'fe601e66-7f75-ac42-ae7e-d1362c4b9369' date '25 July 2013' time '9:04:17.03 pm' author 'fbs' ancestors ((name 'Collections-fbs.525' message 'SmalltalkImage current -> Smalltalk.' id '185d41d8-2d5e-554e-b8fc-46e19a07becc' date '25 July 2013' time '8:21:27.078 am' author 'fbs' ancestors ((name 'Collections-fbs.524' message 'Move Exceptions close to where they''re used, rather than collecting them together just because they''re Exceptions.' id '0f99d702-5da3-6a46-aaa7-e74e1dad2999' date '23 July 2013' time '10:43:34.427 am' author 'fbs' ancestors ((name 'Collections-fbs.523' message 'KeyNotFound is critical to Dictionary, so belongs in the same package as Dictionary.(I''m really not a fan of grouping things together because they happen to be Exceptions. Packaging things _functionally_ makes so much more sense.)' id '32a4f963-6471-c249-bea1-7a38c0be95d4' date '22 July 2013' time '9:36:12.48 am' author 'fbs' ancestors ((name 'Collections-fbs.522' message '#gather: (also known as #flatMap: or #mapcan:) belongs in the Collections package: it''s generally useful outside PackageInfo.' id '716983f2-7bba-014d-a133-8bd130322af0' date '3 July 2013' time '10:11:18.754 pm' author 'fbs' ancestors ((name 'Collections-fbs.521' message 'Avoid using Utilities; UIManager default provides a better hook.' id '6a352bb2-6be0-4eea-ac54-abc654e2a8d7' date '5 June 2013' time '8:55:57.568 am' author 'fbs' ancestors ((name 'Collections-nice.520' message 'Introduce Character null' id '6ef25398-faee-45ff-a409-52d3f36d98c8' date '31 May 2013' time '12:23:43.567 am' author 'nice' ancestors ((name 'Collections-fbs.519' message 'Mantis issue 7765: Recategorise SmartRefStream conversion methods.http://bugs.squeak.org/view.php?id=7765' id 'e5aa344c-d69b-4d5b-857f-8159a763b744' date '13 May 2013' time '7:25:21.912 pm' author 'fbs' ancestors ((name 'Collections-nice.518' message 'What''s the best collection type for holding characters?So, let $A to: $Z collect: as: String	-> ''ABCD...''rather than Array	-> #($A $B $C $D ...)' id '1c11d0d8-8bb1-4eb0-b820-46a067ab4a43' date '4 May 2013' time '4:02:58.138 pm' author 'nice' ancestors ((name 'Collections-fbs.517' message 'Separating with whitespace will _always_ work, but at the cost of increased ugliness when not needed. We know that having a binary selector as a key breaks printing, so let''s special-case that. At some later stage we might need to revisit these two methods and add further special cases (or just use whitespace).' id 'f915b900-af5c-491f-a700-0f9899f72044' date '2 May 2013' time '9:05:50.998 pm' author 'fbs' ancestors ((name 'Collections-fbs.516' message 'Surrounding the -> in an Assocation in printed form allows the left side to be a binary selector without things breaking: #* -> #+ otherwise prints as ''#*->#+'', which is the Symbol #*-> followed by garbage.' id 'e787006a-d096-47f3-93da-c4681285fae2' date '1 May 2013' time '10:14:23.588 pm' author 'fbs' ancestors ((name 'Collections-ul.515' message '- a slightly faster (~20%) and simpler (IMHO) implementation of String >> #numArgs' id 'fcc2326f-4e72-46f2-b4b7-352227d94b21' date '27 April 2013' time '10:20:14.97 pm' author 'ul' ancestors ((name 'Collections-fbs.514' message 'Revert the over-eager (attempt at a) fix.' id '26b584d4-1ad3-40b0-b9b1-d888e122116e' date '26 April 2013' time '9:30:07.501 pm' author 'fbs' ancestors ((name 'Collections-fbs.513' message 'This fixes the recent report of an Ubuntu 13.04 machine not being able to save a class comment.https://bugzilla.redhat.com/show_bug.cgi?id=956376' id 'dba4f808-6844-414c-a5bf-5cda0cf4e342' date '26 April 2013' time '11:13:00.656 am' author 'fbs' ancestors ((name 'Collections-bf.512' message 'Debugging should *not* modify a stream.' id 'a45042c6-8fc0-4653-b996-22b40cc825e8' date '9 April 2013' time '1:38:23.935 pm' author 'bf' ancestors ((name 'Collections-tpr.511' message 'Remove BitBlt|WarpBlt>current usage - it''s a vestige of an old experiment' id '028a2dce-fd27-49ab-adc5-933eb24e0bdb' date '25 March 2013' time '2:10:42.848 pm' author 'tpr' ancestors ((name 'Collections-tpr.510' message 'Remove BitBlt|WarpBlt>current usage - it''s a vestige of an old experiment' id '5c1edb37-2156-46db-b82e-acca8c55eee9' date '25 March 2013' time '2:08:58.895 pm' author 'tpr' ancestors ((name 'Collections-nice.509' message 'Fix String>>numArgs: no an empty key in a keyword is not a valid pattern.' id '564cf9ab-5356-416f-b317-51d2c380ce0f' date '11 March 2013' time '11:44:11.214 pm' author 'nice' ancestors ((name 'Collections-nice.508' message 'Let String>>numArgs pass its tests' id '23f2049a-76c4-4ea4-aad6-71513d70aa6a' date '11 March 2013' time '10:10:43.385 pm' author 'nice' ancestors ((name 'Collections-fbs.507' message 'Use `UIManager default edit: ''foo'' title: ''bar''` instead of `''foo'' openInWorkspaceWithTitle: ''bar''`.This method needlessly causes a dependency between Collections and Toolbuilder-Kernel.' id 'be8b7d3f-4ab7-45b8-a0d0-c712cca46ca8' date '8 March 2013' time '12:47:00.807 pm' author 'fbs' ancestors ((name 'Collections-nice.506' message 'merge nice.502 (String combinations)' id '062fc108-7bf2-452d-ba77-aa8f2175eae3' date '6 March 2013' time '11:05:17.838 pm' author 'nice' ancestors ((name 'Collections-bf.505' message 'Put back PositionableStream>>last with a better comment.' id 'e14ee10f-5db6-49d0-9b98-e6f3f1aa0403' date '4 March 2013' time '2:39:40.648 pm' author 'bf' ancestors ((name 'Collections-nice.504' message 'Remove #printOnStream: #storeOnStream: and #propertyListOn:.' id 'f662cd94-7518-4ebf-8b19-7cbfc2345181' date '3 March 2013' time '2:49:23.228 pm' author 'nice' ancestors ((name 'Collections-nice.503' message 'Get rid from two un-necessary usages of ReadStream on:from:to:' id '180c7283-9170-4fd8-9893-16122ba48f56' date '3 March 2013' time '2:36:21.966 pm' author 'nice' ancestors ((name 'Collections-bf.502' message 'Sundry changes:* deal with "[:" and "{}" in String>>findSelector * process numeric entities in String>>asUnHtml* remove PositionableStream>>last (unused, buggy)' id '87a84004-6bba-4930-acf3-a86574e1f415' date '2 March 2013' time '1:45:38.248 pm' author 'bf' ancestors ((name 'Collections-fbs.501' message 'Typo correction.' id '2ae8b43b-e07f-4c95-bf5f-894a35fe3245' date '12 February 2013' time '9:33:45.587 am' author 'fbs' ancestors ((name 'Collections-cmm.500' message 'Categorize overridden method.' id '0a0b5dd7-a9c6-4f08-ad24-e7e36f33a21b' date '30 January 2013' time '10:42:57.578 am' author 'cmm' ancestors ((name 'Collections-cmm.499' message 'FloatCollection inherits the convenient add:/remove: API of OrderedCollection, but using an internal FloatArray for better efficiency.' id '9af9bd27-3342-4203-88e5-22c85c57d5ae' date '28 January 2013' time '8:19:08.858 pm' author 'cmm' ancestors ((name 'Collections-bf.498' message 'Merge Collections-topa.366: Provide #asCamelCase for Strings.' id '8b3351ea-4d1a-4771-985b-589a13b3e605' date '22 January 2013' time '9:12:43.242 am' author 'bf' ancestors ((name 'Collections-nice.497' message 'Thu shalt not invoke super in vain' id '98612202-e775-d64b-a663-1a2a9909d92c' date '2 January 2013' time '6:36:54.091 pm' author 'nice' ancestors ((name 'Collections-bf.496' message 'Cmd-0 should remove text colors.' id '1d1e83a0-08fb-427a-ae24-3fcd3029b8f2' date '6 December 2012' time '7:15:56.137 pm' author 'bf' ancestors ((name 'Collections-ul.495' message 'The result of String >> #base64Encoded shouldn''t contain any white space.' id 'ae1e71c2-3b27-4dfb-8d35-22e2e2562b79' date '30 October 2012' time '2:12:19.35 am' author 'ul' ancestors ((name 'Collections-ul.494' message '- more straightforward String >> #numArgs implementation (early returns, less branches)- added an optimized version of #canBeToken to ByteSymbol- removed the sentence about uppercase first letter from String >> #numArgs, because it wasn''t true even in 2004' id '1b62455b-152d-4ffc-8072-5b6086cb26a8' date '25 October 2012' time '1:56:50.407 am' author 'ul' ancestors ((name 'Collections-cwp.493' message 'Removed leading- and trailing-keywords support from String>>numArgs. Also extracted the class-specific differences into #canBeToken, so that only String need implement #numArgs.' id '0c1728e3-2bdf-4f5b-98d8-1a49539bc32c' date '24 October 2012' time '2:51:20.618 pm' author 'cwp' ancestors ((name 'Collections-cwp.492' message 'Tweak #numArgs, so that Strings respect the #allowUnderscoreSelectors preference, but Symbols don''t.' id '692da7f2-5a98-47ee-bd1c-e8666206f6ed' date '22 October 2012' time '12:42:48.371 am' author 'cwp' ancestors ((name 'Collections-fbs.490' message 'Symbol >> #isBinary returns true if that Symbol is a valid binary message - something like #+, #>>=, and so on. It returns false for all other kinds of Symbols.' id '2929bdcf-a718-4a23-a745-dfb308741c51' date '26 August 2012' time '8:45:14.33 pm' author 'fbs' ancestors ((name 'Collections-ul.488' message 'Updated String >> #unescapePercentsRaw- it always returns the receiver if it is not percent-encoded- the implementation is simpler and slightly faster' id 'a2927620-f372-1f4e-8e29-b6a5ff77fa9f' date '19 August 2012' time '11:26:54.909 am' author 'ul' ancestors ((name 'Collections-cwp.487' message 'Account for the fact that binary selectors can''t include underscores. This means a single underscore must be considered an unary selector.' id '3200b102-5364-462e-9664-94017891a1e3' date '14 August 2012' time '10:41:13.046 am' author 'cwp' ancestors ((name 'Collections-cwp.486' message 'Make selector precedence behave correctly in the presence of underscores.' id 'a704544c-0077-467c-b316-9b7dc2ebefa1' date '13 August 2012' time '11:29:37.608 pm' author 'cwp' ancestors ((name 'Collections-cwp.485' message 'Make Character>>tokenish honour the underscore selectors preference.' id '4eca145f-ba2c-4c38-aa1c-3f6b8f6a9e1b' date '13 August 2012' time '4:26:44.077 pm' author 'cwp' ancestors ((name 'Collections-fbs.483' message 'Re-remove WeakRegistry class>>migrateOldRegistries. Accidental commit during a merge.' id '30032276-9f6d-43d6-8c2a-763acea1a80a' date '3 August 2012' time '9:30:41.524 pm' author 'fbs' ancestors ((name 'Collections-fbs.482' message 'Merge Collections-ael.481remove spurious sharing of associations between a dictionary and another created from it' id 'f236f58a-ba49-4c8c-8314-731f82206158' date '3 August 2012' time '9:26:33.402 pm' author 'fbs' ancestors ((name 'Collections-ael.481' message 'remove spurious sharing of associations between a dictionary and another created from it' id 'c2a7afc0-37ac-404b-ae81-bf782e1dd254' date '30 July 2012' time '2:40:08.671 pm' author 'ael' ancestors ((name 'Collections-cwp.480' message 'merge cwp.470Removed the requirement that ReadOnlyVariableBindings can only be used in Smalltalk globals. This makes it possible to create environments other than the root. (Necessary for EnvironmentTest, and eventually, multiple environments.)' id '746335bc-d901-4860-9347-608c490939cb' date '26 July 2012' time '6:07:30.872 pm' author 'cwp' ancestors ((name 'Collections-bf.479' message 'String>>withUnixLineEndings should not modify the string in-place.' id '76a4f53b-5426-4640-9bb2-6449accdcef6' date '4 July 2012' time '5:37:06.028 pm' author 'bf' ancestors ((name 'Collections-eem.478' message 'Add missing Association>>analogousCodeTo: for CompiledMethod>>=' id '1855c59b-d58a-4caa-99aa-079d76dd8b5f' date '14 June 2012' time '10:14:07.018 am' author 'eem' ancestors ((name 'Collections-dtl.477' message 'Revert previous change, asSocketAddress belongs in the Network package.' id 'fac99769-10b0-4276-86d6-5ae545cc7c52' date '5 June 2012' time '6:52:09.889 pm' author 'dtl' ancestors ((name 'Collections-dtl.476' message 'Adopt ByteArray>>asSocketAddress from Etoys, required for IPV6 socket updates to follow.' id '65ba9d43-c6ae-46c2-920e-8d75e2f807df' date '4 June 2012' time '10:00:45.896 pm' author 'dtl' ancestors ((name 'Collections-bf.475' message 'Add Stream>>print:maxDecimalPlaces:' id '6e9e82af-76de-45e9-8e1a-67229e47f36f' date '16 May 2012' time '6:50:58.033 pm' author 'bf' ancestors ((name 'Collections-cmm.474' message 'Merged cmm.471 to allow, but not require, the system to support concatenation semantics.' id '7b4f3b2a-8b18-4430-8a9b-b3f505b041ed' date '30 April 2012' time '7:48:33.662 pm' author 'cmm' ancestors ((name 'Collections-cmm.471' message 'Allow the system to be extended with concatenation semantics.' id 'e78ed15d-8393-4119-b4ac-df4811747699' date '7 April 2012' time '3:55:28.506 pm' author 'cmm' ancestors ((name 'Collections-nice.470' message 'Republish without the #translated* messages which have been moved in GetText' id '1612b1dd-7b3c-43fa-81d2-46da0eb098eb' date '31 March 2012' time '2:34:33.567 pm' author 'nice' ancestors ((name 'Collections-dtl.469' message 'Fix weak finalization thrashing, root cause of user interrupt issues.Perform the check for VM support of new finalization once at image startUp time. This prevents the weak finalization process from creating new weak references that result in thrashing between VM and image as the VM signals the the image to clean up weak references, and the finalization process produces additional weak to be removed.With this change the finalization process is much less active, and user interrupt handling works as intended such that any of the following can interrupted in the expected way:  "[true] whileTrue"  "[[true] whileTrue] forkAt: Processor userSchedulingPriority + 1"  "Smalltalk createStackOverflow"  "[Smalltalk createStackOverflow] forkAt: Processor userSchedulingPriority + 1"' id 'f8d7d7a5-e127-4108-95ae-6ef48ac43d86' date '30 December 2011' time '12:57:50.064 am' author 'dtl' ancestors ((name 'Collections-cmm.468' message 'Merged.' id 'b0f39ad3-ea43-4c20-848b-adbd7e61224d' date '26 December 2011' time '12:56:38.443 pm' author 'cmm' ancestors ((name 'Collections-cmm.466' message 'Allow subclasses to override the internal ''array'' of a HashedCollection.' id '3a05d4e5-8c72-4b50-85a2-40eba66bc358' date '29 November 2011' time '9:26:57.286 pm' author 'cmm' ancestors ((name 'Collections-ul.465' message 'Improved quicksort by another ~5% (when the receiver is an Array of SmallIntegers) by simplifying swaps, avoiding popIntoTemp: and reordering temporaries.' id '49a23071-1538-2b44-be74-cf1f2dc81fc9' date '13 November 2011' time '5:18:00.299 am' author 'ul' ancestors ((name 'Collections-eem.464' message 'Second part of changes to restore protection against infiniterecursion on printing circular array literals.  Add a visited setto Array>shouldBePrintedAsLiteral => shouldBePrintedAsLiteralVisiting:.' id '0984ea11-ef0f-40e0-9de1-aea54055ef85' date '2 November 2011' time '1:08:39.649 pm' author 'eem' ancestors ((name 'Collections-ul.463' message '- use #becomeForward: instead of #become:' id '2dda520b-035d-8a40-b62b-c285552d07ee' date '4 October 2011' time '8:25:51.321 pm' author 'ul' ancestors ((name 'Collections-eem.462' message 'With SequenceableCollection>size being a subclassResponsibilityLinkedList must implement size.  WIth this	SequenceableCollection allSubclasses select:		[:c| (c whichClassIncludesSelector: #size)			== SequenceableCollection]	=>	an OrderedCollection(SourceFileArray)which is fine since SourceFileArray is abstract.' id '50129323-386f-454d-8569-da4400cdc90e' date '2 October 2011' time '7:11:42.336 pm' author 'eem' ancestors ((name 'Collections-nice.461' message 'Let SequenceableCollection clarify the contract: it is subclassResponsibility to define #size.Otherwise, super #size would lead to an infinite loop with #do: because of circular reference.' id 'e364cca7-0462-4c76-90b5-ace4475101dd' date '2 October 2011' time '7:16:20.194 pm' author 'nice' ancestors ((name 'Collections-eem.460' message 'Fix String>numArgs for prefAllowUnderscoreSelectors regime.' id '0b90a58f-9354-4927-91f0-3432359541fe' date '29 September 2011' time '12:42:36.39 pm' author 'eem' ancestors ((name 'Collections-ul.459' message '- removed an unnecessary check from #quickSortFrom:to:by: (at the end of the loop i < j is guaranteed to be true)' id 'ebf26552-eb0f-6246-b67d-6d46a4d5b5eb' date '10 September 2011' time '9:44:55.456 pm' author 'ul' ancestors ((name 'Collections-ul.458' message 'Inlined and enhanced SortedCollection''s quicksort implementation #sort:to: and moved it to ArrayedCollection as #quickSortFrom:to:by:. It beats our merge sort implementation (by 25-30%) if comparision is cheap enough. Even though methods are inlined by hand, the restructured code is more readable and easier to understand than the previous version. A wide enough browser window is suggested for reading it.' id '9cba8397-d730-d94a-9805-193df105f29b' date '10 September 2011' time '7:31:57.991 pm' author 'ul' ancestors ((name 'Collections-ul.457' message '- no need to call #resetTo: from OrderedCollection class >> newFrom:, because it''s already called by #new: (#setCollection:)- reuse existing binary search method in SequenceableCollection >> findNearbyBinaryIndex:' id 'f07d7d2f-b42d-6241-be93-164c512d5296' date '10 September 2011' time '3:31:39.521 pm' author 'ul' ancestors ((name 'Collections-fbs.456' message 'Mantis #7666: typo in Dictionary class >> #newFromPairs.' id 'a66665f4-54c0-4023-b9cd-ba67db31fdc9' date '9 September 2011' time '11:51:06.387 am' author 'fbs' ancestors ((name 'Collections-eem.455' message 'Add findNearbyBinaryIndex: for DebuggerMethodMap''s rangeForPC:contextIsActiveContext:.' id '717b6721-47e5-4edb-aaa9-66e942c4943a' date '8 September 2011' time '10:43:02.64 am' author 'eem' ancestors ((name 'Collections-ul.454' message '- improved performance of String >> #unescapedPercents- improved performance of RWBinaryOrTextStream >> #upTo:- categorized most uncategorized methods of RWBinaryOrTextStream' id '84c5cf1a-89c4-f643-a3ba-525df170e492' date '9 August 2011' time '1:58:09.614 pm' author 'ul' ancestors ((name 'Collections-ul.453' message 'SequenceableCollection >> #polynomialEval: uses Horner''s scheme.' id '7dcede35-8732-c14f-8035-61be4793b776' date '4 August 2011' time '3:24:13.104 am' author 'ul' ancestors ((name 'Collections-ul.452' message 'Removed unnecessary blocks.' id '41117943-c9ee-8142-ae4f-908517bf8352' date '3 August 2011' time '1:43:28.439 am' author 'ul' ancestors ((name 'Collections-ul.451' message '- removed WideString class>>allMethodsWithEncodingTag:, because it sent an unimplemented method #string:hasEncodingTag:- rewritten WideString class>>allMultiStringMethods and WideString class>>allNonAsciiMethods to use #allMethodsSelect: instead of reinventing the wheel. Not sure if we really need these methods here.' id '88a1eed5-6fe6-c044-9c45-f52203eb3b29' date '25 July 2011' time '2:09:16.563 am' author 'ul' ancestors ((name 'Collections-ul.450' message 'Avoid a multiplication, use low level methods in SequenceableCollection >> #polynomialEval: for better performance.' id '2d09bd44-bfdf-1840-87cb-81ced69f9948' date '25 July 2011' time '1:37:20.234 am' author 'ul' ancestors ((name 'Collections-nice.449' message 'Change the way to print Character delete (from Pharo).Format macToSqueak and use byte arrays.' id '1db0f500-0a4b-4ed7-8c60-2f266436dc49' date '20 July 2011' time '5:19:37.262 pm' author 'nice' ancestors ((name 'Collections-nice.448' message 'Don''t deprecate #hasLiteralThorough: remove it, because the - in the change report are so cute.' id 'e486c811-3c45-4a6a-ad16-aba32db79745' date '20 July 2011' time '12:47:46.869 pm' author 'nice' ancestors ((name 'Collections-nice.447' message 'Refine Association>>literalEqual: to correctly handle variable binding identity.Use literalEqual: in hasLiteral:Deprecate use of Array>>#hasLiteralThorough:' id 'd4b8e2f5-d54f-49a0-a8af-d31df8268adc' date '20 July 2011' time '9:22:39.538 am' author 'nice' ancestors ((name 'Collections-eem.446' message 'Fix Array>>hasLiteral: to not look for ==, but literal equal(class == & value =).Accompanies Kernel-ul.607' id '7adb8007-2e80-415a-9d53-b145ba76dcce' date '19 July 2011' time '9:48:30.436 am' author 'eem' ancestors ((name 'Collections-ul.445' message 'Use #allSelectorsAndMethodsDo: instead of #allSelect:.' id '5bd8b975-3f30-9943-a793-48eeb8593e0e' date '17 July 2011' time '7:43:32.336 pm' author 'ul' ancestors ((name 'Collections-ul.444' message '- Don''t send #forgetDoIts, because it''s not needed anymore.- Use #repeat instead of [ true ] whileTrue and friends.- Use #displayProgressFrom:to:during: instead of #displayProgressAt:from:to:during:.' id 'ffecd66a-0b9a-3f4e-a6cd-f324f81d3e30' date '17 June 2011' time '4:30:54.178 pm' author 'ul' ancestors ((name 'Collections-cmm.443' message 'Moved String>>displayProgressAt:from:to:during: to ToolBuilder-Kernel.' id '824d8b83-2a8f-024d-9ae1-5e9932165479' date '15 June 2011' time '3:14:51.751 pm' author 'cmm' ancestors ((name 'Collections-nice.442' message 'Oops, case of elementary arithmetic error...16r3FC highBit - 16r3FC lowBit + 1 = 8, not 9(negative leadingChar are not allowed)Thanks Levente.' id '32919b15-6f79-4990-9277-8267034615d1' date '1 May 2011' time '10:16:12.584 pm' author 'nice' ancestors ((name 'Collections-nice.441' message 'Remove the bitAnd: mask from leadingChar as it is mostly useless.Replace it with a comment.' id '2137bb66-b2ad-44f8-8414-5dce42a0b79e' date '1 May 2011' time '9:55:49.878 pm' author 'nice' ancestors ((name 'Collections-ul.440' message '- ignore the leadingChar for unique characters in Character class >> #leadingChar:code:- fixed the copying of Characters' id '4c084629-af8b-3740-b919-ec87f228c915' date '26 April 2011' time '2:37:08.897 am' author 'ul' ancestors ((name 'Collections-kb.439' message 'Remove Morphic/MVC dependencies from ProgressInitiationException.' id '316fa50b-2227-0643-bbc3-61e462a930ab' date '18 April 2011' time '5:18:57.99 pm' author 'kb' ancestors ((name 'Collections-ul.438' message '- added #basicNext: to Stream- added #basicBack and #basicUpTo: to PositionableStream- recategorized #basic* methods in Stream- fixed the comment of SequenceableCollection >> #reverseInPlace' id 'e067af4f-c9c6-2f41-a91e-ac221f40bd94' date '11 April 2011' time '4:25:33.627 am' author 'ul' ancestors ((name 'Collections-dtl.437' message 'Projects reloaded from disk should not repeat previous random sequences for #atRandom.Discussion:http://lists.squeakfoundation.org/pipermail/beginners/2011-April/007679.htmlAdd class Collection to the startUp list. Re-seed the generator as per Etoys practice but use existing Random>>initialize to provide the seed.' id 'c1d30608-bcc0-4bb7-205a-2af7a46c1508' date '6 April 2011' time '8:23:37.222 pm' author 'dtl' ancestors ((name 'Collections-ul.436' message 'Improved #beginsWith: and #endsWith: implementations.' id 'f684fc31-c114-bf41-aecb-98f347ccb43e' date '1 April 2011' time '9:25:17.967 pm' author 'ul' ancestors ((name 'Collections-nice.435' message 'Use #newCompiler #newParser' id 'f53b9d14-89c3-4105-8e0b-41cd10076918' date '30 March 2011' time '9:50:07.129 pm' author 'nice' ancestors ((name 'Collections-nice.434' message 'Fix a remaining problem for:	String crlf withNoLineLongerThan: 5While at it, simplify a bit the logic.' id '73a1fe72-b312-4586-aff0-f7fd557cc3fc' date '25 March 2011' time '11:02:55.749 pm' author 'nice' ancestors ((name 'Collections-ul.433' message '- fix: the array has to be copied in SortedCollection >> #reverseInPlace' id '08029ff7-30fe-d441-b986-39a04ae7f730' date '15 March 2011' time '4:20:20.644 pm' author 'ul' ancestors ((name 'Collections-ul.432' message '- added SequenceableCollection >> #reverseInPlace, because #reverse can''t be used to reverse the collection in place.- changed SequenceableCollection >> #reversed to work with OrderedCollections- removed OrderedCollection >> #reversed- updated SortedCollection >> #reverseInPlace' id 'fdfbcb54-51ad-2d41-84df-36b50ea10ed6' date '15 March 2011' time '2:57:58.007 pm' author 'ul' ancestors ((name 'Collections-cmm.431' message '- Added Collection>>#detect:ifFound:ifNone:.' id '81bff0a8-276a-4011-ab91-9a7102fdf741' date '5 March 2011' time '2:23:24.654 pm' author 'cmm' ancestors ((name 'Collections-ul.430' message '- fix: #overlappingPairsCollect: didn''t work with OrderedCollections' id '5e9df9e8-bcc4-5d43-818a-5cbc4082988d' date '1 March 2011' time '8:26:29.929 am' author 'ul' ancestors ((name 'Collections-ul.429' message 'String''s  #getInteger32: and #putInteger32:at: were moved to Nebraska.' id 'd06ca77f-a95d-134b-9474-847ce5c808b7' date '28 February 2011' time '7:46:37.501 am' author 'ul' ancestors ((name 'Collections-laza.428' message 'Some minor recats' id 'f943155d-9f78-844d-9db4-9ae5396da757' date '26 February 2011' time '11:31:16.656 am' author 'laza' ancestors ((name 'Collections-ul.427' message 'OrderedCollection tweaks:- optimized (bytecode + stack usage) #addFirst: and #addLast:- removed the #asInteger send from #at:put:, because no other operations use it- recategorized and commented #reset and #resetTo:' id '40a987b8-4024-9e45-bdb9-ac0b0b888ad2' date '24 February 2011' time '2:42:16.909 pm' author 'ul' ancestors ((name 'Collections-ul.426' message '- fix: make sure that PositionableStream >> #positionOfSubCollection:ifAbsent: restores the position of the stream even if the subcollection is not found- also removed some unreachable code and refactored the method' id '1ef01c01-6a9e-784f-a56d-9dd8f6182024' date '22 February 2011' time '4:28:33.228 pm' author 'ul' ancestors ((name 'Collections-ul.425' message '- bytecode optimized Set >> #includes:- removed Dictionary >> #includes: (Collection''s is basically the same and Dictionary is not a subclass of Set anymore)- simplified String >> #isAsciiString' id '6f203d66-93a8-c847-bccc-296f68b45d03' date '12 February 2011' time '1:17:09.686 am' author 'ul' ancestors ((name 'Collections-ul.424' message '- reimplemented String >> #expandMacrosWithArguments:' id 'f9d0075a-9597-ff42-9db7-cfd00ee6a60b' date '10 February 2011' time '11:33:26.53 pm' author 'ul' ancestors ((name 'Collections-ul.423' message '- use the primitive for FloatArray >> #dot: (~50x faster).' id 'e18716fc-a36b-874c-8946-5c21b447a96f' date '7 February 2011' time '8:55:57.134 pm' author 'ul' ancestors ((name 'Collections-ul.422' message 'Introduced Stream >> #basicNext:putAll:startingAt: which will be used by MultiByteFileStream to fix http://bugs.squeak.org/view.php?id=7603 .' id '89c6854c-b6d1-1646-a22b-bbc47ce7522f' date '31 January 2011' time '2:02:00.387 am' author 'ul' ancestors ((name 'Collections-ul.421' message 'Compact all HashedCollections instead of just rehashing during aggressive clean up.' id '64b9958e-b619-b944-8fce-0b9d59e69f20' date '31 January 2011' time '12:07:34.568 am' author 'ul' ancestors ((name 'Collections-ul.420' message '- do not raise an error in String >> #match: if the receiver contains ''**'' or ''*#'' as a substring.- fixed the comment in String >> #match:' id 'aadc4c69-dd68-4f46-8370-dda4404f0153' date '15 January 2011' time '1:57:14.662 pm' author 'ul' ancestors ((name 'Collections-mtf.419' message 'delegate String >> displayProgressAt:from:to:during: thru UIManager so that it works in Tweak, MVC, and Morphic' id 'b7480421-9a49-974b-ba11-eabd6e4aa053' date '21 December 2010' time '10:11:25.701999999 pm' author 'mtf' ancestors ((name 'Collections-ar.418' message 'Adds FloatArray>>normalize from Croquet for in-place normalization.' id '86763125-572f-a44b-8b82-ce7de39fb46d' date '14 December 2010' time '8:21:44.816 am' author 'ar' ancestors ((name 'Collections-mtf.417' message 'Commited the remainder of the change that lets textAttributes have their own poppup menu. Load me before Morphic-mtf.496' id 'e6dd0961-e419-4b0d-bcf9-4358291e1f5c' date '13 December 2010' time '11:25:18.99 pm' author 'mtf' ancestors ((name 'Collections-mtf.416' message 'merged' id '21950283-2968-4d55-ad8a-c28704a7afdc' date '13 December 2010' time '1:36:07.348 pm' author 'mtf' ancestors ((name 'Collections-mtf.413' message '- print a guesstimate of the size of a shared queue in #printOn:cherrypicked from Croquet:Name: Collections-ar.17Author: arTime: 4 October 2006, 12:44:49 pmUUID: 5efa52eb-3e0f-b44d-8fed-f712332e50a6Ancestors: Collections-ar.16- print a guesstimate of the size of a shared queue in #printOn:' id '4e45df56-aa5f-458c-9433-34f99ade30ad' date '12 December 2010' time '10:00:14.975 pm' author 'mtf' ancestors ((name 'Collections-mtf.412' message 'added convenience method: Transcript showln: that prints a line with a carriage return to transcript.imported from OpenCobalt Collections-jrd.40' id '914110ae-fc74-410d-b816-ebac6af7162f' date '9 December 2010' time '12:49:06.157 pm' author 'mtf' ancestors ((name 'Collections-ul.411' message '- use #shouldBePrintedAsLiteral instead of #isLiteral when printing or storing characters and arrays' id '42a0b87a-f525-6345-bd2c-e55186e17c9d' date '23 November 2010' time '1:56:22.424 pm' author 'ul' ancestors ((name 'Collections-ul.410' message '- added a translation table to String for exchanging cr and lf characters- simplified and enhanced String''s #withSqueakLineEndings and #withUnixLineEndings' id 'a68748b5-3380-9645-8686-fc80a9710dc6' date '23 November 2010' time '8:24:12.434 am' author 'ul' ancestors ((name 'Collections-ul.409' message '- introduced String >> #withLineEndings:- simplified and unified String''s line-ending changing methods: #withInternetLineEndings, #withSqueakLineEndings  and #withUnixLineEndings' id '849eb41a-5717-9e44-ab23-eae36fb603bb' date '22 November 2010' time '1:35:14.026 pm' author 'ul' ancestors ((name 'Collections-ul.408' message '- findBinary* enhancements from Cuis.' id '1520a654-9c34-734d-ae16-a600d1a2b948' date '17 November 2010' time '12:25:59.364 pm' author 'ul' ancestors ((name 'Collections-ul.407' message '- fix: http://bugs.squeak.org/view.php?id=6841- fix: http://bugs.squeak.org/view.php?id=6665' id 'c66d6765-ca57-cc4c-b08b-0582949ce71a' date '16 November 2010' time '6:40:10.433 am' author 'ul' ancestors ((name 'Collections-ul.406' message '- use #= for integer comparison instead of #== (http://bugs.squeak.org/view.php?id=2788 )' id '9cd8fc97-4673-3340-9ea2-2f3dbd5f38e3' date '15 November 2010' time '10:30:39.825 am' author 'ul' ancestors ((name 'Collections-cmm.405' message '- Moved WeakOrderedCollection to category Collections-Weak.- Removed unnecessary constructors.' id 'bd154437-0a44-462f-8e83-bd348ff937ab' date '11 November 2010' time '4:06:37.51 pm' author 'cmm' ancestors ((name 'Collections-cmm.404' message 'Introduced WeakOrderedCollection.' id 'f4fd12e0-266e-4e95-a4ac-b2064707494c' date '11 November 2010' time '11:08:07.979 am' author 'cmm' ancestors ((name 'Collections-ul.403' message '- merged Collection''s #fold: and #reduce: (it''s a bit faster than the original versions :))- reimplemented Bag >> #sum to fix http://bugs.squeak.org/view.php?id=6560' id '7f81b384-8004-cd44-81e0-9b294d999c8a' date '7 November 2010' time '1:55:55.898 am' author 'ul' ancestors ((name 'Collections-ul.402' message '- enhanced AttributedTextStream so it can be used as a TextStream in some cases.- recategorized a few methods, fixed some comments' id 'c07fdead-7f3a-544f-82dd-4bfe4ef28365' date '2 November 2010' time '10:03:54.289 pm' author 'ul' ancestors ((name 'Collections-ul.401' message '- added Symbol >> #cull:, so unary symbols can be used instead of monadic blocks where #cull: is sent to them (e.g. #ifNotNil:)' id '0a1c53c0-73df-d84f-ab48-5d976d110df2' date '2 November 2010' time '6:27:15.942 pm' author 'ul' ancestors ((name 'Collections-ul.400' message '- use paragma declarations for #inline: and #var:declareC:' id '747015e4-a721-7745-982e-7f9df814845d' date '2 November 2010' time '3:12:07.580999999 am' author 'ul' ancestors ((name 'Collections-ul.399' message '- added a postscript to apply the changes' id 'd9152061-bf6c-eb4a-8a87-4a9bef73ea7e' date '31 October 2010' time '11:36:48.538 pm' author 'ul' ancestors ((name 'Collections-ul.398' message '- restore the behavior of the old finalization scheme' id 'a696b0b6-1bd2-dc45-9606-33aebcfdc74c' date '31 October 2010' time '10:06:44.386 pm' author 'ul' ancestors ((name 'Collections-ar.397' message 'Make Character class>>separators and Character class>>allByteCharacters return strings instead of Arrays (since there is no good reason to use arrays and it solves the immediate issue observed in Mantis #7564). Also provide CharacterSet>>asString to enable its use in concatenation (i.e., ''/'', CharacterSet separators).' id '9b97769f-1f5e-3a47-890d-2292d07b6b1f' date '25 October 2010' time '7:04:17.681 pm' author 'ar' ancestors ((name 'Collections-dtl.396' message 'Remove #migrateOldRegistries (mistakenly restored in the last update)' id '78839599-27f0-41a5-b4d7-d2941daeec4d' date '24 October 2010' time '1:11:29.177 pm' author 'dtl' ancestors ((name 'Collections-dtl.395' message 'Use pragma declarations in methods that are translated to C in MiscPrimitivePlugin. Supports removal of Object>>inline: and Object>>var:declareC: from trunk.' id '89a62a10-7b7b-4963-b90b-83adb9a0c2f1' date '24 October 2010' time '1:00:08.124 pm' author 'dtl' ancestors ((name 'Collections-eem.394' message 'WriteStream>ensureCr useful for writing to the transcript.(better name than ensureACr)' id 'c47c656d-31ac-46e8-a56d-c7879a2db324' date '21 October 2010' time '10:24:12.673 am' author 'eem' ancestors ((name 'Collections-eem.393' message 'WriteStream>ensureACr useful for writing to the transcript.Add SparseLargeArray (for VM profiler).  Generally useful though.' id 'af89302e-d619-4f64-bbd6-0516acf3c155' date '21 October 2010' time '9:48:35.262 am' author 'eem' ancestors ((name 'Collections-ul.392' message '- sped up SharedQueue by implementing SharedQueue >> #makeRoomAtEnd properly. The array holding the objects is grown/shrunk when needed.' id '470b7171-1481-5340-83fc-56706d276e33' date '18 October 2010' time '4:55:37.186 am' author 'ul' ancestors ((name 'Collections-ul.391' message '- use #compact instead of #rehash to ensure prime HashedCollection size' id '09074241-792f-ad4d-b7a5-8fef85f4d2cd' date '17 October 2010' time '3:55:23.521 am' author 'ul' ancestors ((name 'Collections-ul.390' message '- faster OrderedCollection >> #removeAllSuchThat: (for some cases)- use blocks instead of symbols' id '1638a00b-ac3f-ee49-9ea9-60dd8dea28ed' date '17 October 2010' time '3:38:56.423 am' author 'ul' ancestors ((name 'Collections-ul.389' message '- don''t wake up all waiting processes when an item is added to SharedQueue2- avoid double negation and an extra block creation by using #waitWhile: instead of #waitUntil:- fixed SharedQueue2 >> #removeAll (items is not a stream)' id '406e4bb6-951e-1543-80b3-2f0a524cf6bc' date '15 October 2010' time '8:48:17.954 am' author 'ul' ancestors ((name 'Collections-ul.388' message '- moved Dictionary >> #hasBindingThatBeginsWith: to ShoutCore' id '878e4717-8321-9443-a644-b376ff4f9741' date '12 October 2010' time '3:30:55.214 am' author 'ul' ancestors ((name 'Collections-Igor.Stasenko.387' message '- fixed wrong message name.(Still have no idea why would anyone may need to copy weakregistry).' id '2ed932ba-8a25-2c40-b712-94f111823bc0' date '11 October 2010' time '3:16:06.227 pm' author 'Igor.Stasenko' ancestors ((name 'Collections-nice.386' message 'Remove #hashMappedBy: and #identityHashMappedBy:' id '14bfeb25-a255-4838-87d4-4c4dccac4b2d' date '1 October 2010' time '10:37:30.237 pm' author 'nice' ancestors ((name 'Collections-nice.385' message 'Improve comment of Heap. Please feel free to improve me.As the class comment did start with a bit misleading comparison against SortedCollection, provides an optional #fullySort operation to fully sort the Heap and restore comparison ground - hope I didn''t spoil announced O(n log n) efficiency.Of course, #fullySort has no interest for priority queues, but a Heap could be of more general use.' id '4d54da08-721a-4a4d-8387-914046189879' date '30 September 2010' time '11:46:29.277 pm' author 'nice' ancestors ((name 'Collections-ul.384' message '- Finalization enhancements part 3' id '1a219312-0f50-574e-8615-bf87532a46c8' date '26 September 2010' time '2:52:19.252 am' author 'ul' ancestors ((name 'Collections-ul.383' message '- Finalization enhancements part 2' id '4192bba2-2c8f-404c-bf9f-7256f89e2a3d' date '26 September 2010' time '2:50:13.438 am' author 'ul' ancestors ((name 'Collections-ul.382' message '- Finalization enhancements part 1' id 'd69042a0-5600-9f40-9a64-44c89d59dbee' date '26 September 2010' time '2:49:22.722 am' author 'ul' ancestors ((name 'Collections-ul.381' message '- simplified SequenceableCollection >> #indexOf:startingAt:' id '2198e33c-0e2b-cb4e-b54d-5c4a7febb57a' date '12 September 2010' time '4:35:03.62 am' author 'ul' ancestors ((name 'Collections-ul.380' message '- faster non-primitive String "primitives" by using #basicAt: instead of #at: + #asInteger/#asciiValue- revert to #to:do: instead of a #whileTrue: in #indexOfAscii:inString:startingAt: , because that''s also inlined even if the receiver type is unknown' id '0b9b1e03-48cd-4140-9a41-c4e521e9ae24' date '12 September 2010' time '4:14:05.604 am' author 'ul' ancestors ((name 'Collections-ul.379' message '- fix: ByteArray should understand #indexOf:startingAt: because StandardFileStream >> #upTo: uses it in binary mode. Also added a general implementation for SequenceableCollection.- fix: Symbol class >> #allSymbolTablesDo:after: missed some elements, so Alt+q (Cmd+q on Mac) missed some selectors. WeakSet >> #do:after: was also responsible for some misses.- enh: faster String >> #indexOfAscii:inString:startingAt:' id 'e13385ca-4f9f-7b42-a1d6-35cb7d984ee6' date '12 September 2010' time '3:53:45.584 am' author 'ul' ancestors ((name 'Collections-ar.378' message 'Move #lastIndexOfPKSignature: from Collections to Compression.' id 'a33f37e6-04a1-dd47-b75f-d8e52d36d7e6' date '6 September 2010' time '3:32:09.703 pm' author 'ar' ancestors ((name 'Collections-ar.377' message 'Break the dependency between the Collection and the Compression package.' id 'd93b436b-d8ab-d545-bbf1-ef78a2d76915' date '1 September 2010' time '11:31:12.782 pm' author 'ar' ancestors ((name 'Collections-ar.376' message 'Push asUrl into the Network package.' id '8f3dfd78-1053-3844-92a5-ad8843700c9a' date '1 September 2010' time '11:19:13.783 pm' author 'ar' ancestors ((name 'Collections-ar.375' message 'Reclassify methods to fix various package dependencies.' id '87e30eab-a65f-e746-a0af-71bd5cf8f859' date '1 September 2010' time '10:49:41.755 pm' author 'ar' ancestors ((name 'Collections-ul.374' message '- all VMs have finalization support, so there''s no need to check for it anymore- refactored WeakArray class >> #addWeakDependent: ' id 'ab565eba-f6e8-8240-8003-d4d62564e08b' date '27 August 2010' time '11:46:39.683 pm' author 'ul' ancestors ((name 'Collections-nice.372' message 'Enhance Dictionary comment.Fix Set comment, a Set can includes: nil.Fix a typo in IdentitySet.Comment KeyedIdentitySet and SetElement.Note: I didn''t make any effort wrt style homogeneity. Prefered style should be defined first.' id 'e9206906-ab54-4076-af3f-bf1bd833aa4e' date '26 August 2010' time '10:38:04.98 pm' author 'nice' ancestors ((name 'Collections-ar.371' message 'Make Dictionary>>addAll: use #associationsDo: so that it is consistent with the usage of Dictionary>>add:.' id '2186003a-56f8-5246-8f81-24ccb2200e5c' date '24 August 2010' time '8:21:43.472 pm' author 'ar' ancestors ((name 'Collections-nice.370' message 'Fix http://bugs.squeak.org/view.php?id=6943Heap equality should be transitive.A Heap won''t equal an Array anymore, but I very much doubt this feature ever was of any use.Raise your voice if you don''t agree.#collect: use collect:as: and answer an Array, like before#select: uses copyEmpty strategy and now answers another Heap with same sortBlock' id 'fa914463-6f11-482d-9735-887957d45552' date '21 August 2010' time '4:21:21.554 pm' author 'nice' ancestors ((name 'Collections-eem.369' message 'Collection>>fold: and SequenceableCollection>>copyUpThrough:, extensions used by Cog VMMaker.Change to older semantics of Character>>hex for Cog VMMaker.' id 'd00ce3cb-ed13-4fb6-8494-4ecd067c4f1d' date '17 July 2010' time '5:09:14.555 pm' author 'eem' ancestors ((name 'Collections-ar.368' message 'Fix for withNoLineLongerThan:.' id '1d3445e6-fc60-6e42-9996-a1bde20ec5cb' date '15 July 2010' time '5:16:28.929 pm' author 'ar' ancestors ((name 'Collections-eem.367' message 'Fix bug in Symbol class>>selectorsContaining: which won''''t find selectors containing digits.Add Symbol class>>selectorsMatching:.Both the above used in improved MessageNames' id 'f8a9fe6b-b224-4a6b-96ed-04c03a98222d' date '29 June 2010' time '5:33:09.841 pm' author 'eem' ancestors ((name 'Collections-eem.366' message 'Much faster Dictionary>>unreferencedKeys (single passover class hierarchy) speeds up removeUnreferencedKeys.' id 'b8b3d29c-7d22-45a6-a235-aae3dd6316ea' date '29 June 2010' time '5:26:30.834 pm' author 'eem' ancestors ((name 'Collections-ul.365' message '- make sure that all executors are evaluated outside the critical section in WeakRegistry >> #finalizeValues to avoid deadlocks. To achieve this WeakRegistries collect the executors (the same way as it was in Collections-ul.294) and evaluate them at the end of #finalizeValues.' id '333e9c8f-4030-fc4d-bb69-e8d8e175edc9' date '15 June 2010' time '11:52:55.947 am' author 'ul' ancestors ((name 'Collections-ul.362' message '- a fix for the bug reported at http://lists.squeakfoundation.org/pipermail/squeak-dev/2010-June/151226.html' id 'dabb4c65-e01e-8247-b3a4-6c5db80a2307' date '12 June 2010' time '9:23:26.86 pm' author 'ul' ancestors ((name 'Collections-nice.361' message 'Provides a new String utility #lines.(aString lines) is to replace (aString findTokens: String cr).It works for any line-ending (CR LF CR-LF).' id '4815d286-151b-5e40-9306-020d15d6a8c6' date '11 June 2010' time '9:47:59.541 pm' author 'nice' ancestors ((name 'Collections-nice.360' message 'Merge Collections-eem.355Make ByteArray>>isLiteral more specific so that e.g.subinstances such as CompiledMethods are not literal.Without this the PointerFinder is horribly broken.' id '558a78a3-cd80-8e47-94c4-ec27913439f1' date '5 June 2010' time '10:00:50.743 am' author 'nice' ancestors ((name 'Collections-ul.359' message '- removed unused methods- added comments' id '94e7e2da-ccc6-e44b-8145-e4e383b2041f' date '10 May 2010' time '5:33:34.759 pm' author 'ul' ancestors ((name 'Collections-ul.358' message '- OrderedCollection growth fixes' id 'c0381bb4-d024-8644-bfc2-513bbcdda3c3' date '10 May 2010' time '1:46:34.235 pm' author 'ul' ancestors ((name 'Collections-ar.357' message 'Fix http://bugs.squeak.org/view.php?id=6560Provide an implementation of Collection>>reduce: and implement sum in terms of #reduce:.' id 'f4ac1d9d-b397-5e4d-8c27-8b047aea10ad' date '4 May 2010' time '8:54:01.66 am' author 'ar' ancestors ((name 'Collections-ul.356' message '- removed the now unused #goodPrimesForIdentityBasedHashedCollections method from HashedCollection' id '9aa6f0d6-63ec-8e40-bfb1-d1e94984b432' date '13 April 2010' time '12:24:32.111 am' author 'ul' ancestors ((name 'Collections-ul.355' message '- started to add documentation for HashedCollection- fixed HashedCollection >> #add:withOccurrences:- unified primes for identity-based and non-identitity-based HashedCollection table sizes- added #compact protocol to HashedCollection hierarchy which is similar to the #rehash protocol- fixed Symbol class >> #compactSymbolTable' id '214765b9-8ae4-c045-9dbe-2d224a1aff4a' date '13 April 2010' time '12:12:46.102 am' author 'ul' ancestors ((name 'Collections-ar.354' message 'Fix a bug in RunArray which would cause Texts with empty runs to lose their emphasis.' id '2d199e05-1bfe-db49-89c9-00dacb98f80d' date '9 April 2010' time '9:28:03.969 pm' author 'ar' ancestors ((name 'Collections-ar.353' message 'Fix do:displayingProgress: to suppress changing the label to nil if the display block returns nil (accidentally or deliberately).' id '4ea0e395-ea15-b348-8053-a7d27929e745' date '31 March 2010' time '10:11:07.876 pm' author 'ar' ancestors ((name 'Collections-nice.352' message 'Fix http://bugs.squeak.org/view.php?id=6391Assign correct unicode value to Euro character(old value was that of MacRoman encoding - previously the generic currency symbol)' id '2b2bbeff-91ba-184d-b22c-687fb9bf2717' date '29 March 2010' time '6:21:10.011 pm' author 'nice' ancestors ((name 'Collections-ul.351' message '- added #shuffle and #shuffleBy: to shuffle SequenceableCollections in-place' id '4bfd8358-2138-6e4c-b4a7-060897bffd7e' date '28 March 2010' time '1:08:22.188 am' author 'ul' ancestors ((name 'Collections-ul.350' message '- removed the now unused Latin1ToUtf8Map and Latin1ToUtf8Encodings class variables and #initialize from ByteString class' id '695fc542-8fa3-7145-95d9-f6071bc53b8e' date '27 March 2010' time '9:10:57.621 pm' author 'ul' ancestors ((name 'Collections-ul.349' message '- use the TextConverter''s to encode/decode strings' id '58393b9b-da51-9249-a692-36539b18270b' date '26 March 2010' time '11:31:00.282 pm' author 'ul' ancestors ((name 'Collections-nice.348' message '1) Fix a few _ assignments2) implement #errorCantGoBack http://bugs.squeak.org/view.php?id=7483' id '7b1df1f0-43d8-4731-8c1b-081b4cf85df9' date '26 March 2010' time '9:03:00.205 pm' author 'nice' ancestors ((name 'Collections-ar.347' message 'Merging Collections-ul.345:- implement #backChunk with #back instead of #oldBack' id 'b9932ad8-3c74-d548-a744-5b0f3d35a784' date '25 March 2010' time '8:49:08.296 pm' author 'ar' ancestors ((name 'Collections-ul.346' message '- added #sorted protocol to collections- added two helpful comments to discourage the use of #asSortedCollection*' id '4354e2d0-eb5a-184b-b0bd-3a8e5b591d2a' date '22 March 2010' time '5:29:48.92 pm' author 'ul' ancestors ((name 'Collections-ul.344' message '- deprecated SequenceableCollection >> #reverse, so it can become an in-place reverse method in the future' id 'af46409f-8765-514a-ba19-c8611f0e4dce' date '21 March 2010' time '5:54:02.747 pm' author 'ul' ancestors ((name 'Collections-nice.343' message 'Let add: answer the added object argument' id '8de2776c-4240-b04a-9295-397608c5a202' date '20 March 2010' time '8:09:12.409 am' author 'nice' ancestors ((name 'Collections-nice.342' message 'Let nextPut: answer the put object.Same for nextPutAll:, answer the collection argument' id '7d8aa52b-dfec-364e-bc7d-4226882bc7e0' date '19 March 2010' time '7:17:03.665 pm' author 'nice' ancestors ((name 'Collections-ul.341' message '- speed up identity-based hashed collections for heavy users by using different primes for capacity.' id '9fbc9e35-4ba0-814c-8c2f-7d8923f4d20a' date '19 March 2010' time '2:24:31.907 pm' author 'ul' ancestors ((name 'Collections-nice.340' message 'Generalize stream protocol #readInto:startingAt:count:It''s the same as #next:into:startingAt: but avoid a copy and rather answer number of elements read.' id '1d3154f5-018f-4624-a9e5-12b7349558b7' date '16 March 2010' time '11:16:54.234 pm' author 'nice' ancestors ((name 'Collections-ul.339' message '- added missing negation' id '556fddfd-0f27-1d4c-91c7-a3d7745f80cf' date '15 March 2010' time '4:53:56.284 am' author 'ul' ancestors ((name 'Collections-ul.338' message 'Lint:- removed supersends where we can be sure that no superclass implements the method- implemented missing Collection >> #atRandom:, removed the implementation from HashedCollection, because it''s the same- removed double indexing from SequenceableCollection >> #collect:from:to: while kept the same number of bytecodes inside the loop- unified categorization of several methods in the hierarchy' id '4a2c5a00-a82e-f14e-a6db-ef2a25b8b0f3' date '15 March 2010' time '4:04:29.921 am' author 'ul' ancestors ((name 'Collections-nice.337' message 'Speed-up Character digitValue PART 2.Now get rid of class var initialization guard.Also use value instead of charCode to reach almost a x2 speedup (5x for lowercase).Benchmark:[''0123456789'' do: [:e | e digitValue]] benchNEW ''312686.2627474505 per second.''ORIG  ''197284.9430113977 per second.''[''0123456789ABCDEF'' do: [:e | e digitValue]] benchNEW ''208848.6302739452 per second.BEFORE ''120782.4435112977 per second.''[''0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ'' do: [:e | e digitValue]] benchNEW ''116395.9208158368 per second.''ORIG ''55508.49830033993 per second.''[''0123456789abcdefghijklmnopqrstuvwxyz'' do: [:e | e digitValue]] benchNEW ''108928.8142371526 per second.''ORIG ''21273.34533093381 per second.''' id '3ab4c3f1-efb0-45eb-ab03-ee128eb95705' date '15 March 2010' time '12:00:01.788 am' author 'nice' ancestors ((name 'Collections-nice.336' message '1) Cache Character DigitValues to gain some speed.Warning: continue parsing lowercase digits, though it was not consensual.Note: class var initialization testing will be removed in nxt release. It''s only an upgrade guard.2) Avoid using size == 0Benchmark:[''0123456789'' do: [:e | e digitValue]] benchAFTER ''233969.8060387922 per second.'' ''236418.5162967407 per second.''BEFORE  ''188964.4071185763 per second.'' ''197284.9430113977 per second.''[''0123456789ABCDEF'' do: [:e | e digitValue]] benchAFTER ''155123.375324935 per second.'' ''152030.1939612078 per second.''BEFORE ''120782.4435112977 per second.'' ''119901.4197160568 per second.''[''0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ'' do: [:e | e digitValue]] benchAFTER ''73469.7060587882 per second.'' ''73144.3711257749 per second.''BEFORE ''55508.49830033993 per second.'' ''55637.2725454909 per second.''[''0123456789abcdefghijklmnopqrstuvwxyz'' do: [:e | e digitValue]] benchAFTER ''71603.8792241552 per second.'' ''72621.875624875 per second.''BEFORE ''21194.16116776645 per second.'' ''21273.34533093381 per second.''' id '18f05259-ecd0-4bbf-b7ae-ef5319522e2e' date '14 March 2010' time '11:30:32.668 pm' author 'nice' ancestors ((name 'Collections-HenrikSperreJohansen.335' message 'Faster String>>convertFromWithConverter: from Pharo.Useful in f.ex. asVMPathName.Test: [|converter|	converter := UTF8TextConverter new.	1 to: 50000 do: [:ix | ''abcÃ¦Ã¸Ã¥askjdhfasiugbvsipruvnasipvunasivunapivunasieun'' convertToWithConverter: converter]] timeToRun' id '8b8f9b48-feb7-7d4d-9458-dcd334ad6e81' date '12 March 2010' time '3:38:49.316 pm' author 'HenrikSperreJohansen' ancestors ((name 'Collections-ar.334' message 'Give Base64MimeConverter the ability to not break lines longer than 70 characters. Useful (for example) when using long base64 encodings in urls.' id '689affd2-3259-b84c-993f-7e2053244cf5' date '9 March 2010' time '10:24:00.841 pm' author 'ar' ancestors ((name 'Collections-ar.333' message 'Signal KeyNotFound instead of a generic error and provide the key in the exception and error message.' id 'ce2fbc3d-5a3e-3249-b7bb-7213aaf39ee6' date '9 March 2010' time '10:09:37.168 pm' author 'ar' ancestors ((name 'Collections-ar.332' message '- Comments for Collection>>min,max- Optimized implementations for Bag>>min,max,sum' id '13cc4a5a-e0a0-8e47-a637-ef1c0b28e643' date '9 March 2010' time '9:59:22.438 pm' author 'ar' ancestors ((name 'Collections-ul.331' message '- removed the postscript' id '4814bc27-f6ff-f242-a2fe-d4fe0748ed79' date '10 March 2010' time '5:44:54.677 am' author 'ul' ancestors ((name 'Collections-ul.330' message '- use WeakIdentityKeyDictionary instead of WeakKeyDictionary in WeakRegistry- added a postscript to update existing WeakRegistries' id '5295389d-7e52-504c-acfe-2d918679f006' date '10 March 2010' time '5:35:53.989 am' author 'ul' ancestors ((name 'Collections-klc.329' message 'Return both the minimum and maximum of the given collection in a single pass.Better (certainly reads better) implementation from Randal Schwartz.' id '0781052e-3725-47a4-abca-df8299e9bace' date '7 March 2010' time '6:51:24.486 pm' author 'klc' ancestors ((name 'Collections-klc.328' message 'Return both the minimum and maximum of the given collection in a single pass.' id '6208a119-f157-4dc5-8374-b46d9a3ef3e2' date '7 March 2010' time '6:39:05.113 pm' author 'klc' ancestors ((name 'Collections-ar.327' message 'Avoid dictionary protocol in Smalltalk.' id 'cf3e56b1-2389-e54e-bf97-d2ea5eba849a' date '5 March 2010' time '8:49:17.398 pm' author 'ar' ancestors ((name 'Collections-ar.326' message 'Fix implementation of at:ifPresent:ifAbsent:.' id 'e1937a7e-6776-7d4a-bd13-9956ad3ea411' date '4 March 2010' time '8:34:47.942 pm' author 'ar' ancestors ((name 'Collections-cmm.325' message 'Added Dictionary>>#at:ifPresent:ifAbsent:.  When Dictionary already offers #at:ifPresent: and #at:ifAbsent: api, it is natural to expect, and better to write:	d		at: key		ifPresent: [ : found | .... ]		ifAbsent: [ ... ]than:	(d		at: key		ifPresent: [ : found | ... ])		ifNil: 			[ "absent"			... ].		The new 5-line method relies on the legacy #at:ifPresent:.' id '9e847ff1-32bd-4500-bc4a-8bf745d38e15' date '4 March 2010' time '9:46:10.488 pm' author 'cmm' ancestors ((name 'Collections-nice.324' message 'Fix endOfRun and crossedX encodings in paragraph composition - Part 4 (clean-up)EndOfRun and CrossedX now are unused TextConstants.' id '3bcc36b5-5ee2-c040-bc70-021f3ddfdc99' date '28 February 2010' time '7:43:00.668 pm' author 'nice' ancestors ((name 'Collections-ar.323' message 'Add SequenceableCollection>>splitBy:[do:] to implement common split operation, i.e.,	''Hello<p>World'' splitBy: ''<p>'' => #(''Hello'' ''World'').	''Hello<p>World'' splitBy: ''<p>'' do:[:token| ... ].' id '66aa4c95-8687-8d49-a5cc-3eebe5ad7d2e' date '27 February 2010' time '10:32:57.735 pm' author 'ar' ancestors ((name 'Collections-ar.322' message 'Cleanup for HashedCollection and Symbol.' id '1e60423b-8657-6144-93cc-dd665c70155f' date '26 February 2010' time '11:30:57.149 pm' author 'ar' ancestors ((name 'Collections-ul.321' message '- add support for multiple finalizers per object to WeakRegistry' id '7b829734-4ff6-8941-8eeb-24c08d0d95ec' date '26 February 2010' time '3:01:22.27 pm' author 'ul' ancestors ((name 'Collections-nice.320' message 'Let findAnySubStr:startingAt: use inject:into:Minor speed up, better code, no outer temp assignment' id '5736e518-e074-104f-9b5e-75c544d37e3b' date '26 February 2010' time '12:58:09.834 am' author 'nice' ancestors ((name 'Collections-nice.319' message 'Let ByteArray readHexFrom: read both upper and lower case        ByteArray readHexFrom: ''7A2BD507''                => #[122 43 213 7]' id '44063696-ed6c-804a-96ec-f8bfa5d7daf2' date '26 February 2010' time '12:07:50.053 am' author 'nice' ancestors ((name 'Collections-ar.318' message 'Introducing NullStream - a generator and consumer of an infinite number of elements just like /dev/null. Useful for testing and benchmarks.' id '8f0ad3d5-ed2f-2a4b-b453-b1f97d8fbf2c' date '25 February 2010' time '2:56:24.321 pm' author 'ar' ancestors ((name 'Collections-ul.317' message '- removed String >> #lastPositionOf: because it does the same as SequenceableCollection >> #lastIndexOf:' id '8be93a58-5ad8-6a49-b0d9-cd29daf8bdc2' date '24 February 2010' time '9:56:28.457 pm' author 'ul' ancestors ((name 'Collections-ar.316' message 'Oops, RunArray values should be arrays not ordered collections.' id '77f1e7b2-602d-0244-b05d-94998ad3e15e' date '24 February 2010' time '6:19:14.474 pm' author 'ar' ancestors ((name 'Collections-ar.315' message 'Fix an ancient bug in RunArray class>>scanFrom: which was never triggered in the past since RunArray contents would never be empty (initialized to a TextFontChange at least). Now they can be, which unveiled the bug, namely that when a RunArray of the form:	RunArray 		runs: #(1 1 1) 		values: { {}. {TextEmphasis bold}. {} }.would be stored, the last value element would be lost when reading it back. With rather hairy consequences.Also, we can afford meaningful variable names in our code instead of ''aa'', ''rr'', and ''vv''.' id '6415ae24-c876-a04a-9c18-43cbc796e8b7' date '24 February 2010' time '6:14:58.766 pm' author 'ar' ancestors ((name 'Collections-edc.314' message 'Added String-lastPositionOf convenience method' id '74aa25e4-9646-4f83-9141-e72890b6cd4e' date '24 February 2010' time '7:46:05.588 am' author 'edc' ancestors ((name 'Collections-ul.313' message 'Finalization enhancement (part 2)- cleanup' id '4f43900b-93d5-7144-a11a-84da97796c6e' date '23 February 2010' time '4:49:31.951999999 pm' author 'ul' ancestors ((name 'Collections-ul.312' message 'Finalization enhancement (part 1)- use immediate finalization' id '4726ab22-cdf9-d344-b6ed-cffd7fbf66c5' date '23 February 2010' time '4:46:42.193 pm' author 'ul' ancestors ((name 'Collections-ar.310' message 'Conversions from/to hex representations in ByteArray, for example:	#[122 43 213 7] hex 		=> ''7a2bd507''	ByteArray readHexFrom: ''7a2bd507'' 		=> #[122 43 213 7]Similarly these can be used for subclasses, e.g.,	UUID new hex 		=> ''97c1f2ddf9209948b329319a30c16386''	UUID readHexFrom: ''97c1f2ddf9209948b329319a30c16386'' 		=> 97c1f2dd-f920-9948-b329-319a30c16386' id 'eb685ed0-dba7-d546-b63e-08f76154d027' date '23 February 2010' time '7:16:34.191 am' author 'ar' ancestors ((name 'Collections-ul.309' message '- add missing #like: and #like:ifAbsent:' id '28c775af-d787-1447-aaaa-9fc1b115b8c3' date '19 February 2010' time '3:44:50.455 pm' author 'ul' ancestors ((name 'Collections-ul.308' message '- somewhat faster finalization' id '2de68222-ce83-6945-990f-bea94a0c857c' date '17 February 2010' time '8:43:52.85 pm' author 'ul' ancestors ((name 'Collections-ar.307' message 'Merge class Generator from http://source.lukas-renggli.ch/continuations/Generator-ar.5.mcz' id '310c7f68-38f8-334c-b7bd-89b28955a4ff' date '13 February 2010' time '3:37:40.191 pm' author 'ar' ancestors ((name 'Collections-nice.306' message 'Patch the ugly RunArray scanFrom: which did expect reading an invalid integer would answer 0.Note: i find it ugly for other reasons...' id 'd06e4f5d-dcea-0748-a4b9-191ff89dcff1' date '13 February 2010' time '3:16:04.05 am' author 'nice' ancestors ((name 'Collections-cmm.305' message '- Added Array class>>#empty and String class>>#empty to provide applications with canonicalized instances of these oft-used objects; since they are embedded as literals in the CompiledMethod.' id '59300dfb-27b3-4eda-98d7-5ca6231f641c' date '12 February 2010' time '11:02:16.61 am' author 'cmm' ancestors ((name 'Collections-ar.304' message 'Fix an age-old bug in Association>>hash which causes extreme slowdowns in compiling Unicode methods. Association>>hash does not need to hash the value; it''s slow and useless.' id '9e97b360-adf1-f745-8f8c-562aa08d566e' date '11 February 2010' time '11:52:58.959 pm' author 'ar' ancestors ((name 'Collections-ar.303' message 'Change EncodedCharSet>>digitValue: to EncodedCharSet>>digitValueOf:. Part 2/3.' id '3ad71ebf-93be-2843-a1e0-eb1ca2dcb352' date '11 February 2010' time '11:43:43.61 pm' author 'ar' ancestors ((name 'Collections-dtl.302' message 'Eliminate explicit Transcripter dependency on MVC Paragraph. Note that Transcripter currently lacks a Morphic view.' id '750753ed-971a-43db-b071-570a3cca5b14' date '12 February 2010' time '12:02:33.051 am' author 'dtl' ancestors ((name 'Collections-dtl.301' message 'Change TranscriptStream>>closeAllViews to use #changed: #update: rather than traverse dependents. Removes MVC/Morphic dependency.Change TranscriptStream>>countOpenTranscripts to select on #isTextView rather than testing #isKindOf: on MVC and Morphic view.' id '30d34096-9644-48ed-acae-ae17e9a1fd47' date '10 February 2010' time '5:56:20.834 pm' author 'dtl' ancestors ((name 'Collections-dtl.300' message 'Move #asParagraph methods to package *ST80-Support.' id 'a5ddf322-1a85-4df9-9351-16f280e978e7' date '9 February 2010' time '11:29:42.874 pm' author 'dtl' ancestors ((name 'Collections-nice.299' message 'Add fix from Grease: (2 to: 1) anyOne should fail because empty.' id '8084774f-138c-4be0-9ce6-e1bfff093403' date '9 February 2010' time '8:58:48.298 pm' author 'nice' ancestors ((name 'Collections-nice.298' message 'indentationIfBlank: did not handle lines with or without line ending character the same{(String with: Character tab with: Character space) indentationIfBlank: [:x | nil].(String with: Character tab with: Character space with: Character cr) indentationIfBlank: [:x | nil].}did return #(1 nil), now return #(nil nil)' id 'd1b2f5ef-522f-234d-b32a-0854961f312c' date '8 February 2010' time '12:27:22.955 pm' author 'nice' ancestors ((name 'Collections-nice.297' message 'Optimized Array inject:into: implementation' id 'b7fadee6-f78e-004e-8d4d-1f2679ef5c1c' date '8 February 2010' time '12:23:19.105 pm' author 'nice' ancestors ((name 'Collections-nice.296' message 'Change String>>initialize to force an initialization.An initialization is required because current definition of CSNonSeparators class var does not handle WideString correctly.Example: (String with: 375 asCharacter) withBlanksTrimmed should not be empty...' id 'dacf815d-700c-8142-96be-528521efc1a4' date '8 February 2010' time '10:25:43.56 am' author 'nice' ancestors ((name 'Collections-ar.295' message 'Merging Collections-mtf.291:7219: Improve Streams Usage Readabilityhttp://bugs.squeak.org/view.php?id=7219Adds << to streams to be mostly like nextPutAll, but uses putOn: so that it works with any object.' id '3215e783-a077-f743-a43b-2ecea69031aa' date '6 February 2010' time '11:29:54.991 am' author 'ar' ancestors ((name 'Collections-ul.294' message '- fix #growSize in WeakSet and WeakKeyDictioanrySince we are using self slowSize (which is like tally in not weak collections) instead of array size we should multiply slowSize by 4/3 and 4/3*3/2 is 2.' id '0f626993-dbbf-c04f-bd77-a60413399496' date '5 February 2010' time '4:45:13.443 am' author 'ul' ancestors ((name 'Collections-ul.293' message '- weak collection changes, part 3' id '98d428ae-f3f1-e74c-b305-0795d002ade2' date '5 February 2010' time '4:28:18.492 am' author 'ul' ancestors ((name 'Collections-ul.292' message '- weak collection changes, part 2' id '9ce9d2a0-0fad-7948-853c-788f56581c48' date '5 February 2010' time '4:27:13.702 am' author 'ul' ancestors ((name 'Collections-ul.291' message '- weak collection changes, part 1- a bit faster #fixCollisionsFrom:' id 'fb0d5b15-31c9-014d-960a-6a01bde21d96' date '5 February 2010' time '4:11:04.879 am' author 'ul' ancestors ((name 'Collections-mpe.290' message 'add a helper method to count the number of open Transcripts' id '16f08817-12b2-412e-aabd-27d02e5c693a' date '2 February 2010' time '9:01:59.056 pm' author 'mpe' ancestors ((name 'Collections-ar.289' message 'Complete Set with nil support by providing proper modifications to KeyedSet and WeakSet.' id '87822d82-f84f-c743-be96-cb1c4e3c9df2' date '1 February 2010' time '9:38:20.103 pm' author 'ar' ancestors ((name 'Collections-ar.288' message 'Sets with nil: Merge code from http://bugs.squeak.org/view.php?id=7413 before it rots even more.' id '50bb9e1d-6487-fa4a-b39b-72d5e7290090' date '1 February 2010' time '8:25:27.355 pm' author 'ar' ancestors ((name 'Collections-ar.287' message 'Merge Collections-edc.286 with some changes:- Implement both beginsWithAnyOf: as well as endsWithAnyOf:- Push the implementation up to SequenceableCollection- Simplify the implementation (using #anySatisfy:)- Add comments (also in beginsWith: and endsWith:)- Add tests' id '3840f8bc-07e3-6f4c-a3d6-8b52f89973aa' date '1 February 2010' time '7:16:54.576 pm' author 'ar' ancestors ((name 'Collections-edc.285' message '-enh Add String > beginsWithAnyOf:' id 'b62a5e69-31ed-4958-b317-621a163b5a90' date '29 January 2010' time '7:01:04.567 am' author 'edc' ancestors ((name 'Collections-ul.284' message '- fix: ignore Byte Order Mark in ByteString >> #utf8ToSqueak' id '855b55a0-8aa2-ed4a-8612-d1153fa8f656' date '29 January 2010' time '1:37:36.08 am' author 'ul' ancestors ((name 'Collections-ul.282' message 'In the HashedCollection hierarchy:- cosmetic changes: use #ifNotNil: if possible- use unary symbols instead of blocks with a single unary send- removed unnecessary line from #atRandom- restored correct compatibility method for #fullCheckIn Dictionary:- make sure that #associationsSelect: works with PluggableDictionary by using #copyEmpty instead of #species + #new- deprecated #keyForIdentity:, because it''s similar to #keyAtIdentityValue:ifAbsent:In WeakKeyDictionary:- #rehash throws away nil keys, so we don''t have to iterate twice over array- don''t let the key go away in #noCheckNoGrowFillFrom:In WeakKeyToCollectionDictionary:- don''t let the key go away in #noCheckNoGrowFillFrom:- removed #finalizeValues because it became same as superIn WeakSet:- #do:after: doesn''t skip the first element if anElement is nil- speed up #slowSize- don''t rehash twice in #grow, just count the occupied slots first with #slowSizeOther:- simplified a few KeyedSet''s  methods- added #collect: to PluggableDictionary (super doesn''t copy the blocks)' id '44962376-0c2e-ea4c-9fce-9fb056cd768b' date '25 January 2010' time '10:56:13.924 pm' author 'ul' ancestors ((name 'Collections-nice.281' message 'Remove alternate-syntax remnants #dialect and #withStyleFor:do:It''s useless to provide a backward hook since so many things lack in current image.No sender, single implementors, not maintained for years, no use to deprecate either.' id '3f912e96-4454-45d1-a980-a3e8e7bb6081' date '19 January 2010' time '12:47:46.346 am' author 'nice' ancestors ((name 'Collections-nice.280' message 'Fast-up linesDo: & coSame idea than withSqueakLineEndings' id 'daaafc43-9896-4a4a-88cd-ac3c4255a745' date '19 January 2010' time '12:43:28.817 am' author 'nice' ancestors ((name 'Collections-nice.279' message 'remove a useless fixTempsfast-up #withInternetLineEndings a bitfast-up #withSqueakLineEndings substantiallyadd a fast #withUnixLineEndings' id '161387ef-e444-46d2-9a5e-4a744bff3e97' date '18 January 2010' time '11:40:13.347 pm' author 'nice' ancestors ((name 'Collections-ar.278' message 'Fix for withNoLineLongerThan: bug.' id 'd4f9bb76-0a96-214d-a374-19454fc1e221' date '11 January 2010' time '8:02:24.751 pm' author 'ar' ancestors ((name 'Collections-ul.277' message '- code critics' id '9866315b-49ee-0442-93e1-12f448adafb6' date '11 January 2010' time '8:14:18.037 am' author 'ul' ancestors ((name 'Collections-dtl.276' message 'Preserve #fullCheck for compatibility with external packages (i.e., extension methods in Dictionary etc). Important for SystemTracing package loading.' id '77fae7af-c5f8-4fe8-b328-680cdd71115f' date '9 January 2010' time '6:12:34 am' author 'dtl' ancestors ((name 'Collections-ar.275' message 'Preserve findElementOrNil: for compatibility with external packages (i.e., extension methods in Dictionary etc).' id '4eec6753-6711-094f-8a81-01f191056c76' date '8 January 2010' time '9:03:46 am' author 'ar' ancestors ((name 'Collections-nice.274' message 'Simplify asLegalSelector' id 'fad23f8c-d34f-44b4-9da2-e741fc8c235c' date '5 January 2010' time '6:37:34 am' author 'nice' ancestors ((name 'Collections-nice.273' message 'Simplify asLegalSelector' id 'a8db7acb-c39b-437c-a675-5eabe00cf073' date '5 January 2010' time '6:37 am' author 'nice' ancestors ((name 'Collections-ar.272' message 'Make Etoys unloadable: Move Etoys content to Etoys package.' id '27d2de35-817a-9846-af4e-27c7342a1091' date '4 January 2010' time '12:35:10 pm' author 'ar' ancestors ((name 'Collections-nice.271' message 'move #basicType to EToys' id '5b4c8839-dd4c-44d1-a5b6-714fc76ff1f5' date '3 January 2010' time '3:32:46 am' author 'nice' ancestors ((name 'Collections-nice.270' message 'Don''t assign block argument with nil, with closure that is not necessary.' id '5b66ad19-fe20-4025-a9e3-8713fc034d9f' date '1 January 2010' time '1:17:25 am' author 'nice' ancestors ((name 'Collections-ar.269' message 'Tidy up do:displayingProgress:every: a little. Make sure we update label before processing the element (may not be valid afterwards) and ensure that progress is always displayed for the first and the last element.' id 'e0d39f0d-6a39-6243-a032-9d93d8364c82' date '31 December 2009' time '8:35:06 am' author 'ar' ancestors ((name 'Collections-ar.268' message 'Enhancements to Collection>>do:displayingProgress:. The new version has two additional features: It allows the provision of a block argument for the label instead of a string, i.e.,Smalltalk allClasses    do:[:aClass| (Delay forMilliseconds: 1) wait]    displayingProgress:[:aClass| ''Processing '', aClass name]The second addition is an update limit that ensures that we''re not spending our time in display updates. When the update limit is zero, we will update every round through the iteration, see:(Smalltalk allClasses)    do:[:aClass| (Delay forMilliseconds: 1) wait]    displayingProgress:[:aClass| ''Processing '', aClass name]    every: 0.whereas with non-zero argument we only do this every n msecs:(Smalltalk allClasses)    do:[:aClass| (Delay forMilliseconds: 1) wait]    displayingProgress:[:aClass| ''Processing '', aClass name]    every: 200.The default update limit is 20ms which should be a pretty good general choice.' id 'd7d8920f-95b8-bd48-80d1-ccca70274fb6' date '31 December 2009' time '8:00:38 am' author 'ar' ancestors ((name 'Collections-ul.267' message '- improved SequenceableCollection >> #shuffledBy:' id '6a8e39c1-9002-b64b-a51b-defcdb4b75cb' date '28 December 2009' time '2:05:02 am' author 'ul' ancestors ((name 'Collections-ar.266' message 'Allow implicit coercion to string when using string concatenation, i.e,	Transcript cr; show: ''The value is: '', 3.instead of	Transcript cr; show: ''The value is: '', 3 printString.' id 'c22b1738-a188-894b-a453-c8bfd3ec5686' date '27 December 2009' time '3:02:19 am' author 'ar' ancestors ((name 'Collections-nice.265' message 'Cosmetic: move or remove a few temps inside closures' id 'bfa554c4-f01a-4c79-850a-4c052d93e58c' date '27 December 2009' time '4:56:32 am' author 'nice' ancestors ((name 'Collections-nice.264' message 'Cosmetic: puch a few temps inside closures' id '8db81a5b-e4a4-400a-bae3-f92ecfa1d1a6' date '26 December 2009' time '11:12:07 am' author 'nice' ancestors ((name 'Collections-nice.263' message 'remove Dictionary>>#occurrencesOf: because same as super' id '3afe82da-f0d8-46aa-b18e-647262d69692' date '26 December 2009' time '1:36:40 am' author 'nice' ancestors ((name 'Collections-nice.262' message 'A return was missing in WideString>>#asPackedIs this message used ? usable ?I doubt you can recover String -> Packed -> String because nothing would distinguish a packed WideString from a packed ByteString...' id 'f49d6013-9741-4fd7-b453-7885d33f9306' date '26 December 2009' time '1:14:32 am' author 'nice' ancestors ((name 'Collections-nice.261' message 'Correct 2 typos in method name Occurance->OccurrenceDeprecate old findLastOccuranceOfString:startingAt:' id 'e4274ddc-1d0c-436a-943a-2fce48421247' date '25 December 2009' time '2:49:37 am' author 'nice' ancestors ((name 'Collections-ul.260' message '- make sure that SortedCollection''s #sort and #sort: update the sortBlock' id 'de4b02f8-b0aa-5e47-93f7-4a3e3c300060' date '23 December 2009' time '12:23:32 pm' author 'ul' ancestors ((name 'Collections-ul.259' message '- merged Collections-nice.256' id 'a72038cf-e6a6-9a41-ae33-4a060f20af91' date '22 December 2009' time '7:44:15 am' author 'ul' ancestors ((name 'Collections-ar.256' message 'CompiledMethodTrailer: Cleanup.' id '1f564ddb-6c3f-8d47-9096-fb41ee2b0c8d' date '22 December 2009' time '1:57:14 am' author 'ar' ancestors ((name 'Collections-ar.255' message 'CompiledMethodTrailer phase 1: Preparations.' id 'ea5f7972-be43-ba45-aef0-fb5730b47745' date '22 December 2009' time '12:37:15 pm' author 'ar' ancestors ((name 'Collections-ul.254' message '- removed HashedCollection >> #fullCheck, because it has no senders and it''s private' id '9187cae3-b579-154a-95fc-119cbe234edc' date '14 December 2009' time '6:17:53 am' author 'ul' ancestors ((name 'Collections-ul.253' message '- faster Association creation- removed obsolete comment from Character >> #=- removed HashedCollection >> #findElementOrNil: because it''s private and deprecated- changed HashedCollection >> #fullCheck to really keep the 1/4 of the array free- inlined #fullCheck into HashedCollection >> #atNewIndex:put:' id '2aa55fbb-6918-024a-b850-2c2b3400fcfe' date '14 December 2009' time '6:15:34 am' author 'ul' ancestors ((name 'Collections-ul.252' message '- fix: let WideString >> #replaceFrom:to:with:startingAt: use the primitive if replacement is a ByteString' id 'c3608b76-4031-4b47-b4c2-c9f0d413f81c' date '14 December 2009' time '2:55:19 am' author 'ul' ancestors ((name 'Collections-nice.251' message 'CharacterSetComplement can find fast in aByteString too' id 'fd9f9c54-99a1-524a-a524-8baf9e8fb1a0' date '11 December 2009' time '9:10:23 am' author 'nice' ancestors ((name 'Collections-nice.250' message 'Implement subclassResponsibility remove:ifAbsent: in CharacterSet family.Cache the byteArrayMap of a WideCharacterSet.Update class comment.' id 'b5e0979e-1391-fd45-82ef-23cc83d21600' date '10 December 2009' time '7:25:35 am' author 'nice' ancestors ((name 'Collections-nice.249' message 'Oops, sorry for double posting, I forgot to update the comment.Note that it would be interesting to see how non inlined version performs in COG:| byte byteOffset |1 to: aMap size do: [:i | 	(byte := aMap at: i) = 0 ifFalse: [		byteOffset := (i bitShift: 3) - 9.		[aBlock value: (byteOffset + byte lowBit).		(byte := byte bitAnd: byte - 1) = 0] whileFalse]]' id '4e2e3a9e-98ca-1f48-9ead-1b32c2a196dc' date '10 December 2009' time '6:36:07 am' author 'nice' ancestors ((name 'Collections-nice.248' message 'Just for fun, optimize a bit more WideCharacterSet bitmap:do:1) it now enumerates Characters in ascending value2) the trick to eliminate the lowest bit is just beautiful (a generalization of isPowerOfTwo)Of course, I could also tabulate all the bits in an Array of 255 ByteArray, but that would be no fun...' id '5d63293d-c113-c84e-8437-2fed14a79a58' date '10 December 2009' time '6:09:40 am' author 'nice' ancestors ((name 'Collections-nice.247' message 'Clean-up support code for mutating WideCharacterSet internal representation to ByteArray' id '0c718ec5-e9fd-d54a-8813-7d55de313538' date '9 December 2009' time '9:25:48 am' author 'nice' ancestors ((name 'Collections-nice.246' message 'After an idea from Henrik Johansen, speed-up WideCharacterSet enumeration- 1) do not use a WordArray but a ByteArray to avoid large integers- 2) inline enumeration of bits in a byte with optimistic subtraction of highest bit (work best if bits pattern is sparse)' id '93e084cc-d836-1146-a61d-5ce2a8972cba' date '9 December 2009' time '9:03:30 am' author 'nice' ancestors ((name 'Collections-nice.245' message 'Move indexOfAnyOf: & co from String to SequenceableCollectionMake it work for any collection argument, not just CharacterSetHandle optimized ByteString+CharacterSet case by double dispatching-- this removes ugly class checks --Implement a fast ReadStream upToAnyOf:do: thanks to above changes' id 'cd040b28-e703-8241-9671-a3b500f3c4b5' date '9 December 2009' time '4:06:35 am' author 'nice' ancestors ((name 'Collections-nice.244' message 'Cosmetic clean-up:- remove a useless send to private setString:setRuns: (and a useless Text creation)- remove a useless send to oldBack crap' id 'bb113dba-c81b-1f41-9185-65495b2b5f86' date '9 December 2009' time '2:24:31 am' author 'nice' ancestors ((name 'Collections-nice.243' message 'Correct ReadStream #upToEnd and #upTo: with respect to readLimit' id '307de818-7b7f-ea49-b30b-e342e4caeeef' date '9 December 2009' time '12:59:56 pm' author 'nice' ancestors ((name 'Collections-ul.242' message '- fix: Character >> #digitValue shadowed instance variable: value- fix: Character >> #storeBinaryOn: didn''t work with non-octet characters- faster methods in String: #convertFromWithConverter:, #convertToWithConverter: and #skipDelimiters:startingAt:' id '9524ed86-4a97-f74e-9e05-bdd35c6a5f64' date '9 December 2009' time '10:59:18 am' author 'ul' ancestors ((name 'Collections-nice.241' message 'Provide a universal #nextLine relying on #upToAnyOf:do:Subclass might want to override #upToAnyOf:do: for speed' id '1f4db188-b57c-7e49-b65c-2121cd0e9d46' date '7 December 2009' time '8:54:02 am' author 'nice' ancestors ((name 'Collections-ar.240' message 'Signal OutOfMemory instead of calling signalLowSpace.' id '96e09369-25c5-664e-ab0b-f9361614b2b6' date '4 December 2009' time '2:12:56 am' author 'ar' ancestors ((name 'Collections-nice.239' message 'Remove some now useless fixTemps' id 'd67661a8-1206-da45-90f5-3c5081799230' date '4 December 2009' time '3:57:30 am' author 'nice' ancestors ((name 'Collections-ul.238' message '- added #lf and #crlf to WriteStream (like #cr)- updated String >> #withInternetLineEndings' id '86a69c95-3e4b-5d4a-adc6-36e3f1039500' date '2 December 2009' time '5:54:41 am' author 'ul' ancestors ((name 'Collections-ul.237' message '- remove CollectionRehashingUtility- clear postscript' id '5632cf97-0dce-1942-8edd-2d63e55e7b10' date '1 December 2009' time '4:55:21 am' author 'ul' ancestors ((name 'Collections-ul.236' message '- revert #do: #associationsDo: and the senders of #scanForEmptySlotFor: - removed preamble- add grow tweak to WeakSet- rehash everything at postscript' id '7574c4aa-b907-1f4e-ba28-661aa9c084ae' date '1 December 2009' time '4:54:17 am' author 'ul' ancestors ((name 'Collections-ul.235' message 'Part 2 of IdentitySet hash change.' id '602bd45e-622a-a248-b87d-12efe1f99c84' date '1 December 2009' time '4:39:23 am' author 'ul' ancestors ((name 'Collections-ul.234' message 'Part 1 of IdentitySet hash change.Also removed previous preamble.' id 'cbf77c63-cfff-dd40-9dac-e48fce824ea4' date '1 December 2009' time '4:38:39 am' author 'ul' ancestors ((name 'Collections-ul.233' message 'Part 2 of WeakIdentityKeyDictionary hash change.' id 'b5e9b392-4055-0e45-8a29-1eff47faa883' date '1 December 2009' time '4:36:35 am' author 'ul' ancestors ((name 'Collections-ul.232' message 'Part 1 of WeakIdentityKeyDictionary hash change.Also removed previous preamble.' id '775f15c4-da80-9b4a-bf1c-a909ad305387' date '1 December 2009' time '4:35:49 am' author 'ul' ancestors ((name 'Collections-ul.231' message 'Part 2 of KeyedIdentitySet hash change.' id '475eb0bf-076a-384b-8b7d-b7695f145442' date '1 December 2009' time '4:33:38 am' author 'ul' ancestors ((name 'Collections-ul.230' message 'Part 1 of KeyedIdentitySet hash change.Also removed previous preamble.' id '9130582b-780e-8f4d-9daa-ca90b6b15da3' date '1 December 2009' time '4:32:14 am' author 'ul' ancestors ((name 'Collections-ul.229' message 'Part 2 of IdentityDictionary hash change.' id '24338770-dc79-094d-9c95-97e9d65cfab4' date '1 December 2009' time '4:29:44 am' author 'ul' ancestors ((name 'Collections-ul.228' message 'Part 1 of IdentityDictionary hash change.Also removed previous postscript.' id 'f703f0eb-7da9-a44e-b2c4-ec682d060db8' date '1 December 2009' time '4:28:09 am' author 'ul' ancestors ((name 'Collections-ul.217' message 'Replace sends of #scanForEmptySlotFor: with #scanFor:. This enables atomic changes of the hash implementation.' id 'a67f6177-4f3f-bd41-af32-c1881c7f0e20' date '30 November 2009' time '4:47:54 am' author 'ul' ancestors ((name 'Collections-ul.216' message 'Ensure prime capacity for all HashedCollections but MethodDictionaries.' id '51fa8244-e870-234e-8157-3e604d301cda' date '30 November 2009' time '4:42:13 am' author 'ul' ancestors ((name 'Collections-ul.215' message '- added CollectionRehashingUtility- updated Set >> #do:, WeakSet >> #do: and Dictionary >> #associationsDo: to allow iteration while being rehashed' id '99b5bb85-6601-eb4c-a0f7-cd1a0e5a8d1f' date '30 November 2009' time '4:21:41 am' author 'ul' ancestors ((name 'Collections-dtl.214' message 'Use "Project current" idiom in TestSqkProjectLink>>actOnClickFor:Move SharedQueue2>>removeAll and SharedQueue2>>removeAllSuchThat: from category "*39Deprecated" back to "accessing". These had been put in the 39Deprecated package, but have never been marked deprecated (and should not be).' id '357d781b-6b29-47ba-a2f2-74faf72585ed' date '29 November 2009' time '10:32:29 am' author 'dtl' ancestors ((name 'Collections-nice.213' message 'Support for literal ByteArray #[1 2 3]' id '5154a9ec-be60-2648-9d01-66aa3679e15c' date '27 November 2009' time '12:49:56 pm' author 'nice' ancestors ((name 'Collections-ar.212' message 'Merging Collections-ul.210, Collections-ul.211:- HashedCollections have prime capacity (if they are not oversized)- HashedCollections'' growth rate is not 2, but 1.5 (2 for small sizes which decreases to 1.5 as the size increases)(based on AndrÃ©s Valloud''s changes made for pharo)Load Kernel-ul.305 before this.- replaced 32359813 with 32435981 in HashedCollection >> #goodPrimes.' id 'fdceaa93-63c2-fe47-bf3e-0c2ba9e1a0f8' date '24 November 2009' time '9:48:13 am' author 'ar' ancestors ((name 'Collections-ul.209' message '- fix: String >> #withInternetLineEndings raised an MNU: WriteStream doesNotUnderstand: #lf' id '7b06f5ea-0659-5d49-8e84-9256a3de1671' date '23 November 2009' time '2:34:16 am' author 'ul' ancestors ((name 'Collections-nice.208' message 'Speedup OrderedCollection and SortedCollection asArray (a usual pattern)size 1 -> 1.6xsize 10 -> 2.8xsize 100 -> 12.1xsize 1000 -> 27.7x' id 'c77d53b2-acef-48e6-b686-333c323a77a5' date '22 November 2009' time '10:10:09 am' author 'nice' ancestors ((name 'Collections-nice.207' message 'remove duplicated code from #convertToSystemString' id '77786328-e950-4241-9c3e-6999e35efb38' date '22 November 2009' time '9:11:30 am' author 'nice' ancestors ((name 'Collections-nice.206' message '1) merge ul.205 (collect:into: collect:as:)2) correct #nextLine and #upToAnyOf: using a new message #collectionSpecies' id '53a79cf1-f758-47e4-9bdd-589e86cc5de7' date '22 November 2009' time '6:28:03 am' author 'nice' ancestors ((name 'Collections-ar.205' message 'Collection>>ifEmpty: and Collection>>ifNotEmpty: should behave like #ifNil: and return self unless the condition is met. Makes collection manipulation easier, for example 	port := ((hostname copyAfter: $:) ifEmpty:[''80'']) asIntegerinstead of 	portString:= hostname copyAfter: $:.	portString ifEmpty:[portString := ''80''].	port := portString asInteger.etc.' id '0550788a-c49c-ef4c-a9bc-ded59113fd53' date '21 November 2009' time '1:07:12 am' author 'ar' ancestors ((name 'Collections-ar.204' message 'Merging Collections-ul.200, Collections-ul.201, Collections-ul.202, Collections-ul.203:- moved #like: from HashedCollection to Set- HashedCollection doesn''t implmenet #do: anymore, implementation is moved to Set >> #do: and Dictionary >> #associationsDo:- Dictionary >> #do: sends #valuesDo:- Set >> collect: sends #do: to self, instead of it''s array. This enables one to change the way enumeration methods work, by reimplementing only #do: in subclasses.- minor enhancement in #scanForEmptySlotFor: in identity based hashedcollections.- added missing #yourself sends to #copyEmpty implementors- removed #noCheckAdd: implementations since they were private- other cosmetic changes, like isNil ifTrue: replaced by ifNil:, etc.- added a class comment to WeakSet (this is required to avoid the failure of ClassTestCase)- a fix for the bug in WeakSet >> #includes:- removed HashedCollection >> #do: because it was the same as in Collection' id '87c8eab4-58f1-b845-9b98-d47c58d34302' date '20 November 2009' time '7:19:18 am' author 'ar' ancestors ((name 'Collections-ul.202' message '- a fix for the bug in WeakSet >> #includes:' id '6b8450f9-ae47-1c48-9ce7-5e829e8770fb' date '20 November 2009' time '11:07:11 am' author 'ul' ancestors ((name 'Collections-ul.201' message '- added a class comment to WeakSet (this is required to avoid the failure of ClassTestCase)' id '8b0482c9-ea2e-fa4a-8238-54d2ea502f64' date '20 November 2009' time '10:57:59 am' author 'ul' ancestors ((name 'Collections-ul.199' message 'Dictionary is not a Set anymore.- Removed Dictionary >> #asSet, because it''s same as in super.- Added a super send to Dictionary >> #postCopy.- Moved #occurencesOf: and #postCopy back to Set from HashedCollection.' id '1f413b65-3cdd-4047-95e8-6025ff91aa49' date '19 November 2009' time '1:49:03 am' author 'ul' ancestors ((name 'Collections-ul.198' message 'Introduced a new abstract collection class: HashedCollection.- Moved methods common with Dictionary from Set to HashedCollection.- Set is now a subclass of HashedCollection.- Added necessary stub methods to HashedCollection with #subclassResponsibility sends.- Deprecated Set >> #rehashAllSets, replaced it with HashedCollection rehashAll.- Moved deprecation of #someElement from comment to code.' id 'cc9f8c67-d812-ee42-8eeb-7c2d59037a32' date '19 November 2009' time '1:22:03 am' author 'ul' ancestors ((name 'Collections-nice.197' message 'revert PositionnableStream>>nextLine which is broken for some subclass - until a better fix' id 'c2afc3fe-ecc6-4168-ad7f-7667553b7032' date '17 November 2009' time '9:39:55 am' author 'nice' ancestors ((name 'Collections-nice.196' message 'Correct bug reported on beginners list''aa aa Ã©Ã© aa aa'' encodeForHTTP ' id '24d4a90b-3d42-0945-8f92-b25c7b464ff8' date '17 November 2009' time '11:14:59 am' author 'nice' ancestors ((name 'Collections-nice.195' message 'Correct my own #withNoLineLongerThan: error and make the test pass' id '1c276a72-f8f6-42d3-a580-f53d92fefb84' date '16 November 2009' time '9:41:05 am' author 'nice' ancestors ((name 'Collections-nice.194' message 'Avoid an off end line indexAdd cr/lf/crlf support for one more message (with speed up versus simple cr version...)' id 'e20ffd97-6350-4cf9-9424-d1576bc1ffb2' date '16 November 2009' time '8:51:26 am' author 'nice' ancestors ((name 'Collections-nice.193' message 'Handle more crlf cases' id 'a94e2d4b-aa4b-c94c-b082-05ad77bef91c' date '16 November 2009' time '5:50:18 am' author 'nice' ancestors ((name 'Collections-nice.192' message 'Some changes for handling cr/lf/crlf line delimiters in String' id 'ea8893b0-c42d-134b-8752-3d9ac395b62d' date '16 November 2009' time '1:25:56 am' author 'nice' ancestors ((name 'Collections-nice.191' message 'Add a crlf utility to CharacterSet.This will provide better support for different lineEndConventions.' id '9688bec6-3f23-d448-b642-f55d8fa6f425' date '16 November 2009' time '12:16:11 pm' author 'nice' ancestors ((name 'Collections-ul.190' message 'In Set and subclasses:- reimplemented #fixCollisionsFrom:- removed #keyAt: and #swap:with:Load Kernel-ul.297 before this' id '0eb718d2-fbcb-664c-b0d9-1350c528cc80' date '13 November 2009' time '2:40:52 am' author 'ul' ancestors ((name 'Collections-ul.186' message '- removed Character >> #asIRCLowercase and String >> #asIRCLowercase, because they belong to the Network-IRC package- moved all #hasContentsInExplorer and #explorerContents to Morphic-Explorer- updated Collection''s #ifEmpty:, #ifEmpty:ifNotEmpty:, #ifEmpty:ifNotEmptyDo:, #ifNotEmpty:ifEmpty:, #ifNotEmptyDo:ifEmpty: to enable the compiler to optimize the #ifTrue:ifFalse: sends- same for Text >> #alignmentAt:ifAbsent: - added SequenceableCollection >> #replace: which is an in-place version of #collect: (the implementation of Dictionary >> #explorerContents in Morphic-Explorer uses it)- changed Set >> #atRandom: to use #= instead of #== for integer comparison' id '978f1a6f-c445-6745-bf80-47e1c48f0ecf' date '11 November 2009' time '8:32:51 am' author 'ul' ancestors ((name 'Collections-nice.184' message 'clean-up isSelfEvaluating' id '06a26ea1-20b5-4e30-8452-7b74fef5afba' date '9 November 2009' time '12:13:57 pm' author 'nice' ancestors ((name 'Collections-ar.183' message 'Merging Collections-ul.179, Collections-ul.180, Collections-ul.181, Collections-ul.182:- added: String >> #hashWithInitialHash: which lets the string to decide which hash implementation to use, this way ByteStrings can use the primitive implementation instead of the general one- speed up mergesort for the general case (using <= for comparison), sacrificing < 1% performance for other cases- allow symbols to be evaluated as comparison blocks. For example: sorting an Array in descening order can be as simple as: array sort: #>=, it''s also faster than using a block.- simplified Dictionary >> #keysSortedSafely - simplified WeakRegistry >> #keys- save a few bytecodes in #scanFor: of identity based collections when their size is between 4097 and 8191- fix: WeakKeyDictionary >> #finalizeValues: (increment the tally, and make sure that we don''t lose the key)- collect the objects which should be finalized into an IdentitySet instead of an OrderedCollection in WeakRegistry >> #finalizeValues this should give better performance in WeakKeyDictionary >> #finalizeValues:' id '2e07a36b-f72b-6a42-a58b-72a620a3d515' date '4 November 2009' time '11:14:39 am' author 'ar' ancestors ((name 'Collections-ul.179' message '- added: String >> #hashWithInitialHash: which lets the string to decide which hash implementation to use, this way ByteStrings can use the primitive implementation instead of the general one' id '9a009479-a5f8-e94b-ab1c-e72105381ff9' date '4 November 2009' time '10:54:30 am' author 'ul' ancestors ((name 'Collections-nice.178' message 'subclasses of Array are not literal' id '0c724f71-9fc7-4701-a3cb-787c96f8c374' date '2 November 2009' time '10:41:30 am' author 'nice' ancestors ((name 'Collections-nice.177' message 'Patch to make literal Array store Float exactly' id '5444f379-2664-46a1-9db9-7c74edf779fe' date '31 October 2009' time '5:41:03 am' author 'nice' ancestors ((name 'Collections-ar.176' message 'Merging Name: Collections-ul.175- reimplemented Set >> #rehashAllSets, it sends the new #rehashAllInstances to self and all subclasses.- deprecated #quickRehashAllSets, because it didn''t rehash all subinstances of Set and #rehashAllSets is fast enough with Kernel-ul.283, it also sends #rehashAllSets instead of the old implementation (no senders in trunk).use it with Kernel-ul.283, load order doesn''t matter' id '99c0fe48-8a57-904d-b39a-67de96d0d748' date '30 October 2009' time '11:20:47 am' author 'ar' ancestors ((name 'Collections-nice.175' message 'Implement Eliot suggestion to always print Array with a brace format (unless they are literal).Thus I renamed #printAsSelfEvaluatingFormOn: -> #printAsBraceFormOn:If community agree on this one, then more cleanup and removal will follow' id 'b57c4abc-b35c-430d-a8f1-28a4956dd753' date '31 October 2009' time '12:01:10 pm' author 'nice' ancestors ((name 'Collections-nice.174' message 'A bit of cleanup before printing every Array with a Brace notation (unless they are literal of course)' id '56b3b0ea-6199-4d3b-9961-89a635d5ed50' date '30 October 2009' time '11:37:32 am' author 'nice' ancestors ((name 'Collections-nice.173' message 'Correct some #isSelfEvaluating implementations that were a bit relax.Anyway, the implementation is still weak:Try ((0@1 extent: 1@1) -> 0) isSelfEvaluatingThen try to evaluate ((0@1 extent: 1@1) -> 0) printString' id '78f5d352-d818-4437-998e-c60239e5e305' date '30 October 2009' time '8:42:27 am' author 'nice' ancestors ((name 'Collections-ar.172' message 'Ensure leading char gets inserted properly in utf8ToSqueak.' id '16488c43-6599-cf45-8502-bce910fa280a' date '23 October 2009' time '9:56:15 am' author 'ar' ancestors ((name 'Collections-nice.171' message 'deprecated #fasterKeys(should be removed soon)' id 'b82b4a65-94cc-4cf5-a91a-127a9bf65ccf' date '21 October 2009' time '1:50:44 am' author 'nice' ancestors ((name 'Collections-nice.170' message 'Make keys answer an Array rather than a Set/IdentitySet/PluggableSetWARNING: cross your fingers...' id '3451e8e1-37eb-48b0-ada6-6f49b067d81e' date '20 October 2009' time '11:24:20 am' author 'nice' ancestors ((name 'Collections-nice.169' message 'Track selectors usage, use #includesSelector: #selectorsDo: and #asSet where due' id '8423efba-a854-4304-8cdd-b77e7fb6866f' date '20 October 2009' time '9:25 am' author 'nice' ancestors ((name 'Collections-nice.168' message 'Generalize the fasterKeys trick implementation.Most senders of keys won''t need a Set.(81 of 129 trunk senders after a first pass, surely more)' id 'c006741a-d74a-9442-a096-ecd92a04f199' date '19 October 2009' time '10:59:45 am' author 'nice' ancestors ((name 'Collections-nice.167' message 'http://bugs.squeak.org/view.php?id=7362use self class instead of Text, so that we can subclass Text' id '95819d6c-2419-0244-bce5-75e402e44ec3' date '19 October 2009' time '12:32:29 pm' author 'nice' ancestors ((name 'Collections-ar.166' message 'Merging Collections-ul.164, Collections-ul.165:- removed Matrix >> #shallowCopy. The contents array is already copied in #postCopy, don''t have to do it twice. This may break code which assumes that #shallowCopy copies the contents array which is a really bad assumption.- also removed empty category "copying" from Interval- faster and simpler String >> #format:, String >> #withBlanksTrimmed' id '9abba6f5-43ec-b047-bd87-bf240bbac59d' date '13 October 2009' time '7:35:06 am' author 'ar' ancestors ((name 'Collections-ul.163' message '- faster shuffle' id '0b0ed95e-4b15-ae44-9f7f-639cc85b4256' date '9 October 2009' time '2:36:21 am' author 'ul' ancestors ((name 'Collections-nice.162' message 'Fix for http://bugs.squeak.org/view.php?id=7258Dictionary asSet does not behave like a Set' id 'a03ce3b0-6630-734f-aa39-54a496fbed7a' date '6 October 2009' time '2:29:51 am' author 'nice' ancestors ((name 'Collections-nice.161' message 'Fix http://bugs.squeak.org/view.php?id=6972Some TextConstants are hardcoded in TextAligment' id '97669dc7-c213-466a-8012-1a8ba00a9e00' date '5 October 2009' time '10:43:28 am' author 'nice' ancestors ((name 'Collections-nice.160' message 'Finish clean-up from http://bugs.squeak.org/view.php?id=6395' id '1b3f2a1c-082a-4f21-8b59-120d5610458a' date '5 October 2009' time '9:00:19 am' author 'nice' ancestors ((name 'Collections-nice.159' message 'As signalled by Henrik Johansen in Pharo list, it might be safer to  modify the monitor inst. var. after all the others in case postCopy is used outside its ^self shallowCopy postCopy context.' id 'a6cab506-9527-4527-92e3-f43a1f5b675f' date '5 October 2009' time '7:10:28 am' author 'nice' ancestors ((name 'Collections-nice.158' message 'Apply patch from http://bugs.squeak.org/view.php?id=6535keyBlock and sortBlock are lost when creating a collection of the same species. Unlike http://bugs.squeak.org/view.php?id=6535 initial solution, avoid defining a basicShallowCopy.This requires using postCopy paradigm as pre-requisite.If new methods are added before old methods are modified, this patch should load without problem in MC, else I will revert...' id '27baf0fe-4d19-0e4e-841a-1f3abfcf7901' date '5 October 2009' time '10:23:31 am' author 'nice' ancestors ((name 'Collections-nice.157' message 'Also related to copy refactoring from http://bugs.squeak.org/view.php?id=7404It appears that #fixTemps is not needed anymore with new BlockClosure, making #postCopyBlocks unecessary.' id '14ec31b1-5693-4440-bbf9-87d58eff63a7' date '5 October 2009' time '10:13:17 am' author 'nice' ancestors ((name 'Collections-nice.156' message 'According to http://bugs.squeak.org/view.php?id=7402Modify various Collection copy to use postCopy paradigm.shallowCopyThis should solve http://bugs.squeak.org/view.php?id=7402http://bugs.squeak.org/view.php?id=7403This is also a prerequisite for solvinghttp://bugs.squeak.org/view.php?id=6535' id 'fb89bd58-d1e5-e840-8e03-b03bd109374f' date '5 October 2009' time '10:02:15 am' author 'nice' ancestors ((name 'Collections-nice.155' message 'According to http://bugs.squeak.org/view.php?id=7404switch Collection copy to postCopy paradigm.This should solve http://bugs.squeak.org/view.php?id=7402http://bugs.squeak.org/view.php?id=7403This is also a prerequisite for solvinghttp://bugs.squeak.org/view.php?id=6535' id '1a144df9-0ee9-f54f-99f8-9ba20df78e2a' date '5 October 2009' time '9:59:49 am' author 'nice' ancestors ((name 'Collections-dtl.154' message 'A TranscriptStream window opened from the Tools flap is not attached to the global Transcript. Change TranscriptStream class>>buildWith: to use Transcript rather than self new.' id 'ca8ec6f5-eec8-436e-8710-e848d5edf9cf' date '5 October 2009' time '12:00:11 pm' author 'dtl' ancestors ((name 'Collections-dtl.153' message 'Add range checks to the primitive fallback code in IntegerArray>>at:put: and IntegerArray>>atAllPut:. Throw an error for out of range value to prevent arithmetic overflow.Reference Mantis 7309' id '862a5701-d4ea-4fb5-b598-9829568bbdcb' date '3 October 2009' time '5:03:37 am' author 'dtl' ancestors ((name 'Collections-nice.152' message 'Fix bug http://bugs.squeak.org/view.php?id=5331beginsWith: did not work with a WideString receiver/argumentSolution is to use super beginsWith: rather than fast primitive, except if both receiver and argument are bytes....' id '3a9d8bc0-dc5d-4cad-84f8-1d80fb850b4c' date '3 October 2009' time '9:45:06 am' author 'nice' ancestors ((name 'Collections-nice.151' message 'Merge patch from http://bugs.squeak.org/view.php?id=6366Avoid direct use of findSubstring:in:starting:matchTable: and CaseSensitiveOrder / CaseInsensitiveOrder because it does not work with WideString' id '1c18912c-877b-4777-b8ad-d6f8a9e27717' date '3 October 2009' time '9:36:34 am' author 'nice' ancestors ((name 'Collections-ar.150' message 'Merging Collections-ul.149:- removed zero check from WeakSet >> #like:' id 'ed19ab06-dd57-0e4f-a80c-0c5cba39e948' date '30 September 2009' time '9:29:03 am' author 'ar' ancestors ((name 'Collections-ul.148' message '- replaced #whileFalse: with #whileFalse in #scanFor: and #scanForEmptySlotFor: implementations (both are inlined)- don''t share associatinos with the new Dictionary in Dictionary >> #select:- avoid growing in Dictionary >> #collect:- removed temporary from Set >> #like:' id '7401c882-7922-a545-ac61-4a7d00fab136' date '30 September 2009' time '2:59:59 am' author 'ul' ancestors ((name 'Collections-ar.147' message 'Merging Collections-ul.136- primitive 60 won''t help with Array >> #at:ifAbsent: because it accepts only one parameter, so changed SequenceableCollection >> #at:ifAbsent: to get some improvement (assumes that indexes greater than the upper bound are more common than indexes smaller than the lower bound)' id 'bef1189d-525b-c540-a331-e19062c1ecbf' date '29 September 2009' time '11:39:57 am' author 'ar' ancestors ((name 'Collections-ar.146' message 'Pseudo-merging Collections-ul.145:deprecated #findElementOrNil: and #noCheckAdd:' id '92161bb4-bec3-7a43-b30d-9d2d9da56bb8' date '29 September 2009' time '11:13:32 am' author 'ar' ancestors ((name 'Collections-ar.145' message 'Pseudo-merging Collections-ul.144:- replaced all uses of #findElementOrNil: with #scanFor:- #scanFor: raises an error if it can''t find a slot- new #scanFor:, #scanForEmptySlotFor: and #fixCollisionsFrom: implementations- removed unnecessary WeakKeyDictionary >> #scanFor:- added Set >> #errorNoFreeSpace as a common error message for #scanFor: and #scanForEmptySlotFor:' id '4a842b3f-6ec2-c44d-b5d9-082535b2b576' date '29 September 2009' time '10:17:43 am' author 'ar' ancestors ((name 'Collections-ar.144' message 'Merging Collections-ul.143:- removed the unused Set >> #withArray:' id '97570666-a837-924b-a3a6-e1e5ce1e13cf' date '29 September 2009' time '10:12:54 am' author 'ar' ancestors ((name 'Collections-ar.143' message 'Merging Collections-ul.142:- removed unnecessary #copy from Set and Dictionary' id 'dbdba380-1e1f-0244-9cd7-1e61d8dcda02' date '29 September 2009' time '10:08:54 am' author 'ar' ancestors ((name 'Collections-ar.142' message 'Merging Collections-ul.141:- rewritten Set >> #fixCollisionsFrom: and WeakSet >> #fixCollisionsFrom:, they use #scanFor: instead of #findElementOrNil:- replaced KeyedSet >> #fixCollisionsFrom: with #keyAt:- added #postCopy to Set and subclasses, to replace it''s similar but unique mechanism with #copy and #withArray:, these methods have to be removed in another version, but MethodDictionary >> #postCopy has to be added first.- Dictionary >> #values doesn''t create an unnecessary copy of the result anymore.' id '03cd4bc2-d806-7740-a2b3-5a4024943d81' date '29 September 2009' time '10:04:47 am' author 'ar' ancestors ((name 'Collections-ar.141' message 'Merging Collections-ul.140:- removed unused #scanForNil: implementations (replaced by #scanForEmptySlotFor:), updated comments in #scanFor:' id '77f402bd-4b08-bb41-8d16-a0576783e35f' date '29 September 2009' time '10:03:18 am' author 'ar' ancestors ((name 'Collections-ar.140' message 'Merging Collections-ul.139:- remove old implementations of #rehash and #grow from Set''s subclasses (except MethodDictionary)' id '9d84c609-aac0-6043-b47c-c825840b0b83' date '29 September 2009' time '10:01:41 am' author 'ar' ancestors ((name 'Collections-ar.139' message 'Merging Collections-ul.138:- reimplement #rehash, #grow and #finalizeValues:' id 'bbe161fd-d845-df49-9abf-9c9f13b809f8' date '29 September 2009' time '9:57:47 am' author 'ar' ancestors ((name 'Collections-ar.138' message 'Merging Collections-ul.137:- prepare for a new #grow and #rehash implementation for Set and its subclasses (except MethodDictionary). Add #noCheckNoGrowFillFrom:, #scanForEmptySlotFor: and #growTo: to these classes.- fix: adding Objects with the usual 12-bit #identityHash to a KeyedIdentitySet became O(n^2) when the set size reached 4096 (#scanFor:).- other minor changes (#scanFor:, #keysDo:)' id '8eeaf535-25df-3346-aa33-59540513b74b' date '29 September 2009' time '9:53:28 am' author 'ar' ancestors ((name 'Collections-nice.136' message 'Fix from http://bugs.squeak.org/view.php?id=7095RATIONALE:Dictionary>>#collect: should preserve the keys1) This is the ANSI specification2) This is very logicalA Dictionary is a Bag of values indexed by unique, arbitrary keys.OLD BEHAVIOUR CRITIC:The old behaviour consisting in returning an OrderedCollection is wrong, at least for these reasons:a Dictionary is unordered, and there is no reason to reassign keys (1 to: self size) with a random order...BACKWARD COMPATIBILITY ISSUE:Those relying on old behaviour should replace their code with something like:	aDictionary values asOrderedCollection collect: aBlock.or:	(OrderedCollection newFrom: aDictionary) collect: aBlock.' id '814571f9-fe2a-4547-ae41-f0733a647794' date '25 September 2009' time '8:28:33 am' author 'nice' ancestors ((name 'Collections-nice.135' message 'Merge #removeAll from inbox/Collections-klub.131Its implementation looks good.I did not load the conflicting methods: apart comments, there are 3 of them:Collection>>#removeAll:he uses a #copy when I did notOrderedCollection>>#removeAllSet>>#removeAllWeakSet>>#removeAllklub preserves the same array using atAllPut: nil, when I create a new one.klub version will take a little longer to perform.Might perform better in case of huge collections ?(avoiding swap, putting less pressure on garbageCollector...)Anyone having an advice about this ?Concerning Set, he has to implement #removeAll in WeakSet, while I have to implement in KeyedSet, so 1-1Obviously, it would be good to extend the tests to more collection subclasses, to check whether our two implementations have holes or not' id '13ffdd74-b12a-4d7c-9277-b7e55dd6d29f' date '17 September 2009' time '10:27:24 am' author 'nice' ancestors ((name 'Collections-ar.134' message 'Merging Collections-ul.130:- don''t try to use the matchTable if it doesn''t contain the character of the strings in String >> #findSubstring:in:startingAt:matchTable:' id '73ccbb29-90d4-9e41-bdad-6f3166c2216a' date '16 September 2009' time '8:23:39 am' author 'ar' ancestors ((name 'Collections-nice.133' message 'Harvest 3 missing fixes from http://bugs.squeak.org/view.php?id=63671) Create a CharacterSetComplement on a copy of the original (to avoid modifying the original when modifying the complement)2) Create a postCopy to avoid modifying the original when modifying the copy3) Correct a type in hashStrange, I thought it was already harvested in 3.10 ...' id '13e8a40f-d55e-4e97-8a8a-f4624fa972b1' date '15 September 2009' time '9:10:35 am' author 'nice' ancestors ((name 'Collections-nice.132' message 'WideCharacterSet patch again:forgot this one: copy is too shallow(modifying the original would modify the copy)' id 'eb0125ff-8291-431f-b569-53e07e4181e3' date '15 September 2009' time '1:17:59 am' author 'nice' ancestors ((name 'Collections-nice.131' message 'grab some WideCharacterSet patches from http://bugs.squeak.org/view.php?id=35741) A convenient #newFrom: instance creation method was missing, add it.2) #hash was bugged, correct it and handle CharacterSet equality => hash equality3) a period was missing in #remove:' id '44251830-867d-4c53-b367-831f7960de96' date '15 September 2009' time '1:13:12 am' author 'nice' ancestors ((name 'Collections-nice.130' message 'add #removeAll suport to collectionsThis is to solve bothhttp://bugs.squeak.org/view.php?id=7177http://bugs.squeak.org/view.php?id=6937Comments about the implementation:The super implementation might be enhanced with a shallowCopy in order to provide a working implementation in more cases:    self shallowCopy do: [:each | self remove: each].I believe much subclasses will override, so I did not even bother.Subclass implementation tries to preserve original capacity.This choice is arbitrary and really depends on application side...CharacterSetComplement use a #become:. This is not efficient, but neither would be the addition of all existing characters to the complement (this set is defined by its complement as the name tells).Collection>>#removeAll: also has been modified to handle case of (self removeAll: self). This extends and supersedes the changes from kwl at http://bugs.squeak.org/view.php?id=6937The big question is what should (self removeAll: self) return?My answer is simple: it returns self (an empty collection).Beware, this will break some chaining:(b removeAll: (a removeAll: a)) ~= (a removeAll: (b removeAll: a)).Anyway, that is not worse than current implementation which will not lead to the most predictible results.' id 'bd79631f-87b9-4d13-aeca-b819eb6390ca' date '14 September 2009' time '8:48:49 am' author 'nice' ancestors ((name 'Collections-ar.129' message 'Merging Collections-ul.128:- introduced #new:streamContents: in SequenceableCollection class. It''s like #streamContents: but if you know the size of the new collection this method doesn''t copy the result.- updated SequenceableCollection class >> #streamContents: to use #new:streamContents:, kept the original default size 100.- also updated Dictionary >> #association, Bag >> #sortedCounts and Dictionary >> #keysSortedSafely to use #new:streamContents:.- introduced #sort: in OrderedCollection. It uses Array''s merge sort to sort the internal array. This is much faster than sorting with SortedCollection (though it uses an extra Array object). Also added #sort which uses the same default block as Array >> #sort.- updated Bag >> #sortedCounts, Bag >> #sortedElements, Dictionary >> #keysSortedSafely, SequenceableCollection >> #sortBy: to use OrderedCollection''s or Array''s #sort method which can be significantly faster in these cases.- modified OrderedCollection class >> #newFrom: to avoid reallocating the internal array of the new OrderedCollection when the sender of #newFrom: doesn''t extend the collection.- changed the variable name from anOrderedCollection to aCollection in OrderedCollection >> #addAllLast: since it is being used with other Collections. Also changed the comment which seems to be superfluous.All related tests are green.' id '64ca8d2a-4608-ab4c-b4f4-bdbe61efcdab' date '13 September 2009' time '5:17:44 am' author 'ar' ancestors ((name 'Collections-cbc.128' message 'Optimized Character>>digitValue for latin numbers, without removing ability to work with non-latin digits (full functionality remains).  The speedup for Latin conversions removes more than 26% of the time to convert a number (as tested via the String>>asNumber method).' id 'bdb0f892-6511-1645-8ed4-6ec11be0e473' date '10 September 2009' time '10:12:22 am' author 'cbc' ancestors ((name 'Collections-dtl.127' message 'The method comment in SortedCollection class>>new: was  "The default sorting function is a <= comparison on elements." Add this to the class comment, and remove the otherwise unneeded #new: method. Reference Mantis 6977.' id '0e97bd3a-ca15-4d4a-b1ea-c862b08367c4' date '6 September 2009' time '4:16:12 am' author 'dtl' ancestors ((name 'Collections-nice.126' message 'Avoid invoking super when self would do the job.( super basicNew issue http://bugs.squeak.org/view.php?id=6977 )' id '32bbec9c-28ef-4c94-bd03-b84942671351' date '5 September 2009' time '10:21:20 am' author 'nice' ancestors ((name 'Collections-ar.125' message 'http://bugs.squeak.org/view.php?id=7314Summary  	 0007314: UTF8 conversion speedupDescription 	The conversions between Squeak and UTF8 can be fairly slow. The attached changes speed up the typical conversions dramatically. ' id '65d7a3ef-c4cd-d847-a137-8ebe7bcae3be' date '3 September 2009' time '9:40:06 am' author 'ar' ancestors ((name 'Collections-jcg.124' message '#mimeEncode: no longer resets the input-stream position before encoding; that was just silly.  See updated tests in CollectionsTests.Add #base64Encoded to ByteArray (for symmetry with String).' id 'f670aae4-19f6-429c-a828-8b20b372baec' date '1 September 2009' time '12:53:11 pm' author 'jcg' ancestors ((name 'Collections-ar.123' message 'Some fixes for RWBinaryOrTextStream which was too agressive optimizing some paths. Also fixes Character>>codePoint: which has no reason to raise an exception for values > 256.' id 'e7432274-e18a-1e43-a002-f3ab261bd465' date '1 September 2009' time '12:38:06 pm' author 'ar' ancestors ((name 'Collections-tfel.122' message 'For the Method asHtml we have HtmlEntities as class-side Dictionary. I propose to use it for asUnHtml as well and fail silently if we couldn''t find a match instead of throwing an Error saying "please add the missing entity to this method"' id '628fd0f2-dabf-403b-a887-e1cd7d5a4055' date '28 August 2009' time '9:17:27 am' author 'tfel' ancestors ((name 'Collections-ar.121' message 'Adds String>>asPrecomposedUnicode and String>>asDecomposedUnicode for quick conversions between precomposed and decomposed Unicode string representations.' id 'b5271f0f-8838-9449-bddb-986e082835e7' date '27 August 2009' time '8:43:09 am' author 'ar' ancestors ((name 'Collections-ar.120' message 'PositionableStream>>upToAnyOf: is just like #upTo: but allows for a collection of elements to be matched against. Very useful when there is a potential set of matches ahead, for example when dealing with a mixture of cr and lfs in files, such as in:[stream atEnd] whileFalse:[	(stream upToAnyOf: String crlf) ifNotEmpty:[:line| "etc"].].' id 'f7e07320-f92c-9449-ad4a-98813876258b' date '27 August 2009' time '8:07:54 am' author 'ar' ancestors ((name 'Collections-dtl.119' message 'Reference Mantis 7221: Remove some leftover VMMaker methods from base images.Remove several C code generation methods that have previously been recategorized to the VMMaker package.' id '77a05c36-56b5-4835-8e70-54b34f30c025' date '25 August 2009' time '9:44:26 am' author 'dtl' ancestors ((name 'Collections-rss.118' message 'Removing cruft left over from colorPrint browser option and colorWhenPrettyPrinting preference.' id 'bb898159-16d9-44e3-8dc6-4132b798583d' date '23 August 2009' time '1:09:48 am' author 'rss' ancestors ((name 'Collections-rkrk.117' message 'Bugfix for bug #0006579 reported by Nicolas Cellier. In In String>>findLastOccuranceOfString:startingAt: "subString size" is replaced with "1". CollectionsTests-rkrk.90 has a test for this method.' id 'ed4258b2-0264-43e2-8adb-4e69cfdf1722' date '23 August 2009' time '2:17:21 am' author 'rkrk' ancestors ((name 'Collections-nice.116' message 'Patch forhttp://bugs.squeak.org/view.php?id=7269OrderedCollection streamContents brokenhttp://bugs.squeak.org/view.php?id=2390ReadWriteStream with an OrderedCollection bugs when growing  ' id 'ea4d7b04-7797-4c15-a1de-5212b967622c' date '10 August 2009' time '10:41:22 am' author 'nice' ancestors ((name 'Collections-nice.115' message 'Patch forhttp://bugs.squeak.org/view.php?id=7296forceTo:paddingWith: doesn''t work with OrderedCollections ' id 'cc4dfac2-7f75-4bd4-a5b6-5ee8f8e40c4e' date '10 August 2009' time '10:36:56 am' author 'nice' ancestors ((name 'Collections-ar.114' message 'ToolBuilder cleanup for Transcript opening.' id '2a656a45-ccf8-ef4a-8c6c-88439a3282cb' date '8 August 2009' time '12:10:20 pm' author 'ar' ancestors ((name 'Collections-jmv.113' message 'Added #withoutJustTrailingDigits, that is like #withoutTrailingDigits, but does not trim at the first space.' id 'ce5337c4-26c5-d74e-b2f1-6e9bf47db644' date '6 August 2009' time '9:38:09 am' author 'jmv' ancestors ((name 'Collections-ar.112' message 'Text class fromString: no longer creates a text attribute referring to the current default font index. This caused extremely strange effects when such text is displayed using any non-default text style.' id '2dda35f7-b928-ab40-bdad-37c0fade4216' date '5 August 2009' time '12:01:14 pm' author 'ar' ancestors ((name 'Collections-nice.111' message 'Fix forhttp://bugs.squeak.org/view.php?id=7172CharacterSetComplement byteArrayMap optimization is slow Add an inst var to cache this information.Rationale: #byteArrayMap is a method dedicated to optimization of speed, there is no reason why we should spoil the game with introduction of CharacterSetComplement in 3.10.' id 'de316fbb-be68-430c-b63f-99f7bfc6e668' date '28 July 2009' time '2:33:49 am' author 'nice' ancestors ((name 'Collections-nice.110' message 'Fix forhttp://bugs.squeak.org/view.php?id=6777CharacterSet copy is shallow... "If we change the copy, do we change the original?We''d better not"| cs1 cs2 |cs1 := CharacterSet separators.cs2 := cs1 copy.cs2 remove: Character tab.^self assert: (cs1 includes: Character tab). ' id '7ab94993-3d3c-46d4-864d-9f2f17582efa' date '28 July 2009' time '2:29:15 am' author 'nice' ancestors ((name 'Collections-nice.109' message 'Test forhttp://bugs.squeak.org/view.php?id=6482Interval storeOn: incorrect for some ScaledDecimalSome ScaledDecimal have more bits than printed.Example: 0.5s1 squared will print 0.2s1However 0.5s1 squared * 4 = 1Thus (0 to: 1 by: 0.5s1 squared) size = 5(0 0.25 0.5 0.75 1)If you storeString and reinterpret, you get size 6(0 0.2 0.4 0.6 0.8 1.0)Interval SHOULD use storeOn: and not rely on Number>>printOn:This is some sort of violation of encapsulation.And it is defeated by introduction of a new species of Number (ScaledDecimal)...' id '8e487ec3-6a64-4ec3-8137-2a05ea912b8c' date '28 July 2009' time '2:23:32 am' author 'nice' ancestors ((name 'Collections-nice.108' message 'Fix forhttp://bugs.squeak.org/view.php?id=7175CharacterSetComplement cannot printString ' id '58ca0c81-1999-4dc0-95f0-d6e212f8d15d' date '28 July 2009' time '2:09:40 am' author 'nice' ancestors ((name 'Collections-nice.107' message 'Fix forhttp://bugs.squeak.org/view.php?id=67821.0 / (FloatArray with: 2.0)Note: the fix also handle case of gradual underflow like:self assert: (1.0e-39 / (FloatArray with: 1.0e-39)) first < 2.' id '374df12e-d1ec-48bd-8f4b-355c537047e6' date '28 July 2009' time '2:05:54 am' author 'nice' ancestors ((name 'Collections-nice.106' message 'Fix for http://bugs.squeak.org/view.php?id=6998WideString>>at:put: does not return the put-object' id '691bc21c-671b-4887-90e8-f1f880649c2b' date '28 July 2009' time '2:01:20 am' author 'nice' ancestors ((name 'Collections-nice.105' message 'Fix for http://bugs.squeak.org/view.php?id=7121add:beforeIndex: and add:afterIndex: do not work as advertised ' id '4495c4ee-1406-4245-b121-4a4f0482930b' date '28 July 2009' time '1:58:57 am' author 'nice' ancestors ((name 'Collections-nice.104' message 'Fix forhttp://bugs.squeak.org/view.php?id=7136LinkedList #add:after: bug' id '2da402be-dc4b-4f3e-908e-19b88dc4cc07' date '26 July 2009' time '10:45:57 am' author 'nice' ancestors ((name 'Collections-nice.103' message 'Fix forhttp://bugs.squeak.org/view.php?id=6994#(1 2 3) asByteArray as: Interval.Note: this does not fix #(nil) as: Interval.' id '33d2d8bf-c70b-4f83-b0f7-aa0ea3de8ac0' date '25 July 2009' time '7:33:13 am' author 'nice' ancestors ((name 'Collections-ar.102' message 'Conversion functions for base64. Just as we have 	''Hello World'' zipped unzipped = ''Hello World''we can now use the similarly useful	''Hello World'' base64Encoded base64Decoded = ''Hello World''or more practically useful since this is what often happens in transmissions of lengthy data over text channels:	''Hello World'' zipped base64Encoded 		base64Decoded unzipped = ''Hello World''.' id '9a238ec7-935b-ed4c-84d6-a7f0956e5db4' date '22 July 2009' time '10:19:06 am' author 'ar' ancestors ((name 'Collections-ar.101' message 'Allow Text>>runLengthFor: to return 0 for an empty text so that client code does not need to guard specifically against the situation. This is similar to other methods that behave identically in this situation (#emphasisAt:, #fontAt:) .' id 'c6db2885-4691-e64d-b143-a86705e08a5d' date '22 July 2009' time '9:56:11 am' author 'ar' ancestors ((name 'Collections-nice.100' message 'Fix for Interval>>#includes: and #indexOf:http://bugs.squeak.org/view.php?id=1602http://bugs.squeak.org/view.php?id=1603http://bugs.squeak.org/view.php?id=6455http://bugs.squeak.org/view.php?id=7180Note: repeat after me:Interval of Floats are evil.Though the noble fuzzy inclusions tests (corrected by this patch), some interval will fail in finding their own elements:| eps i |eps := (1.0 timesTwoPower: -52) * 1.25.i := (1 to: 1+(99*eps) by: eps).^(i includes: (i at: 2))' id '114f0ad0-2d47-4692-a263-bf56ebfc9c80' date '23 July 2009' time '12:03:11 pm' author 'nice' ancestors ((name 'Collections-ar.99' message 'Underscore cleanup.' id '8a1d317f-7234-8543-9bc6-a44389fcbdbb' date '18 July 2009' time '7:49:01 am' author 'ar' ancestors ((name 'Collections-ar.98' message 'Prerequiste changes for Closure installation.' id '9067f714-4286-5c4f-82fd-5d93794ee616' date '10 July 2009' time '10:51:20 pm' author 'ar' ancestors ((name 'Collections-klc.93' message 'Removes SkipLists which contain code still under SqueakL.  External package can now be found at http://www.squeaksource.com/SkipLists.htmlAlso see http://bugs.squeak.org/view.php?id=7359' id 'a9e6c4a6-4077-417a-8e59-4a68c208ee91' date '4 July 2009' time '1:02:38 pm' author 'klc' ancestors ((name 'Collections-auto.92' message 'This is an automatic commit from the 3.10.2 to cover the delta between 3.10 and 3.10.2 in the repositories' id '4670f192-614d-4045-b8ae-24d5b669f650' date '2 July 2009' time '7:01:38 pm' author 'auto' ancestors ((name 'Collections-edc.91' message 'To follow this seehttp://bugs.squeak.org/view.php?id= 6573' id '7ade7e28-a6ba-4a06-97b7-da8f9623686a' date '4 November 2007' time '9:51:58 am' author 'edc' ancestors ((name 'Collections-edc.90' message 'To follow this seehttp://bugs.squeak.org/view.php?id= 6583' id 'd347be13-3feb-4bbb-81cf-9cacbb0bc7aa' date '4 November 2007' time '8:27:12 am' author 'edc' ancestors ((name 'Collections-edc.89' message 'To follow this seehttp://bugs.squeak.org/view.php?id= 6523' id '669d9b94-1576-416d-a291-cca5a894f440' date '26 July 2007' time '10:44:39 am' author 'edc' ancestors ((name 'Collections-edc.88' message 'To follow this seehttp://bugs.squeak.org/view.php?id= 6504' id '10928746-184c-482a-ad5a-4fd529009da4' date '20 July 2007' time '8:11:29 am' author 'edc' ancestors ((name 'Collections-edc.87' message 'http://bugs.squeak.org/view.php?id=6336' id '1c2f91fd-8ce4-4e37-909e-0b270314d4d0' date '20 July 2007' time '6:35:42 am' author 'edc' ancestors ((name 'Collections-edc.86' message 'To follow this seehttp://bugs.squeak.org/view.php?id= 6523' id '52f9ddc4-3d96-43fc-8c83-e5fac1af02c1' date '26 June 2007' time '9:54:54 am' author 'edc' ancestors ((name 'Collections-edc.85' message 'To follow this seehttp://bugs.squeak.org/view.php?id= 6503' id '6633694c-009a-4f56-96fb-743324b5991d' date '24 May 2007' time '7:32:47 am' author 'edc' ancestors ((name 'Collections-edc.84' message 'To follow this seehttp://bugs.squeak.org/view.php?id= 6438' id 'faa52c08-26e6-40ec-995a-4d90a0acf8e3' date '12 May 2007' time '5:28:55 pm' author 'edc' ancestors ((name 'Collections-edc.83' message '"To follow this seehttp://bugs.squeak.org/view.php?id= 6350"http://bugs.squeak.org/view.php?id= 6351"' id '29944917-eb4b-49eb-a90c-eeb2e1f28180' date '12 May 2007' time '5:17:15 pm' author 'edc' ancestors ((name 'Collections-edc.83' message 'To follow this seehttp://bugs.squeak.org/view.php?id= 6350' id 'e0ab4fba-51df-47e3-b310-dd4f99e6d75e' date '12 May 2007' time '5:05:23 pm' author 'edc' ancestors ((name 'Collections-edc.82' message '"To follow this seehttp://bugs.squeak.org/view.php?id= 6480"' id '0eb4e6ab-963f-4be5-b668-eebf41a7c5cb' date '10 May 2007' time '2:39:43 pm' author 'edc' ancestors ((name 'Collections-edc.83' message 'To follow this seehttp://bugs.squeak.org/view.php?id= 6480' id '98fd6d57-e6ae-4959-8cf9-fa9c6b06584b' date '10 May 2007' time '2:26 pm' author 'edc' ancestors ((name 'Collections-edc.81' message 'To follow this see http://bugs.squeak.org/view.php?id=5934' id '47dc8423-0e43-4654-bf8e-472a615ceb2e' date '10 May 2007' time '10:11:28 am' author 'edc' ancestors ((name 'Collections-edc.80' message 'To follow this seehttp://bugs.squeak.org/view.php?id= nil' id '4ee78ea4-dedd-4fdd-8218-bd292c3cbefb' date '12 April 2007' time '7:13:41 am' author 'edc' ancestors ((name 'Collections-edc.79' message 'Collect changes of :http://bugs.squeak.org/view.php? = 1660http://bugs.squeak.org/view.php? = 1602' id '03fb8659-b9f5-4190-9fbd-780da4725491' date '10 April 2007' time '10:36:29 am' author 'edc' ancestors ((name 'Collections-edc.78' message '"To follow this seehttp://bugs.squeak.org/view.php?id= 6405 "' id '70920514-192d-4625-b461-8bbe4808731e' date '10 April 2007' time '6:48:46 am' author 'edc' ancestors ((name 'Collections-edc.77' message 'To follow this seehttp://bugs.squeak.org/view.php?id= 2446' id '18751eca-ee88-4232-bf24-af4668d55bec' date '5 April 2007' time '11:11 am' author 'edc' ancestors ((name 'Collections-edc.76' message '"To follow this seehttp://bugs.squeak.org/view.php?id= 6070"' id '0ca1473b-b6a5-434b-b391-3178ceea83e3' date '3 April 2007' time '3:27:21 pm' author 'edc' ancestors ((name 'Collections-edc.75' message 'To follow this seehttp://bugs.squeak.org/view.php?id= 2273' id '7cebf3c4-14ed-4dce-af0d-457e832ce2a1' date '2 April 2007' time '8:46:06 am' author 'edc' ancestors ((name 'Collections-edc.73' message 'Collect changes of :http://bugs.squeak.org/view.php?id=6367http://bugs.squeak.org/view.php?id=6355http://bugs.squeak.org/view.php?id=5700' id '0d132aba-7f68-4a32-85cb-9e86e42870f5' date '27 March 2007' time '4:01:13 pm' author 'edc' ancestors ((name 'Collections-edc.72' message 'See http://bugs.squeak.org/view.php?id=3574 Reporter  	 johnmci Fix and test nicolas cellier ' id 'b5f7ddd4-4bd8-4c17-ad10-3fdfe24f1bc4' date '16 March 2007' time '6:55:31 am' author 'edc' ancestors ((name 'Collections-md.71' message ':= conversion' id 'b8d054f6-0743-44ba-a12e-6599c441ac70' date '23 July 2006' time '3:57:17 pm' author 'md' ancestors ((name 'Collections-md.70' message '0004298: OrderedCollection>>#removeLast: 2; size is negative	' id '85e23063-d61b-436e-8a15-8a906564713e' date '23 July 2006' time '12:11:02 pm' author 'md' ancestors ((name 'Collections-md.69' message '0003887: SequenceableCollection>>, wrong comment' id '6164f840-096e-4191-b280-9a492bea167f' date '14 July 2006' time '12:36:25 pm' author 'md' ancestors ((name 'Collections-pmm.68' message 'changes with respect to: http://bugs.impara.de/view.php?id=1876- changed Set class >> #new: according to comments of ar, this fixes the hiccup at around 4k elements- removed the progress bar from Set class >> #rehash all sets. This allows to load the changesets and makes in possibly faster (old version waits 2ms for each set when querying the mouse position)' id '20686bef-7acd-4afc-a610-a4485c82ffb1' date '9 July 2006' time '11:53:56 am' author 'pmm' ancestors ((name 'Collections-sd.67' message 'empty log messageName: Collections-sd.66Author: sdTime: 8 July 2006, 6:07:20 pmUUID: 13570d0f-f947-4398-bbb9-bb5b64cb2514Ancestors: Collections-sd.650003784: String>>unescapePercentsWithTextEncoding: is subtle brokenhttp://bugs.impara.de/view.php?id=3784remove seaside-J packageincluding Fix-ky' id 'e47b935e-12fb-4bb1-aed4-d52ca23e9139' date '8 July 2006' time '6:18:19 pm' author 'sd' ancestors ((name 'Collections-sd.66' message '0003784: String>>unescapePercentsWithTextEncoding: is subtle brokenhttp://bugs.impara.de/view.php?id=3784remove seaside-J package' id '13570d0f-f947-4398-bbb9-bb5b64cb2514' date '8 July 2006' time '6:07:20 pm' author 'sd' ancestors ((name 'Collections-sd.65' message '0003784: String>>unescapePercentsWithTextEncoding: is subtle brokenhttp://bugs.impara.de/view.php?id=3784' id '6bcb089f-5c28-4af6-8805-7eb5e9f854f0' date '8 July 2006' time '6:03:03 pm' author 'sd' ancestors ((name 'Collections-lr.64' message '- revert string comparison to the 3.7 behavior' id 'b45346c1-0d9b-11db-a7b8-000a9573eae2' date '7 July 2006' time '11:33:53 am' author 'lr' ancestors ((name 'Collections-sd.63' message '3426 Set init: -> Set initialize ' id 'b0740ff1-ca5c-4816-90d7-ebce228a4ed8' date '4 May 2006' time '3:05:37 pm' author 'sd' ancestors ((name 'Collections-md.60' message '0003492: Complete the job of changing the way that arrays are printed (Andrew Black)	0003458: PositionableStream>>copyPreamble:from:at: broken  (Andreas)' id 'c8b8430d-d468-11da-8f58-000d933a223c' date '25 April 2006' time '4:35:47 pm' author 'md' ancestors ((name 'Collections-md.59' message 'SmallLand' id '78418704-d144-11da-a5e8-000d933a223c' date '21 April 2006' time '4:38:16 pm' author 'md' ancestors ((name 'Collections-md.58' message 'add Symbol>>#value:' id '206b5f4a-be8c-11da-a502-000d933a223c' date '28 March 2006' time '8:53:20 pm' author 'md' ancestors ((name 'Collections-sd.57' message 'fixed top of stack which was returning bottom' id '5d6cb3a1-0c2d-454e-94fa-a33d6a645aa5' date '25 March 2006' time '3:06:19 pm' author 'sd' ancestors ((name 'Collections-md.56' message 'SqueakLand' id '993d3aa2-b9e3-11da-8391-000d933a223c' date '22 March 2006' time '9:36:54 pm' author 'md' ancestors ((name 'Collections-md.55' message 'SqueakLand' id 'd932d7d5-b8e2-11da-9587-000d933a223c' date '21 March 2006' time '2:59 pm' author 'md' ancestors ((name 'Collections-md.54' message 'SqueakLand' id 'aed28f99-b842-11da-92b3-000d933a223c' date '20 March 2006' time '7:52:30 pm' author 'md' ancestors ((name 'Collections-md.53' message 'SqueakLand Merge' id 'e172b7bf-b5d5-11da-b66a-000d933a223c' date '17 March 2006' time '5:48:37 pm' author 'md' ancestors ((name 'Collections-md.52' message 'Changes from SqueakLand' id 'a1af7bb6-b3ab-11da-8753-000d933a223c' date '14 March 2006' time '11:41:09 pm' author 'md' ancestors ((name 'Collections-md.51' message '0003294: KeyedSet>>add: cand send #errorKeyAlreadyExists: which is not implemented' id 'e85ef994-b381-11da-894f-000d933a223c' date '14 March 2006' time '6:42:29 pm' author 'md' ancestors ((name 'Collections-md.50' message 'change to #hasLiteralSuchThat from ClosureCompiler' id 'bfe874d6-aaa0-11da-9ffe-000d933a223c' date '3 March 2006' time '11:30:35 am' author 'md' ancestors ((name 'Collections-md.49' message '0001913: Make all implementors of #nextPut: to return the argument (instead of self)	Changed some implementors of #nextPut: to return the argument (and not return self). This 	to be consistent with primitiveNextPut and all other implementors of #nextPut:	kwl: As dicusses with Ken and Craig on #squeak IRC.' id 'c0f5cd3b-04ba-440d-a8ab-2fb59b81002c' date '24 February 2006' time '11:08:38 pm' author 'md' ancestors ((name 'Collections-md.48' message '	- SequenceableCollection.st from Connectors' id 'c7e09be7-cf1e-4737-94ca-096895ebb0c0' date '22 February 2006' time '10:08:48 pm' author 'md' ancestors ((name 'Collections-md.47' message '- String>>#hash now uses identityHasch as initial hash (needed for Behavior>>#hash)- moved numArgs: to Symbol' id '143cd997-d0dc-4df8-9687-ba920894e834' date '16 February 2006' time '7:18:39 pm' author 'md' ancestors ((name 'Collections-md.46' message 'String>>numArgs:' id '8ef1e760-848a-49be-ac9c-da978449c365' date '16 February 2006' time '2:08:38 pm' author 'md' ancestors ((name 'Collections-md.45' message 'moved deprecated method to 39Deprecated' id '21e0ab69-061a-4231-8cc8-1ca7dc1cf699' date '13 February 2006' time '6:06:03 pm' author 'md' ancestors ((name 'Collections-md.44' message '- move example methods from Heap to HeapTest- delete Symbol>>#sunitAsClass (not called by SUnit)' id 'bd229bbd-aa09-4bdc-9a3a-7beb40b76738' date '12 February 2006' time '3:53:34 pm' author 'md' ancestors ((name 'Collections-md.43' message 'changes Set>>#new:new	^ self new: 5' id '27f20311-9b70-4e3a-a664-234bcaaa06c1' date '12 February 2006' time '1:23:59 pm' author 'md' ancestors ((name 'Collections-md.42' message '0002708: SharedQueue does not nil out unused slots when flushing' id '4d580083-432b-451d-8aad-3af650ba8406' date '11 February 2006' time '7:17:23 pm' author 'md' ancestors ((name 'Collections-md.41' message 'small _ to := fix' id 'e9e94bb0-311e-4d1e-96a5-dba54d49aec6' date '21 January 2006' time '8:13:23 pm' author 'md' ancestors ((name 'Collections-md.40' message 'remove emptyCheck in removeFirst, removeLast in OrderdCollections' id 'de1fc097-732a-4305-9d8c-9db9597c6cf0' date '21 January 2006' time '11:07:22 am' author 'md' ancestors ((name 'Collections-md.39' message 'changes from the closurecompiler' id '62272390-7d14-4249-b986-db8bf4f5df70' date '20 January 2006' time '11:08:52 pm' author 'md' ancestors ((name 'Collections-md.38' message 'remove emptycheck for Heap>>fist and SequencableCollection#first, #last, #middle' id '8f60594f-cc4d-43b0-bd90-8f056cbd389c' date '19 January 2006' time '9:58:36 am' author 'md' ancestors ((name 'Collections-md.37' message 'JMMRemoveExtraIndexCheck.1.csremove empty check from first...eighth' id '50b084b8-4d76-4403-9b54-d0abf2505bb5' date '18 January 2006' time '7:19:31 pm' author 'md' ancestors ((name 'Collections-sd.36' message 'Added http://bugs.impara.de/view.php?id=2254' id 'ccd03c68-d7ff-48f2-a871-e7f04b2ab7e0' date '19 December 2005' time '4:56:44 pm' author 'sd' ancestors ((name 'Collections-CdG.35' message 'Integrated PlusTools.zip (Mantis #1915)' id '9cef7171-2c7f-d34b-a1e2-9668fa0dd873' date '17 October 2005' time '10:56:27 pm' author 'CdG' ancestors ((name 'Collections-CdG.34' message 'Integrated ToolBuilder-UI-Refactor-FillInTheBlank-1.cs from Mantis #1828' id '382c266e-71e0-9f4f-b31e-46726ee0eaaf' date '17 October 2005' time '9:04:13 pm' author 'CdG' ancestors ((name 'Collections-CdG.33' message 'Integrated ToolBuilder-UI-Refactor-PopUpMenu-1.cs from Mantis #1828 ' id 'ffc63c2b-afca-a642-b950-79a444020e82' date '17 October 2005' time '7:56:45 pm' author 'CdG' ancestors ((name 'Collections-md.32' message 'Change Set:		scanForDate:			5 October 2005Author:			Marcus Denkerin scanFor, array size is available in a temp, so no need to call it----------------SharedQueue2' id '464ca442-22df-4417-a301-3357d2fa7fb5' date '7 October 2005' time '4:15:29 pm' author 'md' ancestors ((name 'Collections-stephaneducasse.31' message 'redraw collection-md.18 cs which changed the behavior of dictionary and weakKeyDictionary.' id 'b52ef84f-f41d-4284-bfe1-6fecffa8307c' date '1 October 2005' time '9:05:41 pm' author 'stephaneducasse' ancestors ((name 'Collections-stephaneducasse.29' message 'MorphicSplitters1.st' id '2f75b1df-5834-4bdf-aa9d-b74dd2823af9' date '10 September 2005' time '3:09:28 pm' author 'stephaneducasse' ancestors ((name 'Collections-md.28' message 'remove deprected methods' id '934c33d1-f9bf-4c1f-9957-418dfb3b4592' date '6 September 2005' time '3:24:04 pm' author 'md' ancestors ((name 'Collections-md.27' message 'A simple Stack implementation' id '2de3ffa4-4713-4501-86ff-d6f48e916839' date '1 September 2005' time '5:04:27 pm' author 'md' ancestors ((name 'Collections-md.26' message 'integrated method from ToolBuilder-Spec' id 'd7799bf0-2dd4-42d5-acfe-34a6dd9ec9f3' date '29 August 2005' time '5:02:06 pm' author 'md' ancestors ((name 'Collections-md.25' message 'Add Symbol>>#isDoItChange Set:		AlphaNumUIDDate:			30 January 2004Author:			Martin WirblatGenerates a String with unique identifier ( UID ) qualities, the difference to a UUID is that its beginning is derived from some given String, so that it can have a meaning for a human reader.' id 'd04e8383-3432-479e-961f-252034eea1d9' date '27 August 2005' time '9:11:02 pm' author 'md' ancestors ((name 'Collections-md.24' message '001382: 3.8 performance regression - ByteSymbol>>#hashReopened. The proposed fix is a needless duplication of code and only address one out of the four primitives affected. Attached is a change set that simply delegates all four primitives from ByteSymbol to ByteString therefore leaving the implementation in a single place.' id '9db9fe80-ff7d-4e2c-b3d0-495aa9447d46' date '24 August 2005' time '12:06:09 pm' author 'md' ancestors ((name 'Collections-md.23' message 'recategorize Array>>isLiteral under testing' id '53d9491b-37e4-422a-8119-e1432df59c66' date '20 August 2005' time '7:09:11 pm' author 'md' ancestors ((name 'Collections-md.22' message 'Change Set:		ConflictCheckerDate:			19 October 2003Author:			Doug Wayv1.5: Adds testing to see if changeset contains linefeed characters.v1.4: Adds logging to a file, ConflictChecker.log.  This is most useful when the Transcript fills up.v1.3:  Incorporates Michael Rueger''s addon which brings up a browsable list with the conflicting methods.  Tweaked so that the list only appears if there is at least one conflict; also fixes a bug so that removed methods show up.v1.2:  Adds nearest-match search for changeset matching the package update number.  Also improves some transcript output and comments.v1.1:  Adds the ability to check for class removal conflicts.v1.0:Given a changeset filename, you can use this goodie to check an older .cs/.st file for conflicts with methods from more recent update-changesets in your image.  Its output is displayed in a Transcript window' id '1fa239e8-6076-499c-9b15-48a2ca6893fa' date '15 August 2005' time '6:31:39 pm' author 'md' ancestors ((name 'Collections-md.21' message 'Change Set:		WideStringPrimKillDate:			7 June 2005Author:			tim@rowledge.orgA few sorta-prim methods got left lying around in theString refactor. Kill them, pussycat, faster, faster' id '892ae15a-237e-400f-9552-2939231b6994' date '15 August 2005' time '4:54:30 pm' author 'md' ancestors ((name 'Collections-md.20' message 'add isDictionary' id '6eaf5d3e-8e40-4dc1-a69e-40ec2d545c5f' date '11 August 2005' time '4:49:11 pm' author 'md' ancestors ((name 'Collections-md.19' message 'Move SparseLargeTable from Multilingual into Collections' id 'cba0e695-f686-4ef5-8b11-7d2f72514010' date '10 August 2005' time '4:29:28 pm' author 'md' ancestors ((name 'Collections-md.18' message 'Change Set:		WeakKeyDictionaryNilsFixDate:			5 December 2004Author:			Chris Mullerfixes this bugSubject:		[BUG] WeakKeyDictionary>>keysAndValuesDo:Author:		Chris MullerDate Posted: 8 June 2004Archive ID: 22746Comments:	The following code demonstrates that keysAndValuesDo: will evaluate nil keysthat have been gc''d.	| d |	d _ WeakIdentityKeyDictionary new		at: ''hello'' copy put: nil;		yourself.	Smalltalk garbageCollectMost.	d keysAndValuesDo: [ : k : v | k ifNil: [ self halt ] ]I consider this a bug because it contradicts the notion that nil cannot be akey in a Dictionary.  Incidentally, keysDo: passes the test.' id '2d15dd50-ce8c-43d6-9f4e-4bd108c2af7d' date '7 August 2005' time '3:26:12 pm' author 'md' ancestors ((name 'Collections-md.17' message 'adds the expandMacros* methods from the RB to String' id 'dcb17008-1978-408e-ba97-ca11201be257' date '3 August 2005' time '12:09:12 am' author 'md' ancestors ((name 'Collections-md.16' message 'adds Character>>sameAs:' id '317250d6-04e8-4a30-ac2e-686785d868aa' date '2 August 2005' time '9:03:18 pm' author 'md' ancestors ((name 'Collections-sd.15' message 'introduce self evaluation for printing' id '57fc3df6-01fe-11da-9134-001451041ea6' date '31 July 2005' time '10:04:47 pm' author 'sd' ancestors ((name 'Collections-md.14' message '- add isArray- fix for: 0001553: [FIX][BUG] Set>>atRandom: is not randomChange Set:		raok-elementPrintingDate:			30 May 2002Author:			Richard A. O''KeefeCollection>>printElementsOn: used to use the#skip: method of streams.  This limits the rangeof streams that #printOn: can be used with, assome quite reasonable streams (such as XMLgeneration) may not support #skip:.  Theexisting code in Collection>>storeOn: does notneed #skip:.  This change-set makes#printElementsOn: use the same technique as#storeOn:, so that #skip: isn''t needed any more.' id 'cdbdc02d-0762-43f1-8863-8bd456a48890' date '31 July 2005' time '2:20:26 pm' author 'md' ancestors ((name 'Collections-md.13' message 'Change Set:		CollectionPrintingEnhDate:			14 January 2005Author:			GÃ¶ran KrampeWell, I just got tired of writing code for producing: ''a, b, c'' or ''a, b and c''.Interested in feedback regarding printOn:/asString and naming.Change Set:		CollectionPrintingEnhFixDate:			14 January 2005Author:			Frank SheararGoran''s CollectionPrintingEnh has a bug in #printOn:delimiter:last - the last delimiter isn''t used. This changeset fixes that.' id 'df92a005-7437-4955-adf4-2be3f68d5b95' date '30 July 2005' time '4:31:24 pm' author 'md' ancestors ((name 'Collections-md.12' message '- moved some sunit methods in sunit package- reorganzid categoriesChange Set:		TextLinkValidateFix-nkDate:			26 February 2005Author:			Ned KonzProvides a little more bulletproofing (though still no help) on the Cmd-6 link creation operations.' id '2f4e3934-0c40-4d4e-9f8f-42c80ceeb44b' date '30 July 2005' time '11:43:22 am' author 'md' ancestors ((name 'Collections-md.11' message 'Change Set:		ByteArray-doubleAtDate:			3 December 2004Author:			Hans BavecoAdds methods to ByteArray to read and write 64 bit Floats (DOUBLES) from and to a ByteArray.For the reading methods credits go to Andreas Raab. I made up the writing method - that one needs to be checked' id 'a8ae23b5-9c73-48b8-9bf0-6c5cbefad142' date '29 July 2005' time '4:16:42 pm' author 'md' ancestors ((name 'Collections-md.10' message 'Change Set:		Misc018-HeapIndexCallbackDate:			17 March 2003Author:			Joshua GargusThis changeset allows a block to be set that is evaluated whenever an object''s position in the heap is changed.  The parameters to the block are the object and the new index.The motivation is to enable a Heap to be used as a dynamic priority queue (one where the priorities of the events may change even after they are added to the queue.  When a priority is changed, the heap must be updated.  To do this efficiently, it must be possible to quickly find the changed object in the heap.  Without maintaining an index into the heap, this process is O(n), which is not fast enough.' id 'd6288a8b-c563-4072-9917-24ed7484286f' date '29 July 2005' time '11:18:11 am' author 'md' ancestors ((name 'Collections-md.9' message 'Change Set:		revertAsExplorerString-dewDate:			15 December 2004Author:			Doug WayReverts AbstractString>>asExplorerString to the previous ''self printString'' implementation from 2002.  I think this may have accidentally been overwritten with the even older ''self asString'' implementation during the m17n updates.  (This isn''t critical for 3.8.)For a technical explanation of the bug:  The ''self asString'' implementation is really horrible. :-)  It makes it difficult to tell strings from regular objects in the explorer.Change Set:		DelCompareTimingDate:			2 December 2004Author:			Marcus Denkerremoves #compareTiming form Symbol and Multisymbol:Subject:		[BUG]Symbol>compareTimingAuthor:		Tim RowledgeDate Posted: 27 June 2003Archive ID: 10815Comments:	What on earth is this method doing in Symbol?  It has nothing to do withSymbol and if it has any value at all ought to be pulled out and put inthe benchmarks package.' id '5cbb6269-d9b2-4305-be9f-5607b420c921' date '28 July 2005' time '8:52:01 pm' author 'md' ancestors ((name 'Collections-md.8' message '0001532: Remove some VMMaker methods to packageDescriptionWhen I packaged up the VMMaker stuff I left out a few methods and left them in the image. We ought to drop them fro mthe image now that I finally caught up with them.Ought to go into 3.8 update stream as well as 3.9, ASAP.' id '8ba2a108-fff6-4883-9c8d-7a3c0b5a38c7' date '23 July 2005' time '6:22:09 am' author 'md' ancestors ((name 'Collections-md.7' message '-> String>>#string-> fixes OrderedCollection and Set to not call initialize' id 'bb0ea775-de80-4b4f-9917-7301bf0ce856' date '22 July 2005' time '6:13:39 pm' author 'md' ancestors ((name 'Collections-md.6' message '-> changes LookupKey class>>#key: to use basicNew-> adds Collection>>#do:displayingProgress (thanks to Phillippe Marschal)-> moves some methods of SequencableCollection from other in-image packages    to package Collection:     	- do: aBlock displayingProgress: aString         - groupsOf: n atATimeCollect: aBlock          - groupsOf: n atATimeDo: aBlock ' id 'b61a6739-c7cc-4834-9bc1-780c33e502fd' date '22 July 2005' time '5:02:27 pm' author 'md' ancestors ((name 'Collections-md.5' message 'add contains: to Collection (for compatibilityu withvisualworks)' id '20111476-f375-11d9-8472-000d933a223c' date '13 July 2005' time '10:07:15 am' author 'md' ancestors ((name 'Collections-md.4' message '0001382: 3.8 performance regression - ByteSymbol>>#hashDescriptionMagma''s peak commit rate in 3.8 dropped from 24 per second in 3.7 to 18 per second in 3.8. I traced the cause of this problem to ByteSymbol>>#hash. Because of the new String hierarchy to support Multi-byte Strings, it is no longer benefitting from the primitive for calculating its hash that used to be in String>>#stringHash:initialHash:. It was moved to ByteString but not to ByteSymbol so now, ByteSymbol is inheriting the slow one from String which, per the comment, works for WideStrings too.This fix simply restores the method with the primitive call that regular [Byte]Symbols have always benefitted from.' id 'f71d3f17-f2f4-11d9-b082-000d933a223c' date '12 July 2005' time '6:49:51 pm' author 'md' ancestors ((name 'Collections-md.3' message 'undo the changes in -md.2 ;-) ' id '1e7e9524-f2b8-11d9-853d-000d933a223c' date '12 July 2005' time '11:34:18 am' author 'md' ancestors ((name 'Collections-dew.1' message 'Initial version from 3.8 partitioning.' id 'c41fe2c6-eb78-11d9-877e-000d93572e0e' date '3 July 2005' time '12:13:10 am' author 'dew' ancestors () stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())(name 'Collections-ul.128' message '- introduced #new:streamContents: in SequenceableCollection class. It''s like #streamContents: but if you know the size of the new collection this method doesn''t copy the result.- updated SequenceableCollection class >> #streamContents: to use #new:streamContents:, kept the original default size 100.- also updated Dictionary >> #association, Bag >> #sortedCounts and Dictionary >> #keysSortedSafely to use #new:streamContents:.- introduced #sort: in OrderedCollection. It uses Array''s merge sort to sort the internal array. This is much faster than sorting with SortedCollection (though it uses an extra Array object). Also added #sort which uses the same default block as Array >> #sort.- updated Bag >> #sortedCounts, Bag >> #sortedElements, Dictionary >> #keysSortedSafely, SequenceableCollection >> #sortBy: to use OrderedCollection''s or Array''s #sort method which can be significantly faster in these cases.- modified OrderedCollection class >> #newFrom: to avoid reallocating the internal array of the new OrderedCollection when the sender of #newFrom: doesn''t extend the collection.- changed the variable name from anOrderedCollection to aCollection in OrderedCollection >> #addAllLast: since it is being used with other Collections. Also changed the comment which seems to be superfluous.All related tests are green.' id '83e6fb96-62a9-6443-8f2b-0f5ac0bbb8c8' date '13 September 2009' time '1:40:52 am' author 'ul' ancestors ((id '0e97bd3a-ca15-4d4a-b1ea-c862b08367c4')) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())(name 'Collections-ul.130' message '- don''t try to use the matchTable if it doesn''t contain the character of the strings in String >> #findSubstring:in:startingAt:matchTable:' id 'a4058250-143d-9541-a909-486f73a9a827' date '14 September 2009' time '3:24:59 am' author 'ul' ancestors ((id '64ca8d2a-4608-ab4c-b4f4-bdbe61efcdab')) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())(name 'Collections-ul.137' message '- prepare for a new #grow and #rehash implementation for Set and its subclasses (except MethodDictionary). Add #noCheckNoGrowFillFrom:, #scanForEmptySlotFor: and #growTo: to these classes.- fix: adding Objects with the usual 12-bit #identityHash to a KeyedIdentitySet became O(n^2) when the set size reached 4096 (#scanFor:).- other minor changes (#scanFor:, #keysDo:)' id 'a1aa1054-6e61-194f-8864-8fa55eb945c4' date '20 September 2009' time '2:43:57 am' author 'ul' ancestors ((id '13ffdd74-b12a-4d7c-9277-b7e55dd6d29f')) stepChildren ())) stepChildren ())(name 'Collections-ul.138' message 'Warning! Don''t load this without having Collections-ul.137 in your image!- reimplement #rehash, #grow and #finalizeValues:' id '20aa2cee-625f-3a47-8759-814bfc051d9b' date '20 September 2009' time '3:50:08 am' author 'ul' ancestors ((id 'a1aa1054-6e61-194f-8864-8fa55eb945c4')) stepChildren ())) stepChildren ())(name 'Collections-ul.139' message 'Warning! Don''t load this without having Collections-ul.138 in your image! - remove old implementations of #rehash and #grow from Set''s subclasses (except MethodDictionary)' id '709e2f94-568a-8b48-9aa8-e428b7c3cd4a' date '20 September 2009' time '3:59:02 am' author 'ul' ancestors ((id '20aa2cee-625f-3a47-8759-814bfc051d9b')) stepChildren ())) stepChildren ())(name 'Collections-ul.140' message 'Warning! Don''t load this without having Collections-ul.139 in your image! - removed unused #scanForNil: implementations (replaced by #scanForEmptySlotFor:), updated comments in #scanFor:' id '700b7cc5-9d52-de44-a3ed-1925ea20ecca' date '20 September 2009' time '4:01:30 am' author 'ul' ancestors ((id '709e2f94-568a-8b48-9aa8-e428b7c3cd4a')) stepChildren ())) stepChildren ())(name 'Collections-ul.141' message '- rewritten Set >> #fixCollisionsFrom: and WeakSet >> #fixCollisionsFrom:, they use #scanFor: instead of #findElementOrNil:- replaced KeyedSet >> #fixCollisionsFrom: with #keyAt:- added #postCopy to Set and subclasses, to replace it''s similar but unique mechanism with #copy and #withArray:, these methods have to be removed in another version, but MethodDictionary >> #postCopy has to be added first.- Dictionary >> #values doesn''t create an unnecessary copy of the result anymore.' id '5bbb4fa3-06d4-6a43-9b52-84ca332f8038' date '22 September 2009' time '5:04:07 am' author 'ul' ancestors ((id '13ffdd74-b12a-4d7c-9277-b7e55dd6d29f')) stepChildren ())) stepChildren ())(name 'Collections-ul.142' message '- removed unnecessary #copy from Set and Dictionary' id '9b0cd4be-2e51-064a-9e79-620eda88e176' date '22 September 2009' time '5:07:35 am' author 'ul' ancestors ((id '5bbb4fa3-06d4-6a43-9b52-84ca332f8038')) stepChildren ())) stepChildren ())(name 'Collections-ul.143' message '- removed the unused Set >> #withArray:' id '3fa8a7e3-c8ec-b84c-9e6f-7e8537bb7187' date '22 September 2009' time '5:09:02 am' author 'ul' ancestors ((id '9b0cd4be-2e51-064a-9e79-620eda88e176')) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())(name 'Collections-ul.136' message '- primitive 60 won''t help with Array >> #at:ifAbsent: because it accepts only one parameter, so changed SequenceableCollection >> #at:ifAbsent: to get some improvement (assumes that indexes greater than the upper bound are more common than indexes smaller than the lower bound)' id '4673316d-d3a8-844b-9efc-482078ed4109' date '17 September 2009' time '6:23:30 am' author 'ul' ancestors ((name 'Collections-ul.135' message '- use primitive 60 in Array >> #at:ifAbsent: if possible' id '0fbb9896-3588-b744-bf32-9db118d4da57' date '17 September 2009' time '5:38:07 am' author 'ul' ancestors ((id '73ccbb29-90d4-9e41-bdad-6f3166c2216a')) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())(name 'Collections-ul.149' message '- removed zero check from WeakSet >> #like:' id '863eceb4-6735-ff4d-b9d0-5e1d98095add' date '1 October 2009' time '3:21:09 am' author 'ul' ancestors ((id 'bef1189d-525b-c540-a331-e19062c1ecbf')) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())(name 'Collections-ul.164' message '- removed Matrix >> #shallowCopy. The contents array is already copied in #postCopy, don''t have to do it twice. This may break code which assumes that #shallowCopy copies the contents array which is a really bad assumption.- also removed empty category "copying" from Interval' id 'd52d459c-7424-5b4f-b50c-c6f33379da08' date '9 October 2009' time '5:00:17 am' author 'ul' ancestors ((id 'a03ce3b0-6630-734f-aa39-54a496fbed7a')) stepChildren ())(name 'Collections-ul.165' message '- faster and simpler String >> #format:, String >> #withBlanksTrimmed' id '74be6921-9e47-b544-98b0-d1d6ab2aee55' date '13 October 2009' time '1:18:05 am' author 'ul' ancestors ((id 'a03ce3b0-6630-734f-aa39-54a496fbed7a')) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())(name 'Collections-ul.175' message '- reimplemented Set >> #rehashAllSets, it sends the new #rehashAllInstances to self and all subclasses.- deprecated #quickRehashAllSets, because it didn''t rehash all subinstances of Set and #rehashAllSets is fast enough with Kernel-ul.283, it also sends #rehashAllSets instead of the old implementation (no senders in trunk).use it with Kernel-ul.283, load order doesn''t matter' id '29817f56-90e6-974f-bc44-19529cc49bb2' date '30 October 2009' time '4:55:13 am' author 'ul' ancestors ((id '16488c43-6599-cf45-8502-bce910fa280a')) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())(name 'Collections-ul.180' message '- speed up mergesort for the general case (using <= for comparison), sacrificing < 1% performance for other cases- allow symbols to be evaluated as comparison blocks. For example: sorting an Array in descening order can be as simple as: array sort: #>=, it''s also faster than using a block.' id '14a7958c-b768-5e4c-887f-b91947f10d23' date '4 November 2009' time '11:12:49 am' author 'ul' ancestors ((id '0c724f71-9fc7-4701-a3cb-787c96f8c374')) stepChildren ())(name 'Collections-ul.181' message '- simplified Dictionary >> #keysSortedSafely - simplified WeakRegistry >> #keys- save a few bytecodes in #scanFor: of identity based collections when their size is between 4097 and 8191' id '28b1498c-8d3a-6e40-a0b7-136a7c258ccf' date '4 November 2009' time '12:16:49 pm' author 'ul' ancestors ((id '0c724f71-9fc7-4701-a3cb-787c96f8c374')) stepChildren ())(name 'Collections-ul.182' message '- fix: WeakKeyDictionary >> #finalizeValues: (increment the tally, and make sure that we don''t lose the key)- collect the objects which should be finalized into an IdentitySet instead of an OrderedCollection in WeakRegistry >> #finalizeValues this should give better performance in WeakKeyDictionary >> #finalizeValues:' id '7cd19280-ea82-8b48-818b-591dec500424' date '5 November 2009' time '6:50:53 am' author 'ul' ancestors ((id '0c724f71-9fc7-4701-a3cb-787c96f8c374')) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())(name 'Collections-ul.203' message '- removed HashedCollection >> #do: because it was the same as in Collection' id '41183069-a3b7-154b-8163-45a5c3536fda' date '21 November 2009' time '12:31:27 pm' author 'ul' ancestors ((name 'Collections-ul.200' message '- moved #like: from HashedCollection to Set- HashedCollection doesn''t implmenet #do: anymore, implementation is moved to Set >> #do: and Dictionary >> #associationsDo:- Dictionary >> #do: sends #valuesDo:- Set >> collect: sends #do: to self, instead of it''s array. This enables one to change the way enumeration methods work, by reimplementing only #do: in subclasses.- minor enhancement in #scanForEmptySlotFor: in identity based hashedcollections.- added missing #yourself sends to #copyEmpty implementors- removed #noCheckAdd: implementations since they were private- other cosmetic changes, like isNil ifTrue: replaced by ifNil:, etc.' id '7b512237-69ec-3647-ab4b-312ae6300fd4' date '20 November 2009' time '6:52:18 am' author 'ul' ancestors ((id '1f413b65-3cdd-4047-95e8-6025ff91aa49')) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())(name 'Collections-ul.205' message 'A proposal to solve the issues with #collect:.' id '2c312405-e447-944a-b5f9-23aeab2817a2' date '21 November 2009' time '5:00:56 am' author 'ul' ancestors ((id '87c8eab4-58f1-b845-9b98-d47c58d34302')) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())(name 'Collections-ul.211' message '- replaced 32359813 with 32435981 in HashedCollection >> #goodPrimes.' id 'fcd9de20-483e-3742-9033-ed9e07fb4123' date '25 November 2009' time '4:53:27 am' author 'ul' ancestors ((name 'Collections-ul.210' message '- HashedCollections have prime capacity (if they are not oversized)- HashedCollections'' growth rate is not 2, but 1.5 (2 for small sizes which decreases to 1.5 as the size increases)(based on AndrÃ©s Valloud''s changes made for pharo)Load Kernel-ul.305 before this.' id 'e8c4f523-7000-e743-a068-9646e28cb0c9' date '25 November 2009' time '4:30:13 am' author 'ul' ancestors ((id 'c77d53b2-acef-48e6-b686-333c323a77a5')) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())(name 'Collections-ul.241' message '- fix: Character >> #digitValue shadowed instance variable: value- fix: Character >> #storeBinaryOn: didn''t work with non-octet characters- faster methods in String: #convertFromWithConverter:, #convertToWithConverter: and #skipDelimiters:startingAt: ' id '0cc92229-4249-a048-9ce8-47cc7cb33f93' date '9 December 2009' time '10:45:48 am' author 'ul' ancestors ((id '96e09369-25c5-664e-ab0b-f9361614b2b6')) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())(name 'Collections-nice.256' message 'Correct interval #do: and #reverseDo: from http://bugs.squeak.org/view.php?id=6456For example,self assert: ((1.0 to: 3.0 by: 1.0 successor) max closeTo: 2.0).Correct inclusion test self assert: ((1.0 to: 3.0 by: 1.0 successor) includes: 3.0) not.' id '8683c968-b75c-fa4e-9cd0-9da55637590a' date '22 December 2009' time '4:29:50 am' author 'nice' ancestors ((id 'ea5f7972-be43-ba45-aef0-fb5730b47745')) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())(name 'Collections-edc.286' message 'enh: Add String>beginsWithAnyOf:Hope simmetry and correct words is better now' id '87011339-77ba-4661-bdda-adc4db1ec5a0' date '29 January 2010' time '8:06:10.38 am' author 'edc' ancestors ((id '855b55a0-8aa2-ed4a-8612-d1153fa8f656')) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())(name 'Collections-mtf.291' message '7219: Improve Streams Usage Readabilityhttp://bugs.squeak.org/view.php?id=7219Adds << to streams to be mostly like nextPutAll, but uses putOn: so that it works with any object.' id '3eef5216-4a99-4e4e-a3fa-6fa6cee59976' date '4 February 2010' time '7:47:07.571 pm' author 'mtf' ancestors ((id '16f08817-12b2-412e-aabd-27d02e5c693a')) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())(name 'Collections-ul.345' message '- implement #backChunk with #back instead of #oldBack' id '3384c567-0abc-5346-a752-bbd3ac938e44' date '22 March 2010' time '8:20:09.398 am' author 'ul' ancestors ((id '8de2776c-4240-b04a-9295-397608c5a202')) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())(name 'Collections-ul.415' message '- another attempt to get rid of WeakRegistry class >> #migrateOldRegistries' id '67a50cf1-f9b7-b04c-9b97-aafeb4266086' date '12 December 2010' time '4:37:27.575 pm' author 'ul' ancestors ((name 'Collections-ul.414' message 'merged' id 'de989672-b49a-5c48-8c15-a18530ff3c16' date '12 December 2010' time '4:33:46.828 pm' author 'ul' ancestors ((id '914110ae-fc74-410d-b816-ebac6af7162f')(name 'Collections-ul.412' message '- SharedQueue fixes' id '0d255954-d008-d647-91fa-59be37678e29' date '8 December 2010' time '4:46:07.6 am' author 'ul' ancestors ((id '42a0b87a-f525-6345-bd2c-e55186e17c9d')) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())(name 'Collections-eem.473' message 'A reimplementation of Travis Griggs'' piecesCutWhere:[do:]' id '6fa8cab9-1079-4bba-9fe4-0a96fcd47256' date '28 April 2012' time '5:02:56.235 pm' author 'eem' ancestors ((name 'Collections-eem.472' message 'Revert to a non-thread-safe TranscriptStream>contents toavoid deadlock in things like Compiler>recompileAll.' id '6439a628-62fe-4bf6-8677-043ed588def0' date '11 April 2012' time '9:37:25.167 am' author 'eem' ancestors ((name 'Collections-eem.471' message 'Fix TranscriptStream>ensureEndsWith: & ensureCr' id 'ddf0731e-45e0-42a2-bd10-7f65ab12fe6f' date '8 April 2012' time '5:16:02.533 pm' author 'eem' ancestors ((id '1612b1dd-7b3c-43fa-81d2-46da0eb098eb')) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())(name 'Collections-cwp.470' message 'Removed the requirement that ReadOnlyVariableBindings can only be used in Smalltalk globals. This makes it possible to create environments other than the root. (Necessary for EnvironmentTest, and eventually, multiple environments.)' id 'ecae5676-1ea8-42a6-91f0-5c2c65045fec' date '20 July 2012' time '11:57:39.778 am' author 'cwp' ancestors ((id 'f8d7d7a5-e127-4108-95ae-6ef48ac43d86')) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())(name 'Collections-topa.366' message 'Provide #asCamelCase for Strings.May be usefull for natural language conversation or the like.' id '5491e7f9-bcc4-423a-a267-8853ca2eb9a3' date '16 June 2010' time '3:34:47.932 pm' author 'topa' ancestors ((id '333e9c8f-4030-fc4d-bb69-e8d8e175edc9')) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())(name 'Collections-nice.502' message 'Let String combinations produce Strings rather than Array of Characters.This is not perfect for WideString which are not necessarily simplified to ByteString, but IMO better than Array.' id '493d78e4-ccce-434c-98ae-90f22102cdce' date '24 February 2013' time '7:30:26.441 pm' author 'nice' ancestors ((id '2ae8b43b-e07f-4c95-bf5f-894a35fe3245')) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())(name 'Collections-fbs.557' message 'OK, so I can''t help but fix this typo.' id 'caf5cc51-09ce-5543-be33-9f426e6c6871' date '3 January 2014' time '5:04:30.796 pm' author 'fbs' ancestors ((name 'Collections-fbs.556' message 'While we debate whether we should even have an #ignoreStyleIfOnlyBold preference, make it a pragma preference.' id '80422ba6-f9b2-fc4f-acb2-27a911950eb9' date '3 January 2014' time '4:28:00.204 pm' author 'fbs' ancestors ((id '3b044956-1e6b-3e4e-a427-7fd939032a30')) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())(name 'Collections-mt.597' message 'Removed non-working #first: from OrderedDictionary. Was committed by accident. ^__^' id '30d20939-3981-af4d-88b7-8e85c4f29201' date '16 January 2015' time '10:58:06.65 am' author 'mt' ancestors ((name 'Collections-mt.596' message 'some fixes to OrderedDictionary including copy; small part of the protocol of OrderedCollection adopted (#sort, #first, ...).' id 'ca58af47-b4d1-6046-810d-27726f7a19e2' date '16 January 2015' time '10:55:07.303 am' author 'mt' ancestors ((name 'Collections-mt.595' message 'Some fixes to the OrderedDictionary implementation and its class comment was updated.' id '6cc6dbdd-293b-1747-a983-1cdd512bb383' date '16 January 2015' time '9:09:51.827 am' author 'mt' ancestors ((name 'Collections-topa.594' message 'Add #flattened as alias for #flatten.The former makes it more clear a copy will be returned (cf. #reversed), the latter is more in line with ANSI names (cf. #reverse) and other languages.' id 'ad0a6bee-b97d-47a5-bd6b-5c32211e8fd4' date '16 January 2015' time '8:48:38.154 am' author 'topa' ancestors ((name 'Collections-mt.593' message 'New ordered dictionary added, which keeps track of the insertion order.' id '0316ee3c-b9ec-f845-9474-8df35a929d8b' date '15 January 2015' time '5:14:16.888 pm' author 'mt' ancestors ((name 'Collections-mt.592' message 'Some nil checks replaced with #notNil because ProtoObject knows it and it is faster (about 15%)' id '1514e0fd-0cb5-6642-b335-98ed754dad41' date '15 January 2015' time '2:38:22.051 pm' author 'mt' ancestors ((name 'Collections-mt.591' message 'Added #flatten as special case for #concatenation to remove any nesting except for strings. Very simple implementation with streams and recursion but not as efficient as #concatenation.' id '8d73a22f-0d76-1f4a-82b7-53900b5f3be1' date '14 January 2015' time '1:13:09.966 pm' author 'mt' ancestors ((name 'Collections-mt.590' message 'Methods added to easily join split strings.' id '5165dd57-c3e5-5d45-9c61-bc820f2fab02' date '14 January 2015' time '12:47:06.604 pm' author 'mt' ancestors ((name 'Collections-mt.589' message 'comment added to #concatenation' id '0bf76b20-9b1a-2b43-ae6c-57507ce3176d' date '14 January 2015' time '11:41:12.144 am' author 'mt' ancestors ((id 'fa77c95e-6dc5-4ae1-acdc-2d1478d62476')) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())(name 'Collections-cmm.603' message '- Collection>>#groupBy:having: is already being used for non-Integer groups, and integerDictionary is now slower than a regular Dictionary in Spur.- PositionableStream>>#nextInto:, #next:into:, #nextInto:startingAt:, #next:into:startingAt:, and #readInto:startingAt:count require no services specific to PositionableStream.  Move them up to Stream and remove the redundant implementations from various subclasses.- Let WeakArray>>#species be a regular Array instead of its own class, so that WeakArray''s can be successfully compared to Arrays with equivalent contents.' id '48d4fe0c-cde3-4244-b87f-2d44e3214240' date '11 February 2015' time '2:38:57.218 pm' author 'cmm' ancestors ((id '96d6fefa-c902-7640-bd09-c17016199e81')) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())(name 'Collections-ul.624' message 'Various improvements related to Characters and Strings.Resurrected Character''s ClassificationTable- initialize it based on the actual EncodedCharSet for leadingChar 0 (Unicode)- added a bit for #isDigit- added a mask for #isAlphaNumeirc- use 0 as a tag if the uppercase or lowercase character value is greater than 255- initialize the table in the postscript (to not infere with #initialize)Character >> #encodedCharSet assumes than leadingChar 0 means Unicode. This is hardcoded in a few methods, so why not unify it here?Simpler and faster Character >> #tokenish.Simpler and faster String >> #withoutLineEndings.Precalculate the size of the result in Symbol >> #numArgs: to avoid an extra allocation.' id 'a89640e5-e0cc-44e1-9613-e065b78258ad' date '1 May 2015' time '1:40:09.445 pm' author 'ul' ancestors ((id 'baf2902d-52b9-2442-a513-8a5a6ff0ce30')) stepChildren ())) stepChildren ())(name 'Collections-ul.625' message 'Use the ClassificationTable in #asLowercase, #asUppercase (the obsolete behavior is gone), #isAlphaNumeric, #isDigit, #isLetter, #isLowercase and #isUppercase of Character.' id 'd09538cd-53f4-42d7-8070-224fde4a4ae2' date '1 May 2015' time '1:41:40.726 pm' author 'ul' ancestors ((id 'a89640e5-e0cc-44e1-9613-e065b78258ad')) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())(name 'Collections-cmm.663' message 'From Tobias:  Make Text more polymorphic with String.' id '8e6500e4-15d6-43a8-8b85-0c8cb36f5a82' date '8 October 2015' time '10:19:13.283 am' author 'cmm' ancestors ((id '48404c29-18ed-9749-93c2-4481deec4180')) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())(name 'Collections-tfel.715' message 'merge fixes from Squeakland Etoys' id '53dd4ec2-79d7-e143-ad26-6f0f8ba17c9b' date '29 August 2016' time '2:50:30.562946 pm' author 'tfel' ancestors ((name 'Collections-tfel.712' message 'merge master' id 'dc17edaa-90b9-e748-9384-2f1cf3ac25bf' date '18 August 2016' time '5:39:30.931286 pm' author 'tfel' ancestors ((id '050b17d5-24f7-bd41-abcc-8c1b4839170a')(name 'Collections-tfel.704' message 'merge with trunk' id 'b799fb95-1b8e-4ae6-a9ae-3d93dac5b410' date '6 August 2016' time '1:05:41.688734 pm' author 'tfel' ancestors ((id '32b3f850-392c-9a4d-b0cb-7e1ed37c9bc6')(name 'Collections-tfel.703' message 'merge from Squeakland Etoys image' id '7793774a-ac8e-cb45-b4bc-92b88b4cb50e' date '2 August 2016' time '9:55:19.046368 am' author 'tfel' ancestors ((id 'b1aa2c6f-bf2f-a642-ae79-6d85d806a417')(name 'Collections-kfr.9' message 'Fix long standing bug with printing small numbers ie 1.2245678e-16Copied method from Squeak 4.4' id 'cbcd8469-2a1a-e247-848b-b3d559df006c' date '5 December 2012' time '4:58:43 pm' author 'kfr' ancestors ((name 'Collections-kfr.8' message 'Change the bumper that is put out at the front of a .pr file so if it is encountered by an older version of etoys, instead of simply refusing to load, it now describes the problem to the user and gives the option of proceeding anyway. Note: also retains the older bumper guard against loading into even older systems. Pre-olpc-era projects can still not be loaded' id '495f8cf3-0787-9441-a5e0-040b750b52c8' date '4 March 2012' time '2:25:22 pm' author 'kfr' ancestors ((name 'Collections-bf.7' message '- revert Dictionary>>at:ifAbsentPut: to its non-optimized but correct version (fixes DNU when updating)' id 'edc52a80-1dda-4f74-bd24-d43771cf6cf5' date '24 May 2010' time '3:38:49 am' author 'bf' ancestors ((name 'Collections-Richo.6' message '* Removed some of the stuff that now belong to GetText package.' id '07168c5f-a377-9049-8509-aed182ae1f30' date '22 May 2010' time '4:28:55 pm' author 'Richo' ancestors ((name 'Collections-Richo.5' message '* Added some methods to get a translation in a defined domain.' id '15d54343-1b63-4047-8158-a3ba98d1479c' date '17 May 2010' time '11:45:22 pm' author 'Richo' ancestors ((name 'Collections-Richo.4' message '* Modified String>>#translated' id '7abb1f7a-70b4-184c-ba0d-c40455c50904' date '13 May 2010' time '4:55:53 pm' author 'Richo' ancestors ((name 'Collections-bf.3' message '- in String>>translated, use "context mclass" instead of the less accurate "context receiver class" to look up the text domain' id '145b3fa0-a26f-41fe-bfa0-aafd0b73974c' date '2 May 2010' time '6:59:40 pm' author 'bf' ancestors ((name 'Collections-bf.2' message '- add countOpenTranscripts' id '4c13d35a-5b29-419f-a883-ec9b3ca4bfd5' date '29 April 2010' time '5:14:13 pm' author 'bf' ancestors ((name 'Collections-bf.1' message '* initial etoys 4.1 snapshot' id 'fceee6cb-fb9c-4b69-b602-116a05899ba9' date '29 April 2010' time '2:17:06 pm' author 'bf' ancestors () stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())(id '88200af6-48e5-4ae3-a247-a0b5a74985bf')) stepChildren ())) stepChildren ())) stepChildren ())(name 'Collections-eem.717' message 'Revise upwards the cross-over in SequenceableCollection>>atAllPut: at which point to move from a simple loop using at:put: to connivance using replaceFrom:to:with:startingAt:.  Add a comment that includes the code to actually test this, instead of simply claiming without support.' id 'ff6f9273-5077-47f9-b660-0cdd4b184bb1' date '13 October 2016' time '4:14:34.323953 pm' author 'eem' ancestors ((id '33e9eb9e-1da0-49a7-9840-9770305ec0d4')) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())(name 'Collections-nice.723' message 'Provide a WeakIdentityDictionary - a good candidate for being used as environments undeclared pool.' id '0c01b091-06e9-694d-9415-56c62c06babc' date '27 October 2016' time '8:04:09.437881 pm' author 'nice' ancestors ((id 'e951d8a8-3e64-4f5c-821a-6aad7a1955c4')) stepChildren ())) stepChildren ())) stepChildren ())(name 'Collections-cmm.729' message 'Symbol>>#selector affords flexibility with input arguments that normally only accept Symbol selectors, to also accept MessageSends or CompiledMethods, too, as when drag and dropping a method out of a browser window.' id '7055f774-a3b6-4f1f-a8e6-94265108c10f' date '22 December 2016' time '11:41:23.542114 pm' author 'cmm' ancestors ((id 'fcb31400-a826-4642-8ad1-83c813998ba9')) stepChildren ())) stepChildren ())(name 'Collections-monty.714' message 'added #applyLanguageInformation: (with spelling corrected) from the old XML-Parser package to String and ByteString because MOFile depends on it and leaving it as an XML-Parser extension breaks installing newer packages from the SqueakMap' id '48b96a24-dd93-4072-b019-fbeefa9e70ff' date '3 February 2017' time '10:01:44.476206 pm' author 'monty' ancestors ((id '9ae54fc6-0cc6-f243-abd7-b2510484603c')) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())(name 'Collections-tonyg.733.1' message 'Allow zero and negative startingAt indices in SequenceableCollection>>#indexOfSubCollection:startingAt:ifAbsent:, for compatibility with the existing implementation in String. Fixes tests in CollectionsTests-tonyg.275 and NetworkTests-tonyg.44.' id 'e754e6ad-dd14-4e97-8ec1-82422b8feaa5' date '23 February 2017' time '2:44:28.751184 pm' author 'tonyg' ancestors ((id '98316bc6-4edd-4b8c-aae9-16d87505b8e9')) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())(name 'Collections-fn.712' message 'Add support for style attr' id 'ac0592c6-9454-4d11-8ad0-1426ff954e90' date '6 March 2017' time '9:44:54.737668 pm' author 'fn' ancestors ((id '050b17d5-24f7-bd41-abcc-8c1b4839170a')) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())(name 'Collections-ul.743' message '- OrderedCollection >> #collect: & friends return an OrderedCollection. This affects its subclasses. It fixes WeakOrderedCollection (collected objects won''t vanish), FloatCollection (there''ll be no errors if the collected value is not a Float) and SortedCollection (#collect: was implemented like this, but other methods were not)). Other subclasses may have to be fixed/removed.- Introduced NonPointersOrderedCollection, a common superclass for classes like FloatCollection. This fixes removal from FloatCollection, and makes it easy to create similar specialized ordered collections.' id '854bfcea-dba7-48c9-ba6c-9de1f457b743' date '26 March 2017' time '10:10:37.350006 pm' author 'ul' ancestors ((id 'e13a7666-393a-49e3-ae8f-3fd24d09cb69')) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())(name 'Collections-nice.753' message 'Nuke obsolete brace constructs used by compiler long long ago.Since encoder v3 (plus closures) there is a dedicated byte code for constructing those arrays dynamically, so the #braceWith: like messages are not sent for a while and won''t be used anymore in foreseeable future.' id '5f5b9a99-afa3-40f2-8fb5-a9a6183d10b5' date '26 April 2017' time '11:56:06.826092 pm' author 'nice' ancestors ((id 'd3620c7a-7ead-43fb-93ee-21dce320c7eb')) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())(name 'Collections-tonyg.734' message 'Factor out #upToPosition:, which lets us address the discrepancy between position counting bytes in MultiByteFileStream, but #next: expecting a count of items in #upToAll:. This is the first half of a fix for Mantis #4665. See also MultilingualTests-tonyg.22.' id '9edf6f29-ea5e-4c3b-9d05-03c54d4ba86c' date '23 February 2017' time '2:08:07.162997 pm' author 'tonyg' ancestors ((id '98316bc6-4edd-4b8c-aae9-16d87505b8e9')) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())(name 'Collections-nice.767' message 'Continue SortFunction refactoring' id 'a3d23745-3d89-423e-9f25-a4d2dbf9864c' date '8 November 2017' time '12:46:38.73749 am' author 'nice' ancestors ((name 'Collections-nice.766' message 'Revisit the SortFunction in the spirit of refactorings started by Denis Kudriashov in Pharo, but pushing them further.SortFunction are by nature composable.So make SortFunction abstract, and add different subclasses for different kind of composition.Add the ability of sorting by properties with an odd collator rather than default <=>, which was missing in original implementationAlso add the ability to sort undefinedFirst as proposed by Denis.Reversing the direction is now implemented with a subclass.And the main SortFunction message is now collate:with: which must answer the collation order (-1,0,1).' id '0008f12f-55e5-4c73-abcd-0e082a6013d1' date '5 November 2017' time '11:52:17.600192 pm' author 'nice' ancestors ((id '5207defa-6a76-4177-93d0-b5a6806b805e')) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())(name 'Collections-mt.817' message 'Un-deprecate "flush" SharedQueue2. See Levente''s thoughts on this topic: http://forum.world.st/Stream-SharedQueue2-39Deprecated-flush-td5094045.html' id '25009a5a-3d03-ea42-8c4a-f1a5e01b218d' date '25 January 2019' time '9:42:56.826457 am' author 'mt' ancestors ((name 'Collections-mt.816' message 'Generalize try-ignore. See discussion: http://forum.world.st/The-Inbox-Collections-mt-812-mcz-tp5091227.html' id 'd70f1d8e-6eb9-204c-86fc-e538f8efec98' date '25 January 2019' time '9:34:00.676997 am' author 'mt' ancestors ((name 'Collections-mt.815' message 'Merges Collections-JH.814' id '84a9d4dc-2c9e-4b48-84b9-66254895c0bb' date '25 January 2019' time '9:14:33.882997 am' author 'mt' ancestors ((name 'Collections-mt.812' message 'Adds a small scripting/debugging interface to evaluate code on a heterogeneous collection. Ignore errors on the way.1. Example: A bunch of morphs whose n-th submorph should be made yellow. Would raise errors for morphs with less than n submorphs.ActiveWorld submorphs try: [:ea | ea submorphs fifth color: Color yellow].2. Example: Fetch the selected classes of all code browsers through the submorph interface.| results |results := OrderedCollection new.ActiveWorld submorphs try: [:ea | results add: ea model selectedClass].results explore.' id '64ff5a45-61b5-5642-aa46-9fbeac0215dd' date '18 December 2018' time '11:58:09.289023 am' author 'mt' ancestors ((name 'Collections-eem.811' message 'Use the integerAt[Put] primitive to implement signedByteAt:[put:]' id 'a01f9f2a-1915-4520-8dbd-dfe7f43b1026' date '31 October 2018' time '10:44:24.941583 am' author 'eem' ancestors ((name 'Collections-ul.810' message '- renamed the methods #stringHashWithInitialHash: and #bytesHashWithInitialHash: to #hashWithInitialHash:' id '33532c8f-187e-4914-9573-9a6a5390a97c' date '30 October 2018' time '1:26:22.149414 am' author 'ul' ancestors ((name 'Collections-topa.809' message 'Add #histogramOf: convenience + test' id '65e8b64d-f325-47d8-8f83-ab4a9793ba9f' date '28 October 2018' time '8:16:44.149252 pm' author 'topa' ancestors ((name 'Collections-eem.808' message 'Faster ByteString/ByteArray hashing.  The VM will accept either 1 or 2 args for the primitiveStringHash primitive so it can be used on the instance size, avoiding a little overhead.' id 'c6b15e95-b365-4ea0-8211-71ec7f55084b' date '22 October 2018' time '4:54:43.989805 pm' author 'eem' ancestors ((name 'Collections-ul.807' message '- introduced KeyedSet >> #put: which works like #add:, but replaces existing objects with the argument as Dictionary''s #at:put: does- unified the usage of primitiveStringHash by adding it to ByteSymbol and by using String''s implementation as fallback, which works for ByteArrays too' id 'c2efe147-56f8-43ff-a08b-f42390390418' date '22 October 2018' time '9:27:33.883624 pm' author 'ul' ancestors ((name 'Collections-eem.806' message 'Fix String>>numArgs for _: keywords (to accompany Compiler-eem.394)' id '300fdef5-d563-4e05-b16c-f82c15cc005f' date '18 September 2018' time '11:54:09.798435 am' author 'eem' ancestors ((id '7c024534-7188-47c5-b5e8-41e6dccf91ea')) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())(name 'Collections-JH.814' message 'Add check to FloatArray primitive fallback code to ensure that receiver and argument have the same size (argument was previously allowed to be larger than receiver, which does not make sense mathematically).' id '2981cec1-a155-7840-bbff-827a8f3387bb' date '24 January 2019' time '10:32:33.157023 am' author 'JH' ancestors ((id '300fdef5-d563-4e05-b16c-f82c15cc005f')) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())(name 'Collections-cbc.813' message 'Altered Interval>>hash to increase entropy' id '78c08e62-a381-284a-b476-6e638d99f91d' date '20 November 2018' time '11:28:59.501218 am' author 'cbc' ancestors ((name 'Collections-cbc.812' message 'Make intervals that are #= have the same hash.Also, slight adjustment to #=.' id '1977358c-ec82-5442-8f1d-027d4bc817a3' date '15 November 2018' time '10:06:05.244237 pm' author 'cbc' ancestors ((id 'a01f9f2a-1915-4520-8dbd-dfe7f43b1026')) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())(name 'Collections-nice.499' message 'Rename RunArray unique selector #addLast:times: as #add:withOccurrences: It''s a bit less expressive but it''s universal.Deprecate #addLast:times:' id 'a0703731-567b-4e87-9fbc-94cfbeed1534' date '25 January 2013' time '11:09:44.244 pm' author 'nice' ancestors ((id '8b3351ea-4d1a-4771-985b-589a13b3e605')) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())(name 'Collections-mt.849' message 'Minor fix to re-use given stream.' id '21723f9b-83a7-5f44-8876-9db5521539b4' date '19 August 2019' time '1:52:50.361443 pm' author 'mt' ancestors ((name 'Collections-mt.848' message 'Resolve the discussion about Collections-ct.827 (http://forum.world.st/The-Inbox-Collections-ct-827-mcz-td5099876.html) to move or not to move #joinSeparatedBy:.1) Do not move it.2) Document the decision in #joinSeparatedBy:.3) Prepare similar "print-on-delimiter" on Collection for deprecation.4) Add #joinOn: ... similar to #printElemetsOn:.So, there is still that #printElementsOn: working on all kinds of Collection.' id '374f81b1-f8c1-1a49-9078-ce11ed34de8b' date '14 August 2019' time '3:51:55.072512 pm' author 'mt' ancestors ((id '22fbf3f6-8234-41df-9de5-a38187e659c6')) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())(name 'Collections-nice.858' message 'Fix union: and intersection: of CharacterSetWe must avoid using naive loops for huge sets that canBeEnumerated not.An enumerationCost scale is introduced for that purpose.The idea is that intersection: must be performed by the cheapest set, while union: must be performed by the most expensive. The most expensive eventually knows how to handle loops lazily.' id 'cd5d4533-11f2-2340-8957-a577330de15d' date '17 November 2019' time '12:46:04.058035 pm' author 'nice' ancestors ((name 'Collections-pre.857' message 'Adds startOfHeader to Character, adds empty abstract implementations of scanFrom:, writeScanOn: to TextAttribute to allow for Texts which include TextAttributes which do not implement serialization to still be serialized, adds a comment to these methods.' id '5ef00b65-3884-c445-b276-0cc01f0b10a1' date '4 October 2019' time '11:04:30.363303 am' author 'pre' ancestors ((name 'Collections-pre.856' message 'Removes asMutator and isMutator from Collections package' id 'b3006f02-cc87-2e4f-861b-a55e8478d1a7' date '2 October 2019' time '3:33:03.570738 pm' author 'pre' ancestors ((id '9a5b562f-ca9a-624c-9012-7840cb25db4e')) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())(name 'Collections-ct.849' message 'Refine #findSelector1. Ignore leading $#2. Don''t fall over colons as part of arguments in a selected message sendI hope this is no performance sensitive method, but as it should be called only once per user interaction, I don''t think so.' id 'aa322791-50ce-234e-9f55-40b28674c13f' date '14 August 2019' time '11:35:57.1364 pm' author 'ct' ancestors ((id '22fbf3f6-8234-41df-9de5-a38187e659c6')) stepChildren ())) stepChildren ())(name 'Collections-ct.855' message 'Add convenience method for adding many attributes to a Text.' id '079663b5-47e2-bd47-bfa4-86db03bd98d8' date '20 September 2019' time '6:56:22.518437 pm' author 'ct' ancestors ((id '2872f979-2300-5c47-ae2a-915321068785')) stepChildren ())) stepChildren ())(name 'Collections-ct.856' message 'Proposal: Add #detect:ifFound:, which does, obviously, nothing if there is no hitI found nearly a dozen senders of #detect:ifFound:ifNone: that specify [] as exceptionBlock ...' id '62cc0002-1fd2-f547-a8d3-7812efadc948' date '20 September 2019' time '6:58:40.039437 pm' author 'ct' ancestors ((id '2872f979-2300-5c47-ae2a-915321068785')) stepChildren ())) stepChildren ())(name 'Collections-ct.861' message 'Adds fileIn/Out support for TextIndent.' id '3a18d134-b0f9-224c-be2c-f6e4916260dd' date '15 November 2019' time '7:18:41.561005 pm' author 'ct' ancestors ((id '5ef00b65-3884-c445-b276-0cc01f0b10a1')) stepChildren ())) stepChildren ())(name 'Collections-kfr.812' message 'Print the matrix so one can see the rows and columns' id '93f849c9-8b62-e04c-b8e0-ab2a7c2d728c' date '4 November 2018' time '4:41:29.534614 pm' author 'kfr' ancestors ((id 'a01f9f2a-1915-4520-8dbd-dfe7f43b1026')) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())