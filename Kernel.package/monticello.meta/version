(name 'Kernel-GDK.1307' message 'empty log message' id 'c2e6af50-09fc-4aaf-b7f9-af40991ee5e2' date '24 January 2021' time '6:53:29.612923 pm' author 'GDK' ancestors ((name 'Kernel-mt.1306' message 'Prepare 5.3rc2 --- Class organization clean-up must be silent to not interfere with other clean-up code such as in ChangeSet.' id 'c36a6ca0-83a9-8c48-a66e-2e1f683b0391' date '26 February 2020' time '5:17:44.570527 pm' author 'mt' ancestors ((name 'Kernel-mt.1305' message 'Fixes class-rename issue.We need a name! Voting time is now:- RemarkNotification- LoggingNotification- CommentNotification- NoticeNotification (???)- [You idea goes here.]' id '46b30358-e624-b44e-a36d-b6775af60202' date '25 February 2020' time '10:37:58.980786 am' author 'mt' ancestors ((name 'Kernel-mt.1304' message 'Fix that debugger output of the ObjectTracer.' id '537e696d-35de-d44e-9f51-8c11ef2dd73c' date '21 February 2020' time '5:11:43.939367 pm' author 'mt' ancestors ((name 'Kernel-mt.1303' message 'Merges several smaller fixes from inbox. Thanks Christoph (ct)!- fixes drag-drop methods between classes on the "--all--" category - fixes two simulation bugs concerning #ensure: and #on:do:- fixes ObjectTracer DNU- fixes #readCarefullyFrom: in Object by correctly catching SyntaxErrorNotification' id '0ef679e3-e47a-9945-b433-a81e5ecb8bf7' date '21 February 2020' time '4:20:32.494211 pm' author 'mt' ancestors ((name 'Kernel-ct.1287' message 'Fixes selector classification with special category names, such as the all category or the null category.Reproduce this issue by moving a method from one class into another and dropping it over the all category.This bug might probably be the reason why we Utilities >> #fixUpProblemsWithAllCategory was introduced.' id 'b748ffbb-527a-3c42-8669-654a28068319' date '13 December 2019' time '7:01:04.635029 pm' author 'ct' ancestors ((name 'Kernel-mt.1286' message 'Fixes key-code mapping to map only in key-stroke events. This fixes the bug where a key-down/up event on [ctrl] appeared as [ctrl+q], [shift] as [shift+P], and [cmd] as [cmd+r]. Also fix key swapping and duplication for [ctrl+shift] combinations. Improves documentation in EventSensor class comment.' id '2f99cd52-d053-cb40-a84a-6c257ee118f4' date '13 December 2019' time '4:24:23.507615 pm' author 'mt' ancestors ((name 'Kernel-mt.1285' message 'Improves documentation in EventSensor.' id '1c18d133-29d7-6049-a7be-40a8d045b474' date '13 December 2019' time '2:25:24.279249 pm' author 'mt' ancestors ((name 'Kernel-mt.1284' message 'Adds a message to set new contents and notify all dependents. To be used by subclasses to remove extra #changed: calles and to provide a better hook to do something else when updating the contents.' id '8058d02f-d2cd-b942-aa93-095fa963a523' date '29 November 2019' time '11:37:15.422061 am' author 'mt' ancestors ((name 'Kernel-mt.1283' message 'Removes Kernel -> Regex dependency.' id '04694a24-76a1-a941-b664-645ffc7f27e6' date '27 November 2019' time '10:25:51.203363 am' author 'mt' ancestors ((name 'Kernel-nice.1282' message 'Let complex print the correct signBit of its imaginary part in case of negativeZero.Note: the signBit are not preserved upon reinterpretation.That''s a problem of representation via arithmetic operation 1 + 2 ibecause we have this0.0 - 0.0 -> 0.00.0 + (-0.0) -> 0.0(-0.0) + (-0.0) -> -0.0(-0.0) - 0.0 -> -0.0' id '70d4bc61-04e8-4cfd-befb-1b23f3f13953' date '22 November 2019' time '5:54:28.478745 pm' author 'nice' ancestors ((name 'Kernel-mt.1281' message 'Merges Kernel-ct.1270, Kernel-ct.1278:- better print-string for Complex- bugfix in #valueSupplyingAnswers: for bad regex expressions' id '08eab339-2d37-7d41-ab09-6776ddbb09b0' date '22 November 2019' time '3:39:45.714669 pm' author 'mt' ancestors ((name 'Kernel-mt.1280' message 'Sorry for the noise. Boolean hick up. :-)' id 'd1878463-f3d2-d248-b2d3-5b2a8d613e7b' date '22 November 2019' time '11:42:28.536303 am' author 'mt' ancestors ((name 'Kernel-mt.1279' message 'Following the idea in Kernel-ct.1272 (inbox/treated), add the possibility to suppress warnings. Complements Tests-mt.423.' id '5ebf13b5-8050-7243-812f-b74e0784b215' date '22 November 2019' time '11:32:11.080303 am' author 'mt' ancestors ((name 'Kernel-mt.1278' message 'Merges Kernel-mt.1266, which makes #messagesSequence compatible with SistaV1.' id '1aae36c0-4723-934a-a101-43de1d7435aa' date '13 November 2019' time '10:32:26.550043 am' author 'mt' ancestors ((name 'Kernel-nice.1277' message 'Fix my recent bug in Integer>>asFloat.Explanations: with introduction of digitsAsFloat, I removed implementation of LargeNegativeInteger>>asFloat because all the involved bitOps in superclass (LargePositiveInteger) operate on magnitude and thus work for negative too (bitShiftMagnitude: and anyBitOfMagnitudeFrom:to:).Err... All operations but one:	mantissa := mantissa + 1.Unfortunately, this was not caught by our tests...We all know that 100% coverage does not mean 100% correct.But 100% coverage of a method also does not mean 100% coverage for every possible subclass!' id '08c3b2dd-36ff-4da9-b7b9-c70f11e47b1b' date '18 October 2019' time '1:20:30.016461 pm' author 'nice' ancestors ((name 'Kernel-mt.1275' message 'Shout styling should not depend (implicitely) on Morphic.' id '8558b4a5-037d-4e61-a937-0f552f86fbfb' date '10 October 2019' time '11:13:31.338276 am' author 'mt' ancestors ((name 'Kernel-mt.1274' message 'For exception handling and debugging, untangle some dependencies between System and Kernel.' id '72b966cb-5325-794c-b6a3-068303a6b153' date '9 October 2019' time '3:31:08.214803 pm' author 'mt' ancestors ((name 'Kernel-eem.1273' message 'Add a method that documents the postRecompileAction convention for rebuilding state affected by a Compiler recompileAll.' id '50bfe346-15d7-4aa9-ba69-0c21d3d8d011' date '8 October 2019' time '12:59:35.689325 pm' author 'eem' ancestors ((name 'Kernel-mt.1272' message 'Complements System-mt.1112, which fixes and clean-up in the debugger infrastructure.' id '8fe3f896-0806-fe46-8e86-68f3c0f98d4d' date '7 October 2019' time '10:09:56.205231 am' author 'mt' ancestors ((name 'Kernel-ul.1271' message '- merged' id '8f26ad4e-1b27-4fe5-ba97-9bc7ef4d0129' date '2 October 2019' time '3:32:00.996571 pm' author 'ul' ancestors ((name 'Kernel-ul.1270' message 'Context and InstructionStream:- moved Debugger specific extension methods to Tools- recategorized a few methods' id 'a05d4cc6-2b21-4ae3-90ad-68d18accd34f' date '1 October 2019' time '12:57:10.938369 pm' author 'ul' ancestors ((name 'Kernel-mt.1269' message 'Refactoring of process debugging. Complements System-mt.1093' id '8b2f93e4-d36e-6c45-a14a-610ba97a0e48' date '17 September 2019' time '12:12:57.588406 pm' author 'mt' ancestors ((name 'Kernel-mt.1268' message 'Complements EToys-mt.354.' id '34e022b5-cd85-4041-96d0-080a3df4e866' date '17 September 2019' time '9:20:01.151406 am' author 'mt' ancestors ((name 'Kernel-mt.1267' message 'Complements Tools-mt.891' id '3d51a264-aa01-b34b-8fa8-5b2335f0dc80' date '17 September 2019' time '9:14:10.326406 am' author 'mt' ancestors ((name 'Kernel-nice.1266' message 'Fix (SmallInteger minVal - 1) asFloatI broke it in Kernel-nice.1262that''s because super asFloat may honour the sign (in Spur64) while it previously didn''t...' id 'e5f038ab-ab36-406b-a5c2-1f9ba944ca45' date '12 September 2019' time '12:25:39.591643 am' author 'nice' ancestors ((name 'Kernel-eem.1265' message 'Fix a regression in COmpiledMethod>>messagesSequence caused by the method not having been correctly commented in the first place.' id '69e1a0f1-43f5-435e-999d-b8e81b52401a' date '5 September 2019' time '9:44:47.807982 am' author 'eem' ancestors ((name 'Kernel-mt.1264' message 'On class rename, use notification instead of dialog. Tools can then turn that notification into a dialog if needed.' id '212cd650-56f2-db43-b4ef-0a38d80dfbd7' date '5 September 2019' time '10:28:08.130081 am' author 'mt' ancestors ((name 'Kernel-ul.1263' message '- restore Object >> #perform:with:with:with:with:with: , which was accidentally removed by Kernel-nice.1261' id '06ff84ab-3ba9-40f8-90f7-9fcdcca39692' date '29 August 2019' time '2:23:08.696311 pm' author 'ul' ancestors ((name 'Kernel-nice.1262' message 'Accelerate LargeInteger asFloat in 64bits images.' id '3e167d35-e96e-7649-8324-28d9cb255a65' date '29 August 2019' time '12:28:31.665288 pm' author 'nice' ancestors ((name 'Kernel-nice.1261' message 'Oups, I forgot to fix Float negativeInfinity < 0 when arithmetic primitives are configured to refuse to convert a SmallInteger asFloat...' id 'b8758656-d1f0-49cd-976c-cbd7d772b1f3' date '28 August 2019' time '11:00:52.985296 pm' author 'nice' ancestors ((name 'Kernel-nice.1260' message 'Provision for the case when we disallow mixed SmallInteger/Float arithmetic/comparison in primitives.Since (rcvr positive) is implemented as self >= 0 (in Number), it would trigger another Float>=SmallInteger comparison, that will primitiveFail, trigger another adaptToFloat:andCompare: etc... (infinite loop)There are other possible solutions like defining Float>>positive, but it sounds more reasonable to be very careful in this method which specifically handle primitive failure, rather than delegating such care.' id 'f05b8d6f-4211-c84b-89b5-fec01139f4f8' date '28 August 2019' time '6:50:57.499373 pm' author 'nice' ancestors ((name 'Kernel-nice.1259' message 'Accelerate mixed Integer/Fraction comparison.Implementation note: we can assume that Fraction are properly reduced, failing to do so is programmer responsibility.If someone cheat by using numerator:denominator: instead of / to avoid a costly gcd:, then someone will care to not get caught.' id 'fcd050cd-0337-8f4c-a1c3-b04d0eef3b0a' date '20 August 2019' time '10:58:50.044539 am' author 'nice' ancestors ((name 'Kernel-nice.1258' message 'Minor tweak: if log2 is exact, then can log: 4, 8, 16, 32 too' id 'a05ee2dc-141d-f54b-8c76-9d4dc6b3c7ee' date '20 August 2019' time '10:02:55.377539 am' author 'nice' ancestors ((name 'Kernel-mt.1257' message 'Merges Kernel-ct.1256. Note that there is also the Pragma class, which offers a querying interface for pragmas.' id 'afbd54a7-0b4b-c945-a20d-a640d001d4e6' date '14 August 2019' time '5:11:58.166512 pm' author 'mt' ancestors ((name 'Kernel-mt.1256' message 'Speed up #isDeprecated check to speed up browsing tools. Thanks to Levente to the hints!' id 'd8d2cfa5-57d9-b24e-8173-811646541d8a' date '14 August 2019' time '11:47:08.245475 am' author 'mt' ancestors ((name 'Kernel-mt.1255' message 'Speed up deprecation check on classes.' id '61b26bb3-722e-9140-8302-5ef97eb9563e' date '13 August 2019' time '9:51:39.168167 am' author 'mt' ancestors ((name 'Kernel-mt.1254' message 'Adds a way to check deprecation state of code artifacts.' id '196964fd-3ccf-a948-a547-59988b7fb079' date '4 August 2019' time '4:24:58.883226 pm' author 'mt' ancestors ((name 'Kernel-mt.1253' message 'Let models configure the styler based on the particular view (or morph or widget).This is related to merging ToolBuilder-Morphic-ct.228.' id '38317323-3403-404c-88d2-20ce552e20ec' date '4 August 2019' time '11:28:20.673314 am' author 'mt' ancestors ((name 'Kernel-mt.1252' message 'Refines #on:ensure: interface to match the #on:do: variants. Removes #onInterruptEnsure: because there is already #ifCurtailed:.See http://forum.world.st/The-Inbox-Kernel-ct-1251-mcz-td5101789.html' id '0d3ac99f-5fbf-1a43-bc96-9d908d7c7a4c' date '4 August 2019' time '11:04:15.141314 am' author 'mt' ancestors ((name 'Kernel-ct.1251' message 'Convenience methods for exception handling' id '86bd73cc-a91c-3644-82f4-3efa8777333d' date '30 July 2019' time '6:43:00.244625 pm' author 'ct' ancestors ((name 'Kernel-mt.1250' message 'Speeds up deletion of class variables or shared pools.' id '00753086-db4b-4706-bde7-c6d5ea190c04' date '24 July 2019' time '11:44:15.067109 am' author 'mt' ancestors ((name 'Kernel-mt.1249' message 'Uses special-literal check from Compiler-mt.405 to speed up #hasLiteral:.' id '5eb63b7e-5e78-45cf-a338-98326b5f26a4' date '24 July 2019' time '11:17:56.945109 am' author 'mt' ancestors ((name 'Kernel-fn.1248' message 'Remove redundant methods for copying from SmallFloat64 and SmallInteger (following Chris'' suggestion at http://forum.world.st/The-Trunk-Kernel-fn-1223-mcz-tp5098738p5098777.html).' id '47f4c2b8-f623-4973-bcb3-655d27fbc0dc' date '24 July 2019' time '9:22:31.501089 am' author 'fn' ancestors ((name 'Kernel-ul.1247' message '- merged' id 'db780ecc-7e96-40e2-9f16-286a2857f3e7' date '21 July 2019' time '6:31:22.329915 pm' author 'ul' ancestors ((name 'Kernel-dtl.1246' message 'Characters and small floats are immediate objects in Spur and should not implement #nextObject.' id '0ac79852-6ed3-48c8-8b6e-d76b28bdbf18' date '18 July 2019' time '8:07:43.108638 pm' author 'dtl' ancestors ((name 'Kernel-mt.1245' message 'Refactoring of #literalsDo: - Step 3 of 3. For more information, see http://forum.world.st/Please-Review-Refactoring-for-literalsDo-etc-tp5099756p5100896.html.' id '2ce0ef20-a760-4d4a-b6bd-c4383a6efd4d' date '12 July 2019' time '10:02:20.401568 am' author 'mt' ancestors ((name 'Kernel-mt.1244' message 'Refactoring of #literalsDo: - Step 2 of 3. For more information, see http://forum.world.st/Please-Review-Refactoring-for-literalsDo-etc-tp5099756p5100896.html.' id 'd585f898-09cc-094b-98ed-a74204c82019' date '12 July 2019' time '9:59:41.866568 am' author 'mt' ancestors ((name 'Kernel-mt.1243' message 'Refactoring of #literalsDo: - Step 1 of 3. For more information, see http://forum.world.st/Please-Review-Refactoring-for-literalsDo-etc-tp5099756p5100896.html.' id '741f1855-ce1a-4d48-b741-9eeed6a4d7a0' date '12 July 2019' time '9:56:47.949568 am' author 'mt' ancestors ((name 'Kernel-eem.1242' message 'Fix Context>>#privRefresh: for full blocks.  This bug manifests as the debugger crashing if one restarts a (full) block with any signficant complexity.Update interpretNext2ByteSistaV1Instruction:for:extA:extB:startPC: with the callMappedInlinedPrimitive: Sista bytecode.' id 'b6c4c45a-1a4d-477d-920d-82814551c862' date '25 June 2019' time '5:14:28.553444 pm' author 'eem' ancestors ((name 'Kernel-ul.1241' message '- added missing Object >> #perform:with:with:with:with:with: based on primitive 83- added missing implementation of #value:value:value:value:value: based on primitives 205, 207 and 83- MessageSend >> #value:value:value:value: uses #perform:with:with:with:with:' id '630a46a4-296a-4e1c-9976-535b317e9d8c' date '19 June 2019' time '4:35:56.986493 pm' author 'ul' ancestors ((name 'Kernel-mt.1240' message 'Extends commentary to point to #cull:.' id 'dd6c5483-af4c-7f4c-b7cf-05fcf73a3c47' date '7 June 2019' time '9:12:01.366409 am' author 'mt' ancestors ((name 'Kernel-mt.1239' message 'Merge cmfcmf.1216' id 'c1b1ed0f-6055-e543-a389-510fea993ddb' date '31 May 2019' time '11:49:05.536936 am' author 'mt' ancestors ((name 'Kernel-cmm.1238' message '- Moved several methods belonging to Chronology to that package.' id 'e3efa7f8-adc8-434c-a1d2-7efeda6d0fca' date '25 May 2019' time '5:30:44.220675 pm' author 'cmm' ancestors ((name 'Kernel-nice.1237' message 'Fix sqrtRem in 32bits Squeak.Since SmallInteger maxVal + 1 has only 4 bytes, self highBit bitShift: -5 may equal 0: we split in a single whole part and engage into an infinite loop.' id '11d57971-88b6-4078-8ac6-91ba023d2ba6' date '23 May 2019' time '9:17:06.927326 pm' author 'nice' ancestors ((name 'Kernel-nice.1236' message 'Merge' id '98f1507c-0679-40f5-ab22-0e31fcbd06bf' date '23 May 2019' time '9:12:36.181413 pm' author 'nice' ancestors ((name 'Kernel-mt.1235' message 'Replace the few sends to #valueWithPossibleArgument: with #cull: because there is no need to expect blocks with more than one argument to be filled with nils.' id '2ca86cdb-5328-3a44-aac6-346c8d44d2ca' date '21 May 2019' time '10:48:13.016822 am' author 'mt' ancestors ((name 'Kernel-nice.1234' message 'Introduce settable parameters for tuning the Large Integer arithmetic thresholds.Use these parameters in the accelerated arithmetic.For Burnikel Ziegler, ensure at least two recursions by using twice the threshold of digitDiv21: before engaging a digitDivSplit: - this somehow mitigates the overhead cost of digitDivSplit:' id '3c271006-81c5-49e7-8131-b65c154b009f' date '14 May 2019' time '12:40:59.140364 am' author 'nice' ancestors ((name 'Kernel-nice.1233' message 'Oups fix creeping of sqrt2, it was only for bench purpose.Sorry for multiple commits.I rely too much on (alt shift i) to ignore methods, but sometimes I miss one.It would be cool to have a way to hide the ignored methods before committing.' id '8ba1a42b-88c8-1641-8a1a-bea810163ec2' date '13 May 2019' time '6:32:30.507955 pm' author 'nice' ancestors ((name 'Kernel-nice.1232' message 'Make sure that LargePositiveInteger sqrt are always correctly rounded to nearest Float if inexact.Note that I accidentally introduced a rounding bug in LargePositiveInteger sqrt which was not in original Integer>>#sqrt:(self bitAnd: 1) should have been (integerResult bitAnd: 1).Apologizes.But this formulation was subject to double-rounding error anyway (asFloat did perform a second rounding, which may lead to incorrect rounding), so that did not really matter...Concerning performance, here are the bench results, after correcting the original version (I send twice self asFloat, which was a slip, and the original did not test mightBeASquare either when self asFloat = Float infinity)- When (self mighBeASquare), new code is equivalent, and becomes more performant for huge values  This is due to sqrtRem which avoids evaluating a #squared for no additional price   Note that 7 large ints out of 256 mightBeASquare- else it depends on bit range, new code is :	* as performant in range (SmallInteger maxVal highBit + 1 to: Float precision * 2)	  that''s the case of vast majority of large int in a "normal" image	* less performant in range (Float precision * 2 + 1 to: Float emax) by 3x to 5x	  that''s because asFloat sqrt is cheaper than sqrtRem	* more performant in range (Float emax + 1 to: infinity) by large	  this is due to evaluating sqrtFloor on a much smaller LargePositiveInteger	  (but this trick could have been added in inexact-rounding variant too)So the exact rounding:- does not require additional code (both are equivalent)- does not cost any performance penalty in most common cases (small LargePositiveInteger); the penalty is only in medium range (107 to 1023 bits).In a word, it''s worth.' id '880030b9-91d0-244b-9198-b7b6f9454584' date '13 May 2019' time '5:43:37.253569 pm' author 'nice' ancestors ((name 'Kernel-nice.1231' message 'Oups, I forgot one germane Float sqrt edge case - sorry to double commit.-0.0 sqrt should answer -0.0 (don''t ask why, read the standard...)I already corrected original code for inf,nan,gradual underflow (very inaccurate), and incorrectly rounded for a few ETA-floats (ETA is 10^18).I have maybe 20 copies of this fallback code in my change log, and I still missed one case!Note entirely my fault, that''s one of the 4 original lines of code that I did not change...' id 'fdae6969-331b-4fa3-83b9-4cadb4d84290' date '12 May 2019' time '10:58:37.936831 pm' author 'nice' ancestors ((name 'Kernel-nice.1230' message 'Name: Kernel-nice.1230Author: niceTime: 12 May 2019, 2:13:29.878804 amUUID: 56e8a3d6-3899-47b1-b828-cf0525f7dec3Ancestors: Kernel-nice.1229Revamp sqrt1) move falback code for missing primitive 55 or 555 in Float and invoke super if primitive fails2) handle inf and Nan in this fallback code3) scale to avoid dramatic loss of precision of original Newton-Raphson loop in case of gradual underflow4) round the result correctly as mandated by IEEE-754 standard.Since Newton-Raphson converges quadratically, it''s at most one more iteration than before, plus a somehow germane adjustment...Don''t be spare of comments - I re-invented the wheel and this is documented nowhere else. There are many other ways to evaluate a correctly rounded sqrt, but they are all tricky.Another way would be to rely on LargePositiveInteger sqrtFloor, but it won''t be possible anymore, because SmallInteger sqrtFloor will now depend onFloat sqrt, and LargePositiveInteger depends on SmallInteger sqrtFloor (by virtue of divide and conquer)  - see below.5) move sqrt, sqrtFloor and sqrtRem implementation in Integer subclasses, so that each one takes its own responsibilities which are not exactly the same...6) Accelerate SmallInteger sqrtFloor by invoking Float sqrt (the case of absent primitives apart)Provide long explanation telling how it works in 64bits image despite inexact asFloat7) Accelerate SmallInteger sqrt by not testing the isFinite etc...Provide long explanation why sqrt truncated works in 64bits image despite inexact asFloatNote that 6) and 7) are dead simple versus former super version, only the comment is not...8) Accelerate LargePositiveInteger sqrtRem and sqrtFloor by removing the harcoded threshold: divide & conquer was faster than Newton-Raphson unconditionnally and asFloat truncated is not a viable option for Large9) remove sqrtFloorNewtonRaphson now that neither Small nor Large integers use it. It''s a heartbreaking change, I had super-optimized it along the years...Note: I could have kept a Newton-Raphson for large, accelerated by seeding the first guess with asFloat sqrt truncated.Up to 106 bits, the single correction of SmallInteger>>sqrtFloor might also work.10) move the handling of Float overlow/accuracy in LargePositiveInteger sqrt where they belong. It''s not about speed-up, it''s about putting things at their place.11) Speed up SmallInteger isAnExactFloat.It''s not sqrt related, but I first thought using it before engaging asFloat sqrt truncated, that''s the reason why you find it hereCongratulations, you reached the end of this commit message!' id 'c5ccb933-92e3-4969-9bb4-05b6794c16bf' date '12 May 2019' time '9:52:59.138604 pm' author 'nice' ancestors ((name 'Kernel-nice.1229' message 'Fix (0 bitShift: 100) is not normalized    (0 bitShift: 100) class = LargePositiveInteger.Why is it not normalized?First, primitiveBitShift (17) fails because shift is longer than SmallInteger bit length (maybe it should not?), then bitShiftMagnitude: (primDigitBitShiftMagnitude:) does not normalize a left shift result, assuming that primitive 17 already did the trivial work if result were a SmallInteger.Why is normalization important?because non normalized Integers do not behave like SmallInteger and can cause all sort of undefined behavior (I had an infinite loop because of that)How to fix?just handle the case in primitive fallback codeWhile at it:Do not use bitShiftMagnitude: when we do not need to (case of left shift are equivalent to bitShift:), because playing with not normalized results may lead to undefined behavior.' id '4836a3a9-d962-4d8f-9180-5285b8e7c96a' date '9 May 2019' time '9:10:10.673329 am' author 'nice' ancestors ((name 'Kernel-cmm.1228' message 'Allow identification of instances of Boolean via #isBoolean.' id '2fad2a41-3aec-4e22-b9e8-cce50f7f6808' date '7 May 2019' time '6:36:01.955169 pm' author 'cmm' ancestors ((name 'Kernel-nice.1227' message 'Merge: Kernel-nice.1226, Kernel-nice.1216(durationToRun)' id '2ae4c2a9-6e23-4f1b-90d3-6251a4766ba0' date '6 May 2019' time '9:16:48.105337 am' author 'nice' ancestors ((name 'Kernel-nice.1226' message 'Fix un-intentional leak of ternaryBinaryExponentationOf: This is an experiment not ready for consumption.Sorry for the extra commit.' id 'b48136e7-9c94-45b5-b5f9-b2d73396097a' date '5 May 2019' time '10:12:56.491163 am' author 'nice' ancestors ((name 'Kernel-nice.1225' message 'Fix nthRootRounded:How does it work?To have short notation, say we have the truncated nth root x of y such that:x^n <= y(x+1)^n > yThe true root r is somewhere in betweenr^n = yx <= r < x+1But is r closer to x or x+1?Let''s just check the mid point (x+0.5)^n(x+0.5)^n < y ==> (x+0.5 < r) we must answer x+1(x+0.5)^n > y ==> (r < x+0.5) we must answer x(x+0.5)^n = y is impossible, the left member of inequality is an irreducible Fraction (odd numerator, even denominator), the right member is an Integer.We eliminate the Fraction denominator to stick with Integer arithmetic and test:(x*2+1)^n < (y << n)It seems like ancient code was testing(x^n + (x+1)^n)/2 < yGasp, did I write this?' id '02906432-5829-436e-92de-4f1fd552397c' date '4 May 2019' time '11:50:07.297369 pm' author 'nice' ancestors ((name 'Kernel-nice.1224' message 'Refactor the fast LargeInteger operationsRename:- fastMultiply: -> multiplyByInteger:Rationale: it''s not necessarily fast but it''s specifically for the case when we know that argument is an Integer.Ensure symetry between * and /- digitDiv:neg: -> divideByInteger:- primDigitDiv:neg -> digitDiv:neg: (revert previous rename)Rename- karatsubaTimes: tooms3Times: -> digitMul22: digitMul33:Rationale: it ensures symetry with digitDiv21: and digitDiv32:Rename similarly- squaredKaratsuba squaredToom3 squaredToom4 -> squaredByHalf squaredByThird squaredByFourthIntroduce digitMul23: for marginal improvment in case of partially well balancedRemove the send of Inteval>>digitShiftSum:Replace with #digitMulSplit: which is an optimized version in O(N) rather than O(N*log2 N)- see belowRename- recursiveDigitDiv: -> digitDivSplit: since it plays somehow a similar role than that of digitMulSplit: (decompose in digitDiv21: operations)Use a O(N) recomposition of quotientReduce the cost of divide and conquer reconstruction phase by using (with great care) inplaceAddNonOverlapping:digitShiftBy: when possible.Rationale: the cost is non completely dominated by non linear O(N^x), partly due to repeated #+ and #digitShift: which allocate, copy, allocate, copy, allocate, copy like Shlemiel.We now have this sequence:1) * / call primitive of SmallInteger or (optional) 64 bits LargeInteger 2) if fail, super * will handle coercion or call multiplyByInteger: divideByInteger:3) multiplyByInteger: and divideByInteger: will dispatch to appropriate method based on heuristics on operands length3.a) schoolbook digitMultiply:neg: digitDiv:neg: which call (optional) LargeInteger primitives or revert to slow 1-byte-limb fallback code3.b) digitMultiplySplit: if not well balanced operands / recursiveDigitDiv: for about the same purpose3.c) digitMul22: digitMul23: digitMul33: digitDiv21: digitDiv32:Accelerate a bit the nthRoot: by providing a better (divide and conquer) initial guess a bit like sqrtRem algorithm.While at it, use raisedToInteger: instead of raisedTo:Since this small refactoring makes two tests fail (bad tests IMO), provide an assertion of pre-condition (the argument is a strictly positive integer)' id 'cf1a5ae4-ac18-47aa-880c-db91874842cb' date '3 May 2019' time '10:43:02.707788 pm' author 'nice' ancestors ((name 'Kernel-fn.1223' message 'SmallInteger and SmallFloat64 shouldNotImplement postCopy.' id '910aa151-72fe-4f6c-9645-fa735fb17f63' date '29 April 2019' time '12:52:13.424813 pm' author 'fn' ancestors ((name 'Kernel-nice.1222' message 'Make fastMultiply: the default for multiplying integersThe scheme is:- first try 64bit imul (primitive 29) if receiver is Large, or (primitive 9) if receiver is Small.- then check for operand type in super *, use fastMultiply: if Integer- then check receiver length and invoke O(N^2) schoolbook multiply if too small ( invoke LargeIntegers primitive thru digitMultiply:neg: )- then check operand byte length- then dispatch to Karatsuba or Toom3 (or future enhancements)For medium integers (>64 bits) that''s only 1 indirection more than previous implementation, so a very small (negligible) penalty.For larger integers (a few thousand bits) that''s a win.Note that the length threshold heuristics may vary from one platform to another, one VM to another, and wether images are 32 or 64 bits...We could make them class var, and offer some initialize method so as to automatically tune them.' id 'e697844c-d6bd-4781-a572-553f79c98644' date '28 April 2019' time '3:55:49.124486 pm' author 'nice' ancestors ((name 'Kernel-nice.1221' message 'Fix broken pre-condition a3>=b/4 in sqrtRem.While at it, care to explain.' id '4aeee53e-f320-4ece-bf93-a5458f65bef3' date '28 April 2019' time '2:31:07.899491 am' author 'nice' ancestors ((name 'Kernel-nice.1220' message 'Accelerate some huge Integer arithmetic(This is a squash of inbox commits)These algorithms use divide and conquer strategy that recursively split a problem into simpler problems.1) Multiplication and Squaring - Implement Karatsuba and 3-way Toom-Cook algorithms for fast large integer multiplication (a Bodrato Zanoni variant) - Implement the 2-way asymetrical Karatsuba, 3-way symetrical, and 4-way asymetrical Toom-Cook squaring variant of Chung-Hasan. Note that asymetrical squareToom4 over-performs the symetrical squaredToom3 even for medium size (800 bytes).- provide a fastMultiply: that dispatch on appropriate variant based on heuristics. Currently this fast multiplication is used only in LargePositiveInteger>>squared, and other algorithme below.- slightly modify raisedToInteger: to use that squared.This result in a small penalty for small number exponentation, but large speed up for big integers.2) Square-root- implement the Karatsuba-like square root algorithm from Paul Zimmerman.3) Division- Implement the recursive fast division of Burnikel-Ziegler for large integers and connect it to digitDiv:neg: when operands are large enough.- Use this recursive algorithm to accelerate digitDiv:neg:This is not the fastest known division which is a composition of Barrett and Newton-Raphson inversion - but is easy to implement and should have similar performances for at least a few thousand bytes long integers - see for example http://bioinfo.ict.ac.cn/~dbu/AlgorithmCourses/Lectures/Lec5-Fast-Division-Hasselstrom2003.pdf 4) Printing- Use digitDiv:neg: in large integer printString so as to obtain the quotient (head) and remainder (tail) in a single operation. Together with divide and conquer division, this results in a factor of about 4x for 50000 factorial printString.Examples on a 64 bits image/VM (MBP 2015 i5 2.7GHz)[10 raisedToInteger: 30] bench. ''3,770,000 per second. 265 nanoseconds per run.'' - before ''3,500,000 per second. 286 nanoseconds per run.'' - after[10.0 raisedToInteger: 30] bench. ''10,900,000 per second. 91.6 nanoseconds per run.'' - before ''9,540,000 per second. 105 nanoseconds per run.'' - after| x |x := 100 factorial.[x raisedToInteger: 30] bench. ''15,900 per second. 63 microseconds per run.'' - before ''19,500 per second. 51.3 microseconds per run.'' - after| x |x := 1000 factorial.[x raisedToInteger: 30] bench. ''58.8 per second. 17 milliseconds per run.'' - before ''179 per second. 5.6 milliseconds per run.'' - after| x |x := 500 factorial - 100 factorial.{[x sqrtFloor] bench.[x sqrtFloorNewtonRaphson] bench.} #(	''42,300 per second. 23.6 microseconds per run.''	''8,240 per second. 121 microseconds per run.'')	| x |x := 50000 factorial - 10000 factorial + 5000 factorial - 1000 factorial + 500 factorial - 100 factorial + 50 factorial - 10 factorial + 5 factorial - 1.{	[x printString] bench.} #(''1.29 per second. 778 milliseconds per run.'') - before #(''5.12 per second. 195 milliseconds per run.'') - after' id 'b2eb6e2e-1dfa-4d23-9421-ec0e5e8d4f86' date '27 April 2019' time '2:36:07.52994 pm' author 'nice' ancestors ((name 'Kernel-fn.1216' message 'Make SmallInteger''s method overrides for copying consistent with those of SmallFloat64.' id '4af5e126-9387-41b6-bd41-a6c526f0bd8a' date '27 April 2019' time '11:08:43.467561 am' author 'fn' ancestors ((name 'Kernel-eem.1215' message 'Add CompiledMethod>>pragmasAt: for convenient access to multiple pragmas of the same pragma selector.' id '9fa7a504-70d6-45ae-9514-d905578da5af' date '16 March 2019' time '12:38:28.555296 pm' author 'eem' ancestors ((name 'Kernel-eem.1214' message 'Use the Spur inst avr access primitives in FutureMaker and the mirror primitives.  Fix a couple of typos.' id '1196f254-79e9-4bb1-b1af-3c413abe2fd4' date '22 February 2019' time '4:30:01.615182 pm' author 'eem' ancestors ((name 'Kernel-nice.1213' message 'Provide a logarithm in base 2: log2.This (x log2) has an additional property that (x log: 2) has not: it is exact for exact powers of 2.While implementing LogarithmicInterval, I recently wanted to use log: 2, and this was getting as bad as in Python. See https://stackoverflow.com/questions/931995/inaccurate-logarithm-in-python/54537441#54537441I don''t know if this feature is really worth it, but whether it ends up integrated or not, at least it demonstrates how easy it is to patch Squeak.' id 'd7a472c9-49dd-4b1d-b73a-13b9c7c8d4c5' date '8 February 2019' time '11:24:45.054968 pm' author 'nice' ancestors ((name 'Kernel-tonyg.1212' message 'Improve promise resolution error handling via #fulfillWith:.' id '03bd0e4c-76d2-4be6-a7e1-58414c7fab52' date '30 January 2019' time '5:20:04.609071 pm' author 'tonyg' ancestors ((name 'Kernel-mt.1211' message '1) Restart timer-interrupt watcher process during system-wide clean-up.2) Extract idle-process into own method because that''s what we usually do: EventSensor (interrupt watcher), EventSensor (event tickler), WeakArray (finalization), etc.' id '2bc71a1e-02c1-824a-ae49-4db30171e2f9' date '22 January 2019' time '1:51:49.258809 pm' author 'mt' ancestors ((name 'Kernel-eem.1210' message 'Have printInstructionsOn: (but not printInstructionsOn:do:, which is used by the explorer) print nested full blocks indented inline, for compatibility with the behavior for embedded blocks.' id 'd4fc9cd7-ac05-442d-bfe6-8b29ee965a98' date '4 January 2019' time '4:38:17.37951 pm' author 'eem' ancestors ((name 'Kernel-eem.1209' message 'Provide a method that answers the nested block methods in a method compiled with full blocks.  This is somewhat similar to embeddedBlockClosures, but answers the CompiledBlock methods, not representative closures around them, and does not require interpreting code, merely recursively traversing CompiledCode literals.' id '5524e880-035b-4429-a52f-72f66eb53756' date '2 January 2019' time '6:30:39.793608 pm' author 'eem' ancestors ((name 'Kernel-eem.1208' message 'Fix the simulation of the three argument form of primitive 188.  The symptom is that when using Debug It the class of the method shown at the top of the open debugger is CompiledMethod class, and the actual receiver appears to inherit from it (e.g. CompiledMethod class(Process)>>terminate).  The bug was that the simulation used the receiver of the receiver:withArguments:executeMethod: method, not the receiver argument there-in.' id 'ab73a8b6-86f3-469b-a61e-cecb1017b96a' date '2 January 2019' time '6:23:10.701672 pm' author 'eem' ancestors ((name 'Kernel-eem.1207' message 'Fix a regression introduced in Kernel-eem.1205.  doPrimitive:method:receiver:args: must simulate the three argument form of primitive 188 for the system to be able to do Debug It.' id '9a61ba37-2e76-44c3-b674-64788cc1a004' date '17 December 2018' time '11:23:23.752801 am' author 'eem' ancestors ((name 'Kernel-pre.1206' message 'Adds the resolve and reject utility methods to Promise for use cases in which Promises are used as a synchronization means between computations whose side effects we are interested in. (reject was added as another utility method to keep the protocol symmetric to the resolveWith: rejectWith: protocol).' id 'f3ada3b6-9403-49d0-accc-48b9bdc364f5' date '17 December 2018' time '5:45:54.821471 pm' author 'pre' ancestors ((name 'Kernel-eem.1205' message 'For the benefit of proxies, avoid withArgs:executeMethod: in the debugger''s core primitive evaluator.' id '87be6ac9-ae74-4927-ac9d-69a076851e7b' date '11 December 2018' time '10:49:04.777479 pm' author 'eem' ancestors ((name 'Kernel-eem.1204' message 'For teh benefit of proxies avoid withArgs:executeMethod: in CompiledMethod>>valueWithReceiver:arguments:.  Have CompiledMethod class>>receiver:withArguments:executeMethod: expect the primitiv e is available in that form and fail rather than fall back on withArgs:executeMethod:.' id '6984fae9-5e2c-4093-b962-d51a825e3176' date '11 December 2018' time '10:25:21.771318 pm' author 'eem' ancestors ((name 'Kernel-nice.1203' message 'Micro-optimization: use knowledge of SmallFloat64 representation: due to restricted exponent range, they can''t be infinite nor nan (nor subnormal, but we don''t ask).Let a comment be more accurate, primitive 75 does not only fail for SmallInteger, but also for any other immediate value.' id '1fdf8772-d764-cd42-9291-fb7464d23204' date '12 December 2018' time '12:58:33.810289 am' author 'nice' ancestors ((name 'Kernel-nice.1202' message 'Merge Kernel-pre.1201 + Kernel-nice.1200' id 'f1313d70-e185-de48-a230-53fe6f67ec59' date '12 December 2018' time '12:31:18.370647 am' author 'nice' ancestors ((name 'Kernel-pre.1201' message 'Adds the classifyAllUnclassified method to ClassOrganizer. The method name remains consistent with the classify* methods of organizers. Further recategorizes some methods from accessing to classifying' id 'dab70206-4253-46e9-ae56-19ae786abf5a' date '10 December 2018' time '8:25:07.937104 pm' author 'pre' ancestors ((name 'Kernel-fn.1200' message 'Fix WeakMessageSend''s class comment.' id '4bac5539-ca56-4e57-bf97-da1450d7a168' date '10 December 2018' time '11:04:26.031004 am' author 'fn' ancestors ((name 'Kernel-eem.1199' message 'Remove a mistaken halt from the postscript of the previous commit.' id '7d8e709b-a9c9-49ad-b733-e34ce715a79c' date '24 November 2018' time '3:19:28.081135 pm' author 'eem' ancestors ((name 'Kernel-eem.1198' message 'Redefine LargePositiveInteger hash for compatibility between 32-bit and 64-bit systems.' id '100137c4-2514-4b7f-9064-3dcdfe7d8cc9' date '24 November 2018' time '1:44:47.526422 pm' author 'eem' ancestors ((name 'Kernel-eem.1197' message 'Define #= and #hash for Message such that distinct Messages with the identical selector and lookupClass, and literalEqual: arguments are equal.' id 'bf505221-c2ce-4adb-8f51-144901828649' date '20 November 2018' time '1:43:36.839917 pm' author 'eem' ancestors ((name 'Kernel-eem.1196' message 'Fix ClosureExtractor (embeddedBlockClosures) for exotic Sista blocks.' id 'd725b2e7-fe69-472d-8775-25948cabcc8c' date '20 November 2018' time '1:39:00.487858 pm' author 'eem' ancestors ((name 'Kernel-eem.1195' message 'Eliminate a confusing shadowing in Context>>send:super:numArgs:' id '4269620a-8eb7-4581-a65a-33bf2ea1aa10' date '11 November 2018' time '7:06:29.274108 pm' author 'eem' ancestors ((name 'Kernel-eem.1194' message 'ensureClassPool is /much/ nicer to use if it answers the class pool' id '6821fe5c-df17-4033-90f2-6163e6382b81' date '11 November 2018' time '3:08:37.497128 pm' author 'eem' ancestors ((name 'Kernel-eem.1193' message 'Provide changeClassTo: as a convenient way of accessing adoptInstance:, and a better replacement for the older primitiveChangeClassTo:.' id '003c6ae4-79d6-48f7-8f8a-9cc1a37690f8' date '29 October 2018' time '4:05:45.263515 pm' author 'eem' ancestors ((name 'Kernel-ul.1192' message '- improved Integer >> #isPrime''s performance- slightly faster Categorizer >> #numberOfCategoryOfElement:' id '72dfb776-3d77-4b84-9d69-d000e9a67ae1' date '24 October 2018' time '10:50:43.875546 pm' author 'ul' ancestors ((name 'Kernel-eem.1191' message 'Remove adoptInstance:''s fallback on primitiveChangeClassTo:, which obscures potential failures on Spur.  Committing to Inbox; this isn''t urgent but I want it in soon enough.' id '465e029d-66ff-492d-a465-79f2867d2d8b' date '11 October 2018' time '10:52:37.059231 pm' author 'eem' ancestors ((name 'Kernel-cmm.1190' message '- Remove unnecessary string literals from ClassBuilder>>#reservedNames.- Fix and simplify ClassBuilder>>#validateInstvars:from:forSuper:.	ClassBuilder>>#validateClassvars:from:forSuper: may benefit from a similar change.' id 'b5a78e5d-c7fe-4e5d-9673-ee6208534ae1' date '29 August 2018' time '9:20:01.027647 pm' author 'cmm' ancestors ((name 'Kernel-eem.1189' message 'and remove Object>>perform:with:with:with:with:with: which I committed in error from a VMMaker image.' id '5e417598-ae15-4ccc-ac34-d14015fc48b7' date '22 August 2018' time '3:10:02.805606 pm' author 'eem' ancestors ((name 'Kernel-eem.1188' message 'Use tuples to create the Arrays in a few places.  The bytecode is more compact as well as being quicker.' id 'ecaf5086-5596-4e43-a9f6-82207e9f99d0' date '22 August 2018' time '3:07:49.600876 pm' author 'eem' ancestors ((name 'Kernel-eem.1187' message 'Bring Process''s class comment up to date.' id '8b9949bc-5fd3-464e-a175-c37ecd43e14a' date '28 July 2018' time '12:42:56.673965 pm' author 'eem' ancestors ((name 'Kernel-eem.1186' message 'Fix Pragma printing so it is easier for the tests to filter out the added comment that identifies the method the pragma is in, added to Pragma>>printOn:.' id 'd3be6129-85ff-4018-913c-630454ce7f5c' date '27 July 2018' time '3:00:17.345945 pm' author 'eem' ancestors ((name 'Kernel-eem.1185' message 'In releaseCriticalSection: use isUnwindContext instead of the more fragile context selector == #ensure:.  Now it will handle ifCurtailed: too.  Thanks Tobias!Reformat Process>>#terminate.  It was baaad.' id '7296ad00-708d-4cef-b6bc-ceb24d897a70' date '27 July 2018' time '11:08:12.641836 am' author 'eem' ancestors ((name 'Kernel-eem.1184' message 'Now that Kernel-eem.1183 has fixed the process termination in critical: in the face of higher priority processes issue, we can go back to a simpler implementation of Semaphore>>critical:, albeit one marked with ther <criticalSection> pragma for visibility in Process>>#terminate.' id '37221c94-8415-41a5-8535-b047f59150b9' date '26 July 2018' time '9:02:17.653687 pm' author 'eem' ancestors ((name 'Kernel-eem.1183' message 'Fix the broken SemaphoreTest and MutexTest tests (test[Mutex|Semaphore][After|In]CriticalWait) by having Process>>terminate correctly release <criticalSection> marked methods.  This is done by terminate''s helper releaseCriticalSection: distinguishing between a context blocked on a blocking primitive (wait, primitiveEnterCriticalSection & primitiveTestAndSetOwnershipOfCriticalSection) and a runnable process that has been unblocked but has not advanced beyond the blocking send, presumably because it has been shut out by currently running higher priority processes.Add InstructionStream>>selectorJustSentOrSelf (c.f. selectorToSendOrSelf) to support releaseCriticalSection:.' id 'a55317a4-d742-41af-b3a3-b3198281c2d9' date '26 July 2018' time '8:57:05.046828 pm' author 'eem' ancestors ((name 'Kernel-eem.1182' message 'Add an accessor for Mutex being owned, for use in tests.' id '4d10c2e2-c1b7-4ba0-b208-b018f0f099e9' date '26 July 2018' time '8:33:34.998936 pm' author 'eem' ancestors ((name 'Kernel-eem.1181' message 'Move Context>>blockCopy: to deprecated (BlockContext is in deprecated).  This breaks Kernel''s dependency on deprecated.' id 'c1e480cd-6fb8-4810-af4b-0ac2298a044a' date '17 June 2018' time '4:48:17.581384 pm' author 'eem' ancestors ((name 'Kernel-eem.1180' message 'No need to scan the last two literals when updating in postCopy.' id '5c0c1399-ebc8-4f60-aa94-a11fe33553d7' date '16 June 2018' time '4:25:25.529049 pm' author 'eem' ancestors ((name 'Kernel-eem.1179' message 'Fix copying of methods containing full blocks.  After creating the copy, full blocks need to update their outerCode to the copy, otherwise they are left pointing at the original.Symptom: debugging a doit with full blocks, as soon as one steps into a block temp names disappear because the original gets copied with temp names, but any contained block method doesn''t update to refer to the copy holding temp names, remaining referring to the original that has no temp names.' id '6fef2fe4-bb58-4546-a532-eb7da951cc4c' date '16 June 2018' time '3:48:39.465427 pm' author 'eem' ancestors ((name 'Kernel-eem.1178' message 'More accurate & informative symbolic printing for pushFullClosure:numCopied:' id '66a0a896-ea64-4d51-8bb9-14342bad7b15' date '16 June 2018' time '2:33:01.418518 pm' author 'eem' ancestors ((name 'Kernel-ul.1177' message 'ClassDescription changes- move compilation logic from all compile* methods to #compile:environment:classified:withStamp:notifying:logSource:- added #compileSilently:environment:classified:notifying:, which let''s you specify the environment while compiling a method silently' id 'dc254e2c-2779-4559-a782-f47fbcebf69a' date '13 June 2018' time '1:03:47.457054 pm' author 'ul' ancestors ((name 'Kernel-ul.1176' message '- iterative version of Context >> #copyTo: instead of a recursive one- optimized version of Integer >> #timesRepeat:' id '70ad3394-d256-4a05-91aa-b5b2937739e3' date '4 June 2018' time '7:28:14.840591 pm' author 'ul' ancestors ((name 'Kernel-ul.1175' message 'Added ClassDescription >> #compileSilently:, the missing method of the #compileSilently:* family.' id '5b70dacb-2f1e-40df-85db-f457ee728ed4' date '1 June 2018' time '8:01:13.047217 pm' author 'ul' ancestors ((name 'Kernel-eem.1174' message 'Fix a bug in Pragma printing; immedatey after a parse but before a method is created, a pragma''s method will be nil.  Printing assumed it never would be; hence havoc was caused in the debugger when looking at parse trees.' id '08eb9e3c-2fe3-40e5-8733-4a95f8d9cd0b' date '31 May 2018' time '4:28:54.683734 pm' author 'eem' ancestors ((name 'Kernel-topa.1173' message 'SubclassResp #asBit to Boolean (All other Boolean-subclass methods are overrides anyway)For convenience, add #asNumber/#asInteger for the most common interpretation of booleans as numbers.' id '1327e5ed-7d9c-48d4-8ff9-3d6a41a4ce73' date '30 May 2018' time '4:54:31.858379 pm' author 'topa' ancestors ((name 'Kernel-mt.1172' message 'Fixes the bug where uniclasses appeared in the default environment and browser and organization.' id '814981fd-be88-c846-a898-9cef659baa2b' date '28 May 2018' time '10:47:42.97237 am' author 'mt' ancestors ((name 'Kernel-mt.1171' message 'Rename #isReference to #isCodeReference.' id 'deb4b76c-283f-764c-958d-37e8162ea996' date '25 May 2018' time '9:29:12.802382 am' author 'mt' ancestors ((name 'Kernel-mt.1170' message 'Harmonize method reference and class references.' id '722cd140-f6f2-8642-be85-61be05c77c92' date '24 May 2018' time '10:24:50.225621 am' author 'mt' ancestors ((name 'Kernel-mt.1169' message 'Reduces the use of #cmdGesturesEnabled, which is also quite Morphic-specific. In preparation of two new preferences #haloForAll and #metaMenuForAll.' id 'e5e24186-05f2-2849-adb0-b2b2572b0f79' date '18 May 2018' time '8:55:01.039917 am' author 'mt' ancestors ((name 'Kernel-nice.1168' message 'Change asApproximateFraction to allow prescribing a relative decimal precisionExample:	(FloatArray with: 1/3) first		asApproximateFractionRelativeDecimalPlaces: 6.	0.6667 asApproximateFractionRelativeDecimalPlaces: 3.	0.6667 asApproximateFractionRelativeDecimalPlaces: 5.' id 'fa008d75-249a-b243-8b1e-068eeb72a45d' date '26 April 2018' time '11:40:17.923908 am' author 'nice' ancestors ((name 'Kernel-nice.1167' message 'I shall not invoke super floorLog: with a different radix.Ouch, probably a remnant from my ancestor method floorLog10 that I generalized.' id 'fd3a4e4a-925e-1842-9c73-f7f5736dd21c' date '25 April 2018' time '11:09:01.928037 am' author 'nice' ancestors ((name 'Kernel-eem.1166' message 'Revert the previous convenience.  It isn''t.  There is a better way; see MonticelloConfigurations-eem.153.Implement FullBlockClosure>>size.  (Bizarrely BlockClosure>>sized answers the numer of bytes of bytecode in the block; I don''t think this is useful :-) )' id 'e2549724-d2f2-41f4-9582-6db17efefcf0' date '24 April 2018' time '11:25:52.062506 am' author 'eem' ancestors ((name 'Kernel-eem.1165' message 'Add a convenience to turn off showing deprecation warnings for the duration of a block.' id '281c4af1-ffb9-4616-a9ef-a6369143c7b7' date '24 April 2018' time '11:19:16.734066 am' author 'eem' ancestors ((name 'Kernel-eem.1162' message 'Fix annoying refgression with Kernel-eem.1159.  A method does not say it refers to its selector, even if thorough.' id '2cdc7b02-90a4-497a-9258-8600819fde61' date '16 March 2018' time '6:28:44.565694 pm' author 'eem' ancestors ((name 'Kernel-eem.1161' message 'Reimplement CompiledMethod>>messages[Do:] so that they function in the full blocks regime (i.e. they include messages in block methods).' id '53deb012-ffaa-41f5-a0d0-7e8ddfb4bbb1' date '14 March 2018' time '7:16:26.289237 pm' author 'eem' ancestors ((name 'Kernel-eem.1160' message 'An addition for class-side refactorings in StringHolder.  (What the hell is StringHolder doing in Kernel? :-) )' id '0a0fe6ff-b25f-435d-b991-ea7944c79aec' date '14 March 2018' time '1:18:41.442045 pm' author 'eem' ancestors ((name 'Kernel-eem.1159' message 'Provide the new multiple bytecode set aware scanning machinery in CompiledCode et al.  Have Behavior>>whichSelectorsReferTo:[thorough:] use it.' id '93f461ff-a65a-4a12-ba07-7512b7203329' date '14 March 2018' time '1:12:38.815374 pm' author 'eem' ancestors ((name 'Kernel-eem.1158' message 'Provide more efficient implementation(s) of at:ifPresent:ifAbsent: given impending use in the Compiler.' id '4bef21b3-d2da-4b76-a6e0-c9ee189d478a' date '9 March 2018' time '5:15:51.802392 pm' author 'eem' ancestors ((name 'Kernel-ul.1157' message 'Monitor changes:- Monitor is now a subclass of Mutex.- All methods implemented by Mutex have been removed from Monitor.- The ownerProcess instance variable has been removed, because Mutex has its own owner instance variable. It was not referenced from Monitor''s code.- queuesMutex is now a Mutex instead of a Semaphore.- Removed the unused mutex variable.' id 'd0cb2a27-7e25-44de-9a35-1c498e2083d1' date '5 March 2018' time '8:52:06.571627 pm' author 'ul' ancestors ((name 'Kernel-ul.1156' message 'Changed #isCompiledBlock to #isCompiledCode in some implementations of #hasLiteralSuchThat: to avoid DNUs when the literal is not an Array or a CompiledBlock (e.g. string).Improved Integer >> #isPrime''s performance in 64-bit images' id 'fd37b9ca-0eff-41f7-aa23-a46a2223d482' date '5 March 2018' time '8:39:27.154484 pm' author 'ul' ancestors ((name 'Kernel-eem.1155' message 'Improve class comments for CompiledCode, CompiledMethod, and CompiledBlock.' id '0041924e-8077-4c30-8456-45ce511eb376' date '27 February 2018' time '12:52:46.556955 pm' author 'eem' ancestors ((name 'Kernel-eem.1154' message 'Fix CompiledCode>>allLiterals for the FullBlockClosure regime.  Have CompiledBlock implement allSubLiterals for literals within a block and blocks nested within it.Have CompiledMethod>>hasLiteralSuchThat: recurse through compiled blocks to match its descent into arrays and method properties.Provide CompiledMethod>>scanForInstructionPattern: as a convenient wrapper for scanForInstructionSequence:' id 'f403de94-416e-4740-a83c-7b74e1d00810' date '27 February 2018' time '10:50:39.300209 am' author 'eem' ancestors ((name 'Kernel-ul.1153' message '-  When CroquetPlugin''s primitiveGatherEntropy is available, use it to initialize the states array of Random instances.' id '647960c4-9e41-4ad0-9190-9cac3a97f7ad' date '25 February 2018' time '1:02:44.121313 am' author 'ul' ancestors ((name 'Kernel-tonyg.1152' message 'Clear out Promise rejecters and resolvers once the promise settles - already-fired callbacks will not be needed again, and if not cleared out, hang around forever, causing problems for long-lived, reusable promises.' id '3e6a5937-c9a5-4991-b9d7-c0e023cf75e3' date '11 February 2018' time '4:07:32.778194 pm' author 'tonyg' ancestors ((name 'Kernel-tonyg.1151' message 'Update Promise >> #waitTimeoutMSecs: to stop waiting if the promise is rejected, as well as if it''s accepted.' id 'b5708007-672e-4c5e-a6b6-8cfab8dab44b' date '9 February 2018' time '12:55:51.129682 pm' author 'tonyg' ancestors ((name 'Kernel-tonyg.1150' message '(Re)introduce isPromise, and use it instead of isKindOf:.' id '6afb5455-c040-4572-a62a-b292e20856e6' date '1 February 2018' time '9:59:50.393266 am' author 'tonyg' ancestors ((name 'Kernel-tonyg.1149' message 'Add an alias for Promise>>#then:, called #>>=, echoing the monadic bind operator.Use of a binary selector allows for convenient chaining of Promises without lots of nested parentheses.For example:	(self produceSomePromise)	>>= [:v | self produceAnotherPromiseInvolving: v]	>>= [:v | self makeYetAnotherUsing: v]	instead of the more cumbersome	((self produceSomePromise)		then: [:v | self produceAnotherPromiseInvolving: v])			then: [:v | self makeYetAnotherUsing: v]Also adds #>>, again named after the analogous monadic operator, which is like #>>= but does not pass the value from the left-hand-side promise to the continuation block.' id 'ab03b520-f8a0-4aa9-87c4-9b7e9dfb0369' date '31 January 2018' time '11:45:27.771328 pm' author 'tonyg' ancestors ((name 'Kernel-tonyg.1148' message 'Brings the Promise implementation closer to Javascript/A+ promises in two ways:	* Resolving a Promise with another Promise causes them to be chained together	* Resolving or Rejecting a Promise that is not pending is a no-op, like the Firefox/Chrome/etc in-browser promise implementations.The tests have been changed in KernelTests-tonyg.331 accordingly.' id '2a675301-406b-4222-9599-84358a7cc506' date '31 January 2018' time '11:37:21.27021 pm' author 'tonyg' ancestors ((name 'Kernel-eem.1147' message 'Object>>[basic]AddInstanceVarNamed:withValue: have been moved into into EToys.  In base Squeak this is code that belongs in ClassDescription.' id '5c2fb139-37ff-4c01-8bc3-1bfab7e7decb' date '24 January 2018' time '8:45:41.289751 am' author 'eem' ancestors ((name 'Kernel-eem.1146' message 'Follow Clément''s lead and redefine CompiledCode>>#= in terms of the subclass responsibility hasSameLiteralsAs: which avoids comparing the last literal in COmpiledBlock (the outerCode pointer) which neatly eliminates infinite recursion and considers iotherwise identical blocks embedded in different methiods as being equal.' id '3ff238e6-dc26-491f-96de-a9b1520c4608' date '13 January 2018' time '7:16:52.936871 pm' author 'eem' ancestors ((name 'Kernel-eem.1145' message 'Full blokc support for decompileWithTemps' id 'f591fb75-2cc4-41e4-8d9e-f9f72219c0a6' date '12 January 2018' time '3:33:18.61074 pm' author 'eem' ancestors ((name 'Kernel-eem.1144' message 'Have the InstructionPrinter be honest about printing the pushLiteralVariable: bytecode.  It''s too confusing otherwise.' id 'df2a5bb9-ac57-44c9-8d5c-d50a8ead225a' date '12 January 2018' time '11:39:55.477887 am' author 'eem' ancestors ((name 'Kernel-eem.1143' message 'CompiledBlock>>numCopiedValues has utility' id '304608ac-b9d3-459b-813b-fd0c960a5911' date '11 January 2018' time '12:46:50.669083 pm' author 'eem' ancestors ((name 'Kernel-eem.1142' message 'Provide the full properties and pragmas protocol in CompiledBlock, deferring to outer method.  (It would be nice to prune this at some stage).' id '7a417b5f-f076-48e5-804c-cce7235fe71b' date '11 January 2018' time '10:48:34.716679 am' author 'eem' ancestors ((name 'Kernel-eem.1141' message 'Move BlockLocalTempCounter to Kernel.  It is used to implement BlockClosure>>numTemps, which is used more broadly than simply the decompiler and debugger.' id 'a64a9457-407a-40f0-8d51-111106f0afdf' date '11 January 2018' time '9:22:51.439093 am' author 'eem' ancestors ((name 'Kernel-eem.1140' message 'Move CompiledMethod>>startpcsToBlockExtents and its support machinery to Compiler; it is used both by the Decompiler and the Debugger and so belongs in Compiler, not in Tools.' id 'd361ade6-5039-4edf-9782-a6baef35212c' date '11 January 2018' time '8:44:39.290013 am' author 'eem' ancestors ((name 'Kernel-eem.1139' message 'Add CompiledBlock>>pragmaAt:.  Make the accessors that defer to the home mehtod use homeMehtod instaed of chaining through outerCode.  The stack depth is one less as a result.' id '54bd97b7-0152-4647-b109-78c294afc74e' date '10 January 2018' time '5:37:26.591853 pm' author 'eem' ancestors ((name 'Kernel-eem.1138' message 'Implement homeMethod; I find "method method" painful to write (too Bowieesque for code).Move pcPreviousTo: up to CompiledCode.Make CompiledCode>>= accept non-identical outerCode instances in the last literal (outerCode in a CompiledBlock).Simulate FullBlockClosure>>value[:*] in the Debugger.' id 'fd3ba881-0f7c-4ef3-a5a5-6b132f9d01fc' date '7 January 2018' time '8:52:41.778375 pm' author 'eem' ancestors ((name 'Kernel-eem.1137' message 'More debugger support for full blocks.' id '8c9d9333-e8cf-4801-a57d-5e23e514b11b' date '7 January 2018' time '6:53:20.492962 pm' author 'eem' ancestors ((name 'Kernel-eem.1136' message 'Make CompiledCode>>= work for CompiledBlocks and add the #== short-cut (e.g. to speed-up Dictionary lookup).Add pushFullClosure:numCopied: implementations to Context, BlockStartLocator and InstructionClient.  Tweak pushClosureCopyNumCopiedValues:numArgs:blockSize: to avoid determining numCopied from the copiedValues.' id 'd26ae358-e7c7-4838-8053-f3e868c774be' date '7 January 2018' time '5:12:13.286468 pm' author 'eem' ancestors ((name 'Kernel-eem.1135' message 'Speed up some of the scanning methods in CompiledCode by cacheing encoderClass' id '51a9a0b5-8ab9-4ada-8030-ab0dd9bedf09' date '7 January 2018' time '4:52:25.529759 pm' author 'eem' ancestors ((name 'Kernel-eem.1134' message 'More FullBlockClosure support.' id '85369d62-37bb-4b4c-a817-88a6d92097ec' date '6 January 2018' time '3:24:44.111079 pm' author 'eem' ancestors ((name 'Kernel-eem.1133' message 'Several minor refactorings for CompiledBlock.  Move CompiledMethod>>(hasBreakpoint,longPrintOn:,symbolic,symbolicLinesDo:) up to CompiledCode.  Provide CompiledBlock>>(isQuick,methodClass,primitive) to suppor tthe printing/exploring methods.Provide an instance creation method for FuillBlockClosure, shuttong off the inheritance of the one for normal closures.Provide InstructionPrinter support for the full closure creation bytecode.Modify the postscript to ensure FullBlockClosure''s identityHash/class index is 38 as expected by the VM.' id 'a8d2d18d-bbe6-4c69-91bc-5767ec8c3076' date '2 January 2018' time '5:12:57.488977 pm' author 'eem' ancestors ((name 'Kernel-tpr.1132' message 'Use new file dialog for object saving' id '819452da-5a97-40d9-8a6a-9f705d64117a' date '28 December 2017' time '1:03:32.733076 pm' author 'tpr' ancestors ((name 'Kernel-eem.1131' message 'PC mapping on loading different word size segments needs to differentiate between BlockClosure and FullBlockClosure.Fix some typos in Float>>basicAt:[put:]' id 'abc9b3f5-c437-49fd-ac81-a04779514f5b' date '15 December 2017' time '12:54:29.762591 pm' author 'eem' ancestors ((name 'Kernel-eem.1130' message 'Have Pragmas print trhe compiled methods they''re in (in comments).' id '8ed1c707-145c-4418-b5bc-4aa509bf6030' date '14 December 2017' time '11:33:46.313584 am' author 'eem' ancestors ((name 'Kernel-eem.1129' message 'storeDataOn: can use initialPC to be 64-bit and 32-bit compatible.  Necessary for saving projects.' id '862344e3-6b40-4a13-b66d-cae9fd8733e8' date '14 December 2017' time '11:30:57.320228 am' author 'eem' ancestors ((name 'Kernel-nice.1128' message 'Fix CompiledMethod appearing twice in ByteArray hierarchy' id 'f96b05ed-2a28-49f1-bbad-ef0d4b37b557' date '1 December 2017' time '9:20:34.354626 am' author 'nice' ancestors ((name 'Kernel-nice.1127' message 'Object class initializedInstance shall not bark at me.' id '90232bfa-3c54-41a3-a2cc-bb18baf40ede' date '30 November 2017' time '11:45:52.543057 pm' author 'nice' ancestors ((name 'Kernel-nice.1126' message 'Introduce Class>>isAbstract for use with initializedInstance.Abstract classes are not expected to have any initializedInstance and will answer nil instead.It is subclassResponsibility to declare if isAbstract, default is false, most classes are concrete.We do not try to be clever and scan all methods sending subclassResponsibility, because failing to fullfill some responsibility does not make a class abstract, it just makes it imperfect!Note that isAbstract may have other smart usage (maybe special presentation in the browser etc...)' id 'f617f2e1-6bc6-4db5-b53e-a6136a180c63' date '30 November 2017' time '11:19:00.113675 pm' author 'nice' ancestors ((name 'Kernel-pre.1125' message 'Adds a comment for deepCopy to make the consequences regarding object identity explicit.' id '9e2716d1-e17d-1d4e-a6db-bdab28e189c8' date '27 November 2017' time '5:13:00.494723 pm' author 'pre' ancestors ((name 'Kernel-dtl.1124' message 'UndefinedObject>>suspend was presumably implemented for debugging process scheduling issues a long time ago. It serves no useful purpose now, and is dangerous because it will hang the image if evaluated. Remove it.' id '290e3cd7-ffe5-442e-9095-0217cc0b8be3' date '18 November 2017' time '5:44:53.215977 pm' author 'dtl' ancestors ((name 'Kernel-dtl.1123' message 'Move Object>>currentEvent, Object>>currentHand, and Object>>currentWord from catagory macpal to *Morphic-Kernel.' id '5b3f0e1b-0cf5-481f-8d80-31041122d3a7' date '14 November 2017' time '9:49:38.176543 pm' author 'dtl' ancestors ((name 'Kernel-nice.1122' message 'Merge Kernel-nice.1120 and correct Fraction comment typo' id 'fa7a025a-ef0d-431c-80af-32d0a9f170b5' date '14 November 2017' time '8:40:24.173283 pm' author 'nice' ancestors ((name 'Kernel-eem.1121' message 'fix comment typo' id '98880dc0-3ab4-4b8d-90ee-c5aab215e3b4' date '14 November 2017' time '11:10:07.464042 am' author 'eem' ancestors ((name 'Kernel-eem.1120' message 'Move the abstractBytecode acessing messages up to CompiledCode from CompiledMethod and provide CompiledCode>>abstractBytecodeMessagesAndPCs for convenient and thorough analysis of short methods.' id '551316ae-8e01-489f-9a50-6d4a310f31d0' date '14 November 2017' time '11:07:30.755794 am' author 'eem' ancestors ((name 'Kernel-mt.1119' message 'Improves support for having custom compiler classes for class-side methods. No need to use #respondsTo:. Just provide default implementation of #meta*Class methods in Class. The "super" is important here because the old behavior has been to  use a custom compiler for the instance-side only.' id 'a210d4c7-b8eb-e544-a857-2b0bbade9668' date '9 November 2017' time '11:13:37.82048 am' author 'mt' ancestors ((name 'Kernel-mt.1118' message 'Adds support for having custom compiler classes for class-side methods.' id '0c6a6070-083b-b247-b9f6-d29d42064efa' date '8 November 2017' time '5:55:48.665741 pm' author 'mt' ancestors ((name 'Kernel-eem.1117' message 'Use a slightly less baroque implemetation for Context>>arguments, equivalent to Pharo''s.' id '110255e1-5b72-4d99-96bb-e5068c2f5b5b' date '7 November 2017' time '5:11:32.043344 pm' author 'eem' ancestors ((name 'Kernel-tpr.1116' message 'Untangle a mis-thought deprecation and sort out windowTitle/labelString until a thorough job might be done' id 'f921b28f-0d4a-4ed9-9a28-b5d7d6db279a' date '6 November 2017' time '10:08:58.237421 pm' author 'tpr' ancestors ((name 'Kernel-tpr.1115' message 'Changes as part of promoting #buildWindowWith* to Model' id '5ca44325-d17b-4169-a4bc-801f91348851' date '28 October 2017' time '11:06:07.532891 am' author 'tpr' ancestors ((name 'Kernel-cmm.1114' message 'Revert cmm.1113 due to objections.' id '0bc56c90-144a-401c-915c-c68060661f03' date '1 September 2017' time '12:24:33.854299 pm' author 'cmm' ancestors ((name 'Kernel-cmm.1113' message 'Provide #pinned: so clients don''t have to write duplicate code (e.g., "myCondition ifTrue: [myObject pin] ifFalse: [myObject unpin]") while allowing frameworks to hook #pinned: if necessary (without overriding a primitive).' id '05c89229-0279-4842-b0d0-dacb2713a4b6' date '31 August 2017' time '1:55:06.158647 pm' author 'cmm' ancestors ((name 'Kernel-tbn.1112' message 'Cleanup pinning protocols
 - isPinned    moves from "system primitive" to "pinning" - pin            moves from "system primitive" to "pinning" - unpin        moves from "system primitive" to "pinning" - setPinned: moves from "system primitive" to "private" (as this should not be part of the public API, people should use pin/unpin methods)

(similar to https://github.com/pharo-project/pharo/pull/224 for Pharo)' id 'a4399bb0-13e7-7a4f-a0a1-d78bfbd3012e' date '30 August 2017' time '11:21:46.282311 pm' author 'tbn' ancestors ((name 'Kernel-nice.1111' message 'Avoid costly and useless LargeInteger arithmetics when evaluating:(2009/2000) raisedTo: (3958333/100000)These large integer operations were helping to find the nearest Float approximation to the #nthRoot: but1) they do not scale when the radical increases,2) we then spoil the accuracy by raising the root to an Integer power naively and inacurately.Instead, if the result is inexact, fall back to a ln/exp formulation which is a few ulp off but at least fast.' id '280f8152-036b-48e1-b3f3-038fa2611ea7' date '14 August 2017' time '12:02:46.695166 am' author 'nice' ancestors ((name 'Kernel-tpr.1110' message 'Correct an ancient underscore assignment' id 'f7a1538d-4c10-4b42-9ec7-325d0ac94c8d' date '7 August 2017' time '4:38:16.198536 pm' author 'tpr' ancestors ((name 'Kernel-nice.1109' message 'Define gcd: and lcm: for Fraction.For example, 1/5 and 1/7 are both whole multiple of 1/35 (which is their gcd).' id '1496608c-48fd-4bb2-b572-46e8b61421a9' date '23 July 2017' time '2:42:14.918543 pm' author 'nice' ancestors ((name 'Kernel-eem.1108' message 'Implement messagesDo: using ifAbsentAdd:' id 'dd3439ca-404b-4d0d-bb11-529ed86a96eb' date '23 June 2017' time '11:35:28.572002 am' author 'eem' ancestors ((name 'Kernel-nice.1107' message 'Correct digitLength for negative SmallIntegerThe length was overestimated for some numbers, for example	self assert: -16rFF01 digitLength = 2.With old code it would answer 3.Indeed, the binary representation is 16r...FFFFFF00FFAfter shifting once, we got 16r....FFFFFF00, that is -256 and we shifted yet another time.digitLength works on magnitude (like LargeInteger) so we have to take absolute value, but care of SmallInteger minVal abs which is a LargePositiveInteger with same trick as digitAt:' id '597f9f85-fe7b-430a-8ba2-1dd548dc246f' date '2 June 2017' time '12:13:19.450751 am' author 'nice' ancestors ((name 'Kernel-eem.1106' message 'Several small fixes harvested from Terf.Comment behavior>>startUp:.Make sure that missing method chunks are still output as chunks.Fix EventSensor>>flushNonKbdEvents to do just that and not flush key changes.Provide an accessor for Float''s Sqrt2 class var.Guard against setting the comment of a metaclass.Fix the comments of the 64-bit mixed integer primitives.Nuke an unused variable in highestPriority: and guard against a possible bounds violation.Fix the comment in SmallInteger>>bitAnd:.' id '50900779-04ef-43b2-8b95-6db258fbc8fe' date '26 May 2017' time '10:46:24.565361 pm' author 'eem' ancestors ((name 'Kernel-pre.1105' message 'Removes a redundancy in CompiledCode.' id '7e22498c-7586-584c-a2a9-81331c572590' date '19 May 2017' time '2:22:29.00196 pm' author 'pre' ancestors ((name 'Kernel-pre.1104' message 'Adds the convenience selector ** for raisedTo: as it is a commonly used symbol for the operation.' id 'b4db43d8-acde-e541-a083-33fde856f75d' date '19 May 2017' time '2:00:41.648273 pm' author 'pre' ancestors ((name 'Kernel-nice.1103' message 'MergeKernel-eem.1102:	Delete obsolete binding and block machinery now unused by the Compiler.Kernel-nice.1102:	Nuke pre-v3 closureCopy:copiedValues: method. No such message has been sent for a long long time.Simplify the BlockStartLocator, because there is no need to handle pre-v3 closure anymore.' id 'a912e534-9ced-4538-9f16-cba0c76fbc28' date '5 May 2017' time '10:24:07.170429 pm' author 'nice' ancestors ((name 'Kernel-eem.1102' message 'Delete obsolete binding and block machinery now unused by the Compiler.' id 'b61eaafd-be70-42f3-aaa4-b8e21da1fd4c' date '5 May 2017' time '12:14:26.339034 pm' author 'eem' ancestors ((name 'Kernel-nice.1101' message 'Fix the dividend of ZeroDivide exception in case of reciprocal.Classify a few ''as yet unclassified'' methods.' id 'e7668d92-95a7-4ece-967a-35a6bf61c946' date '26 April 2017' time '11:32:58.822457 pm' author 'nice' ancestors ((name 'Kernel-eem.1100' message 'Fix regression in Context printing introduced in Kernel-eem.1074 through Kernel-eem.1074 or there abouts.' id 'd2281281-58ee-4fc0-a85f-32aa3c0063ca' date '26 April 2017' time '2:13:43.92511 pm' author 'eem' ancestors ((name 'Kernel-ul.1099' message '- deprecated Object >> #clone- removed #clone from subclasses' id 'd06b7b82-b7b0-4896-ab30-7a5f85de7427' date '25 April 2017' time '6:40:04.569495 pm' author 'ul' ancestors ((name 'Kernel-ul.1098' message '- rewrote senders of #clone to use #shallowCopy- Object >> #shallowCopy uses the fallback code of #clone, because that one is  simpler (copying is done by #copyFrom:) and can copy CompiledMethods too.' id 'f803e743-6f80-4bd8-9d1b-192f56d70de6' date '24 April 2017' time '12:59:49.967288 pm' author 'ul' ancestors ((name 'Kernel-eem.1097' message 'Add the primitive implementation to the two hashMultiply methods.' id '716aef28-aea7-408d-9720-a0371de009d7' date '18 April 2017' time '11:41:03.658215 am' author 'eem' ancestors ((name 'Kernel-dtl.1096' message 'SmallInteger>>hashMultiply comment provided by Andres Valloud' id '877ab97f-9ebe-4405-af31-fe9caab25eb6' date '18 April 2017' time '11:59:08.257358 am' author 'dtl' ancestors ((name 'Kernel-eem.1095' message 'Add simulation of directedSuperSend:numArgs:.Clean up the send simulation machinery a little, using quickSend:to:with:lookupIn: and send:to:with:lookupIn: everywhere and replacing send:to:with:startClass:, & send:to:with:super: each of whose last argument is never used, with send:to:with:.Nuke the obsolete tryNamedPrimitive template methods.' id '6872c2d8-f3c1-4037-b730-ea2e8fba4ff7' date '13 April 2017' time '2:05:29.158689 pm' author 'eem' ancestors ((name 'Kernel-eem.1094' message 'Correct the SistaV1 bytecoders decoders up to immedately before the ensure4llocableSlots: bytecode (which is subject to change).Add incomplete directedSuperSend:numArgs: support.' id 'ef197114-f2d6-437c-920f-1940bfe2b414' date '13 April 2017' time '9:22:45.544636 am' author 'eem' ancestors ((name 'Kernel-eem.1093' message 'Avoid a simulation error when attempting to step a terminated process.' id '89d60290-842f-435b-bee9-25dc3377ad00' date '11 April 2017' time '12:03:29.176811 pm' author 'eem' ancestors ((name 'Kernel-eem.1092' message 'Add FullBlockClosure (blocks with independent bytecode methods; needed for Scorch/Sista).  Give BlockClosure an informative comment.' id '49255d6b-cd3d-4604-b9ba-6ac025d951b3' date '10 April 2017' time '11:52:56.611122 am' author 'eem' ancestors ((name 'Kernel-eem.1091' message 'Fix decode errors in the SistaV1 bytecode decoders. pushThisContext and doDup were off by one bytecode.  pop and store remote temp were interchanged.  ext push temp var was off by one and push integer was not signed.' id '8d871428-a98b-4d09-a8f6-ee199bb7c4e6' date '6 April 2017' time '3:39:24.442535 pm' author 'eem' ancestors ((name 'Kernel-eem.1090' message 'Fix slip in interpretNext2ByteSistaV1Instruction:for:extA:extB:startPC: for super sends.' id '8cad183e-c092-4335-b341-f5296bc8c048' date '6 April 2017' time '2:18:12.358916 pm' author 'eem' ancestors ((name 'Kernel-eem.1089' message 'Decode doPop for SistaV1' id '5ff30751-530f-4e4b-95cc-7b5a0d5e86b4' date '6 April 2017' time '12:00:07.621919 pm' author 'eem' ancestors ((name 'Kernel-eem.1088' message 'Have the setter for the preferred bytecode set attempt to install a set if required and if possible.' id '6e4c7ee7-23f2-4db0-93ff-ee8728d4231e' date '5 April 2017' time '11:40:44.087587 pm' author 'eem' ancestors ((name 'Kernel-eem.1087' message 'Add the SistaV1 bytecode set decoders and some of the new SistaV1 bytecode support (enough for printing).' id '79b19c31-bee8-4906-95da-83f2a3b61396' date '5 April 2017' time '6:52:09.802183 pm' author 'eem' ancestors ((name 'Kernel-eem.1086' message 'Improve Context''s comment and move methods out of the effectively obsolete closure-specific instruction-decoding category.' id 'b7a5b8d8-6a97-4193-87b9-f1ca83a6f52d' date '4 April 2017' time '5:56:56.293644 pm' author 'eem' ancestors ((name 'Kernel-eem.1085' message 'Get the fix for the EToys ScriptEncoder right.' id '0ed0802d-4a76-4345-a33a-ff400094a7d9' date '3 April 2017' time '4:53:09.025064 pm' author 'eem' ancestors ((name 'Kernel-eem.1084' message 'Oops, the changes reported in Compiler-eem.339 are here, to whit:Fix a restriction in BytecodeEncoder>>computeMethodHeaderForNumArgs:numTemps:numLits:primitive: that caused EToys to have to implement an unnecessary override.Fix the literal limit in that same method.  The max number of literals is 32767 now that we reserve bit 15 for the "do not jit-compile with counters'' bit in Sista VMs.' id '131f851c-368d-42aa-b28b-5a07ae8cb7f6' date '3 April 2017' time '4:45:38.181168 pm' author 'eem' ancestors ((name 'Kernel-eem.1083' message 'Add a class variable for setting and holding the preferred bytecode set to use, along with a preference that uses the new code in PreferenceBrowser-eem.80.' id '68311a56-626f-485c-a805-9922c04ed7e4' date '3 April 2017' time '4:27:59.818532 pm' author 'eem' ancestors ((name 'Kernel-eem.1082' message 'Regularize literal printing for the Kernel literal classes.' id '1438cc9f-a090-4294-9b73-bd409d2877a2' date '3 April 2017' time '4:04:21.670959 pm' author 'eem' ancestors ((name 'Kernel-eem.1081' message 'Move MethodContext''s binding to Undeclared.' id 'ef0a2820-8b5e-4e17-847f-6a802a426afd' date '31 March 2017' time '9:31:25.428558 am' author 'eem' ancestors ((name 'Kernel-eem.1080' message 'Replace mention of MethodContext with Context in class comments as appropriate.' id 'b3cbc78a-e6de-4624-ae85-181a64e89c05' date '30 March 2017' time '6:04:09.745358 pm' author 'eem' ancestors ((name 'Kernel-eem.1079' message 'Replace mention of MethodContext with Context in comments as appropriate.Make isMethodContext accurate.Nuke the bootstrapContext script now it''s done its job.Nuke the left-over UndefinedObject>>allSuperclassesDo: which clearly does /not/ need to be implemented :-)' id '2c378b83-0ed9-4add-8a90-5169c20dd173' date '30 March 2017' time '5:12:50.577477 pm' author 'eem' ancestors ((name 'Kernel-eem.1078' message 'Commit with MethodContext renamed to Context, and BlockContext and ContextPart gone.  All references to methodCOntext and ContextPart have been replaced by references to Context.Scripts have been removed.' id '3258fc02-4f0d-4d17-b8e9-1bca86434dc3' date '30 March 2017' time '4:30:20.121048 pm' author 'eem' ancestors ((name 'Kernel-eem.1077' message 'Pull the MethodContext => Context switch.  Better luck this time, we hope.' id 'f5ff4330-d306-4363-811c-7b3f933c2c47' date '30 March 2017' time '3:10:36.830931 pm' author 'eem' ancestors ((name 'Kernel-eem.1076' message 'Add the method to bootstrap MethodContext => Context (to the class side of InstructionStream so its not going to move).  Make sure the old name is still around until after the putsch.' id '5bd0442e-e498-4794-a357-40629712f858' date '30 March 2017' time '1:56:08.159569 pm' author 'eem' ancestors ((name 'Kernel-eem.1075' message 'Change senders of primitiveFailTokenFor: to send to MethodContext not ContextPart.' id '31d3d682-f16d-4295-82d3-07689acf53b4' date '29 March 2017' time '2:44:46.228466 pm' author 'eem' ancestors ((name 'Kernel-eem.1074' message 'Compile all methods inherited from ContextPart by MethodContext in MethodContext, prior to eliminating ContextPart.Eliminate some obsolete methods:	hideFromDebuggerAdd a convenience for scanForInstructionSequence: to CompiledMethod.Update the comments in howToModifyPrimitives, & Object>>instVarAt:[put:] to reflect reality.' id 'd3593a9c-0922-461c-8ce6-bf562c397ef5' date '29 March 2017' time '2:29:14.46683 pm' author 'eem' ancestors ((name 'Kernel-ul.1073' message '- cleaned up most senders of undeclared methods- added Exception >> #printDetailsOn:, so that it can safely be sent to any exception from #printVerboseOn:- removed remnants of an old closure experiment- sped up #messages and #messagesDo: of CompiledMethod' id 'f89437db-3d34-4690-bebc-6d9bbba66212' date '28 March 2017' time '2:55:29.274038 am' author 'ul' ancestors ((name 'Kernel-eem.1072' message 'Revert the mistaken fix to needsFrameSize:.  It is not the perform:withArguments: context that needs a large frame, but its sender.  The arguments are pushed in the sender''s context, not the perform:withArguments: context, which doesn''t exist at the point the primitive is invoked.  If the primitive scceeds then the arguments are pushed on the context which is activated, which will /not/ be perform:withArguments:.  If the primitive fails, the arguments will be popped off the stack of the sender''s context back into the array.In the Stack (and Cog) VM this is not an issue because there is ample headroom on stack pages.  In a context interpreter the correct solution is to defer pushing the arguments until the new method has been found (which I think is the case anyway).  In any case setting the large frame bit in perform:withArguments: is wrong.  And if it were right, doing it only for perform:withArguments: and not for withArgs:evaluate:, valueWithArguments: and perform:inSuperclass:withArguments: is wrong too.Add an argument count check to the inner simulated send machinery.Nuke isPseudoContext; IIAC it''s an obsolete remnant of the old jitter VM.' id 'ecabc689-68b4-45ec-9668-a39f089448d0' date '23 March 2017' time '6:27:21.701732 pm' author 'eem' ancestors ((name 'Kernel-eem.1071' message 'Update CompiledCode''s class comment with more accurate description of bit 16, and add the accessors for it.' id 'afff36e4-2c12-45fc-8f45-519d1970e44a' date '23 March 2017' time '2:36:33.164059 pm' author 'eem' ancestors ((name 'Kernel-eem.1070' message 'Move some source and decompilation related methods up from CompiledMethod to CompiledCode.  provide method on CompiledCode to allow simple forwarding to the CompiledMehtod from CompiledBlock via outerCode.Correct a comment.' id '1b8bfbce-9034-46cb-9ac9-631f9d57ae80' date '23 March 2017' time '11:32:43.949379 am' author 'eem' ancestors ((name 'Kernel-eem.1069' message 'Move most relevant accessing mehtods up from Compiledmethod to CompiledCode.  Still remaining is a comprehensive localLiterals/literals split.Add the outerCode accessors to CompiledBlock and its (non-Opal-specific) senders.Nuke hasNewPropertyFormat; this has been obsolete for ages.' id 'f327f174-6584-4322-9adf-aabbb7b95f89' date '23 March 2017' time '11:10:58.741571 am' author 'eem' ancestors ((name 'Kernel-eem.1068' message 'Add isCompiledCode to Object.  Later we can eliminate isCompiledMethod from Object if desired and implement isCompiledBlock and isCompiledMethod only on CompiledCode and subclasses.  In any case we need isCompiledCode in Object now more than we need isCompiledMethod.  Apologies to all offended by is methods (but get over it ;-) ).Implement isCompiledBlock in CompiledCode (for subclasses of CompiledCode, foo isCompiledMethod = foo isCompiledBlock not).Move the relevant class methods up from CompiledMethod to CompiledCode.  Redo the error messages in basicNew, new et al.' id 'ee70e995-61c9-468a-8ff5-3238631c3710' date '23 March 2017' time '10:12:09.692043 am' author 'eem' ancestors ((name 'Kernel-eem.1067' message 'Add CompiledCode and CompiledBlock to the package explciitly, now that the script has created them. Provide the class comments.' id '0073e975-c0c9-4923-9702-88e51890ae33' date '22 March 2017' time '1:20:50.066536 pm' author 'eem' ancestors ((name 'Kernel-eem.1066' message 'Invoke the script to install CompiledCode and CompiledBlock' id '90c23fd4-0e78-4f36-87a2-6dd74f6a284f' date '22 March 2017' time '11:44:28.351522 am' author 'eem' ancestors ((name 'Kernel-eem.1065' message 'Add the script that morphs the class hierarchy to my liking in installing CompiledCode and CompiledBlock.' id 'f4ab499b-630a-4aa6-8d66-2a0c8132383d' date '22 March 2017' time '11:40:47.118625 am' author 'eem' ancestors ((name 'Kernel-eem.1064' message 'Fix bug in creating new subclasses of #compiledMethod classes.' id '5779c103-0ef2-470d-ae88-a5a759b47510' date '22 March 2017' time '9:21:06.777441 am' author 'eem' ancestors ((name 'Kernel-ul.1063' message 'SortedCollection Whack-a-mole' id '3959a034-7e65-47a1-b70f-e493b376d673' date '13 March 2017' time '5:08:47.219548 am' author 'ul' ancestors ((name 'Kernel-eem.1062' message 'Eliminate obsolete millisecond delay primitive.' id '6376b349-df2b-4eab-8e2c-8695002a1bcb' date '9 March 2017' time '12:34:12.792744 pm' author 'eem' ancestors ((name 'Kernel-jr.1061' message 'increase environment awareness for behaviors' id 'acd952fb-8e90-e940-8d2e-6c1a9e3a7d3f' date '28 February 2017' time '12:28:50.653081 am' author 'jr' ancestors ((name 'Kernel-ul.1060' message '- omit ifAbsent from #index* sends when the default value, 0 would used- merged Kernel-ul.1059' id 'e510449a-9899-41a3-9bc9-a41290fdc64e' date '27 February 2017' time '2:16:28.275956 am' author 'ul' ancestors ((name 'Kernel-tonyg.1059' message 'Change Promise>>wait to signal BrokenPromise if the promise is rejected.' id '75619647-2c74-47e9-bbd4-adb402acfd2d' date '17 February 2017' time '2:10:00.316749 pm' author 'tonyg' ancestors ((name 'Kernel-ul.1058' message '- extracted BitCountPerByteTable from Integer >> bitCount- added optimized version of #bitCount to SmallInteger' id '62aa1881-7b99-4ba0-bfa5-a2599f1386a9' date '10 February 2017' time '1:16:53.505258 pm' author 'ul' ancestors ((name 'Kernel-eem.1057' message 'Provide a convenient method for scanning for arbitrary bytecode sequences, where each bytecode is provided as a message.' id '5768ff81-113e-47b1-9855-a6d8277bf6b3' date '7 February 2017' time '6:20:56.634789 pm' author 'eem' ancestors ((name 'Kernel-dtl.1056' message 'Fix typo in error message' id 'f56b3bcb-a051-481b-a90c-024a72acc1d7' date '2 February 2017' time '1:48:45.677072 am' author 'dtl' ancestors ((name 'Kernel-dtl.1055' message 'Merge Kernel-nice.1054, Kernel-cbc.1054' id '72bb2b4b-bdd2-4057-a312-e26db93d0245' date '2 February 2017' time '1:46:01.637724 am' author 'dtl' ancestors ((name 'Kernel-nice.1054' message 'Change -0.0 sign to answer 0 instead of -1.Introduce a new message signBit for recognition of Float negativeZero.Rationale:1) The value of Float negativeZero cannot be distinguished from zero.   Thus (Float negativeZero = 0.0)   We can then expect sign to be symmetric for (positive) zero and negativeZero2) ANSI Smalltalk requires above behavior.   This will reduce un-necessary difference with Gemstone for example.About NaN:Note that with old implementation, the sign of "positive" nan was 0, while it was -1 for "negative" nan.New implementation will allways answer 0 for nans.We may as well answer Float nan, but currently sign will allways answer an Integer (-1,0 or 1). Until it is well specified by a standard, let''s not bother.Otherwise, we could answer a Float if receiver is a Float like:sign	self > 0.0 ifTrue: [ ^1.0].	self < 0.0 ifTrue: [ ^-1.0].	^self' id 'ef21d74d-ba81-47c6-9bb7-92fb4140f494' date '27 January 2017' time '9:44:46.83377 pm' author 'nice' ancestors ((name 'Kernel-eem.1053' message 'Provide isMethodReference for MessageList et al' id '649183d7-831c-44a0-acc7-451ffcfa664f' date '16 December 2016' time '5:52:27.549163 pm' author 'eem' ancestors ((name 'Kernel-eem.1052' message 'Provide CompiledMethod>>tempNames again.  Requires Tools-eem.735' id '925c6bf0-e0ad-483a-b0fd-a20c5efa4470' date '6 December 2016' time '11:30:33.659177 am' author 'eem' ancestors ((name 'Kernel-ul.1051' message '- simplified Semaphore >> critical:ifLocked: - Float >> #arcTan: always return a Float + some micro-optimizations - micro-optimizations in Float >> #sign' id '15f0443e-a6cc-4c91-ba44-190ef66534c7' date '6 December 2016' time '6:50:56.960382 pm' author 'ul' ancestors ((name 'Kernel-eem.1050' message 'The various scanFor: and scanForEmptySlotFor: implementations only need to access the size of their array once.' id '57843650-49e3-4f32-a54b-026878128dc2' date '3 December 2016' time '9:32:37.361263 am' author 'eem' ancestors ((name 'Kernel-cmm.1049' message 'Give ReferenceStream the ability to serialize objects whose behaviors were extended via #primitiveChangeClassTo:.' id 'c1a99cf9-1315-4aac-9bdb-c84fecc12912' date '11 November 2016' time '2:55:37.977602 pm' author 'cmm' ancestors ((name 'Kernel-nice.1048' message 'Move the duplicated fallback code for timesTwoPower: primitive up in Float.Adjust the limits a bit,- we can evaluate down to (1.0 timesTwoPower: -1074) with gradual underflow (Float emin - Float precision + 1).- we can shift by 29 with SmallInteger, so correctly set the limit to -30 < exponent < 30' id '476a34de-b988-44ea-8d97-3b553e3e879e' date '30 October 2016' time '5:18:07.732545 pm' author 'nice' ancestors ((name 'Kernel-nice.1047' message 'Merge nice.1041 changes for 16/64 bits integer arrayBy now all changes are superseded by Eliot''sHalfWord -> DoubleByteisHalfWords -> isShortsisDoubleWords -> isLongs' id 'a8f40d9d-7e18-4ae4-99ce-a3144357602d' date '20 October 2016' time '10:07:24.06516 pm' author 'nice' ancestors ((name 'Kernel-tfel.1046' message 'Improve performance of large integer fallback code for multiplication and division with small integers, by avoiding recalculating SmallInteger>>digitLength a lot of times. (This yields a 3x speedup in some integer heavy shootout benchmarks like pidigits for RSqueak, where we don''t have a LargeIntegers plugin)' id '12ebf345-b919-2845-8147-56a8b2f4cae4' date '19 October 2016' time '5:34:18.991659 pm' author 'tfel' ancestors ((name 'Kernel-eem.1045' message 'Add support for creating DoubleByte (isShorts) and DoubleWord (isLongs) variable classes.' id 'd91d38c6-bb5b-4fcd-a28b-1bdbc867a33e' date '12 October 2016' time '12:10:33.006651 pm' author 'eem' ancestors ((name 'Kernel-nice.1044' message 'Fix two more problems with nthRoot: 1) last fix introduced a possibility of infinite loop where guess and nextGuess would alternate around the solution2) contrarily to what was written in comment, the result was not rounded to nearest Float but subject to double-rounding problem.' id 'ee2cb17e-948a-4227-836c-bcb58e3f26c7' date '2 October 2016' time '3:14:21.098209 pm' author 'nice' ancestors ((name 'Kernel-nice.1043' message 'Fix (10 raisedTo: 600) nthRoot: 300.It did incorrectly return 126.0 instead of 100.' id 'd29f9c07-edc8-4add-9b99-e889fd2be32a' date '1 October 2016' time '10:19:12.37443 pm' author 'nice' ancestors ((name 'Kernel-nice.1042' message 'Merge Kernel-nice.798 (variable scope fix, don''t resolve name in superclass environment)Reminder: this requires some Smalltalk exportSelf.' id '8923b113-72cf-414e-802c-cef7c50f8ad1' date '29 September 2016' time '10:15:16.009388 am' author 'nice' ancestors ((name 'Kernel-tfel.1041' message 'uniclasses might not have a category' id '31da1f70-2af0-e74e-b46c-74f1c7b615b7' date '27 September 2016' time '3:41:40.508268 pm' author 'tfel' ancestors ((name 'Kernel-tfel.1040' message 'refactor newSubclass to go through the more general newUniqueClassInstVars:classInstVars: method.' id 'e6781812-fc7b-a546-818b-0b16c5d62e88' date '27 September 2016' time '2:57:29.665629 pm' author 'tfel' ancestors ((name 'Kernel-tfel.1039' message '- hide uniclasses from the environment, so they are collected automatically when their players go away. One can always browse such classes using the InstanceBrowser, anyway.' id '9e2d7733-0e85-1140-b333-5725f60a8877' date '23 September 2016' time '1:49:11.864418 pm' author 'tfel' ancestors ((name 'Kernel-bf.1038' message 'Fix typos' id '8c354082-7d64-4039-8dc2-e2d78c537570' date '15 September 2016' time '6:33:16.643947 pm' author 'bf' ancestors ((name 'Kernel-bf.1037' message 'Remove unused allInstancesEverywhereDo:' id 'e18c7fae-264c-4be6-9895-69e022aa1850' date '14 September 2016' time '12:29:29.496445 pm' author 'bf' ancestors ((name 'Kernel-ul.1036' message 'Use #new: to create a a DeepCopier with a given initial capacity.' id 'e79df913-4b0c-4c66-8e84-58d823774d7e' date '27 August 2016' time '7:13:45.745043 pm' author 'ul' ancestors ((name 'Kernel-mt.1035' message 'Fixes additional dependency by moving some window color-related methods to System extension.' id '794b1430-0a2b-d84d-9a30-f5d4e406c433' date '16 August 2016' time '5:31:21.408602 pm' author 'mt' ancestors ((name 'Kernel-mt.1034' message '*** Widget Refactorings and UI Themes (Part 2 of 11) ***Simplify window colors and prepare them and other properties of system windows to be themed.' id 'f57f51f9-aa84-5e4e-90cb-a9c6228e3cd4' date '31 July 2016' time '10:21:08.99049 am' author 'mt' ancestors ((name 'Kernel-topa.1033' message 'Collect perform with 5 args.' id '5d65d061-4973-4968-a0a2-533b9dc334ef' date '11 July 2016' time '10:17:45.427905 am' author 'topa' ancestors ((name 'Kernel-eem.1032' message 'Faster method creation in CompiledMethodTrailer.Provide CompiledMethod>>voidCogVMState with a fail-over to flushCache, for safe modification of methods.Provide BlockClosure>>isNestedeWithin: for testing block nesting.' id '0e4a81f4-1688-419a-b951-f0bc7a0b33fd' date '7 July 2016' time '11:36:43.185017 am' author 'eem' ancestors ((name 'Kernel-eem.1031' message 'Provide support for saving blocks on DataStreams.  The old code only allowed saving contewxts in image segments.  This code allows only the contexts of blocks being saved to be saved, an saves them with nilled senders, and is careful to manage fields beyond the top of stack, storing and reading nils.With this code the following works, and one can e.g. save a MessageNames as a morph on file and read it in again.[:a :b| a > b] saveOnFileNamed: ''block.bin''.(MultiByteBinaryOrTextStream with: ((FileStream readOnlyFileNamed: ''block.bin'') binary contentsOfEntireFile)) binary reset fileInObjectAndCode value: 2 value: 1' id '04b233a5-6540-4c4b-8a79-64e8e4c12e65' date '5 July 2016' time '6:16:17.071766 pm' author 'eem' ancestors ((name 'Kernel-eem.1030' message 'Fix simulation of the withArgs:executeMethod: and tryPrimitive:withArgs: primitives, as well as providing support for receiver:tryPrimitive:withArgs: when it is implemented.' id '67cc43ba-8129-470e-b40f-36d8fc58dee7' date '16 June 2016' time '5:12:46.623829 pm' author 'eem' ancestors ((name 'Kernel-eem.1029' message 'Supply missing simulation methods for the new Mutex primitives and hence render through on code like the following funcitonal again:Mutex new critical:	[[Object new]		on: Notification		do: [:noti| ]]' id '118ce27e-414e-4a37-940d-ce167fa5afb7' date '16 June 2016' time '4:17:52.232323 pm' author 'eem' ancestors ((name 'Kernel-mt.1028' message 'Extends EventSensor to be prepared for VMs to really send mouse-wheel events.(Merges several peek* and prim* methods in EventSensor as a clean-up from the former InputSensor days.)' id 'ef9df82a-545e-b44a-9084-8b608be6ce69' date '15 June 2016' time '7:55:24.868664 am' author 'mt' ancestors ((name 'Kernel-mt.1027' message 'Appendix to Morphic-mt.1154.' id 'a9379948-081f-fb4f-a55d-5f72c6d674e5' date '31 May 2016' time '10:43:24.59966 am' author 'mt' ancestors ((name 'Kernel-pre.1026' message 'Improves argument naming in exception handling methods to make discovery of ExceptionSet easier.' id '389c2806-d933-41e0-9dd0-4f4035f3455c' date '25 May 2016' time '10:25:41.183733 am' author 'pre' ancestors ((name 'Kernel-mt.1025' message 'Appendix to Morphic-mt.1150.' id 'ddb8d59c-0fd5-4c4e-a0f9-6c4c98fc9e3b' date '20 May 2016' time '11:40:09.017411 am' author 'mt' ancestors ((name 'Kernel-ul.1024' message 'Copied the fallback code of LargePositiveInteger >> #replaceFrom:to:with:startingAt: from its parent class and extended it to make it compatible with the primitive as well.' id '68c736cc-d98c-4303-a68e-312488b5c51a' date '20 May 2016' time '1:19:14.472859 am' author 'ul' ancestors ((name 'Kernel-eem.1023' message 'CompiledMethod>>pcPreviousTo: is used in places other thna the debugger, so it has to be in kernel.  Some time it may be replaceable with the new BytecodeEncoder class>>#pcPreviousTo:in:for:, but for now put it in the right package.' id 'dbe31b16-e7d4-4342-a314-a2faedcc6ce3' date '13 May 2016' time '12:47:58.825645 pm' author 'eem' ancestors ((name 'Kernel-eem.1022' message 'Revise the fix in Kernel-bf.1019 (Debugger: step over temp vector initializer when entering method).  Use the new bytecode scanning mahcinery from Compiler-eem.322 to implement willReallyStore and use it in stepToSendOrReturn to filter-out stores of indirect temp vectors.' id 'a39b0f45-dcca-4780-aec1-1466aaadd607' date '13 May 2016' time '12:42:06.679822 pm' author 'eem' ancestors ((name 'Kernel-bf.1021' message 'Look for <hasLiteralTest:> method in the non-meta class.' id '17fc93fe-76d6-4961-83c6-399d9a3e9ab8' date '11 May 2016' time '7:12:33.427889 pm' author 'bf' ancestors ((name 'Kernel-bf.1020' message 'Add MethodContext>>actualStackSize' id '6e52fc30-34bc-4d1b-b149-bdee465f4f75' date '11 May 2016' time '6:56:53.270494 pm' author 'bf' ancestors ((name 'Kernel-bf.1019' message 'Debugger: step over temp vector initializer when entering method' id '54dc3e86-690f-4e37-9c37-640692047c60' date '11 May 2016' time '3:30:33.093682 pm' author 'bf' ancestors ((name 'Kernel-nice.1018' message 'Move #representsSameBrowseeAs: and #postAcceptBrowseFor: out of Morphic' id '9c352422-6711-4a46-a864-86b07e0db599' date '4 May 2016' time '11:50:22.289732 pm' author 'nice' ancestors ((name 'Kernel-nice.1017' message 'Avoid dependency on Graphics package just for startup order.Note that it is going to be a bootstrap problem.' id '303ddbb3-6c74-4e3f-9838-501b7b1373f0' date '3 May 2016' time '11:40:36.82624 pm' author 'nice' ancestors ((name 'Kernel-mt.1016' message 'Fixes a bug in weak message sends where the internal weak array structure for arguments was not put into a real array and hence made the perform-primitive fail.I suspect an old copy-paste mistake because MessageSend and WeakMessageSend share some code.' id '9f54ad71-44a3-d248-8811-44bd57be0327' date '28 April 2016' time '6:17:59.607373 pm' author 'mt' ancestors ((name 'Kernel-nice.1015' message 'Accelerate bitAnd: in case of negative small integer receiver and LargePositiveInteger operand.The timings on CogSpur32 r3684 before and after the change are:[(-1234 bitAnd: 5678)] bench.	161,000,000 per second. 6.22 nanoseconds per run.	161,000,000 per second. 6.2 nanoseconds per run.[(-1234 bitAnd: 5678125641253)] bench.	1,120,000 per second. 892 nanoseconds per run.	5,020,000 per second. 199 nanoseconds per run.[(-1234 bitAnd: -5678125641253)] bench.	1,830,000 per second. 547 nanoseconds per run.	1,790,000 per second. 557 nanoseconds per run.[(-1234 bitAnd: 567812564128976768553)] bench.	984,000 per second. 1.02 microseconds per run.	2,320,000 per second. 431 nanoseconds per run.[(-1234 bitAnd: -567812564128976768553)] bench.	1,790,000 per second. 559 nanoseconds per run.	1,690,000 per second. 593 nanoseconds per run.' id 'e62fa41e-9258-4cf7-a855-fd85b2070131' date '24 April 2016' time '12:01:32.68707 am' author 'nice' ancestors ((name 'Kernel-mt.1014' message 'Fixes uni-class clean-up by adding the check for #isSystemDefinied.' id 'b82ee689-f086-bc41-a438-f9c5b7e383c9' date '12 April 2016' time '6:54:04.593201 pm' author 'mt' ancestors ((name 'Kernel-mt.1013' message 'Simplifies code for stopping the sound service on CMD+Dot' id 'b0488a79-3625-4d40-8aad-1cb2b3ad4936' date '6 April 2016' time '10:27:04.586834 am' author 'mt' ancestors ((name 'Kernel-mt.1012' message 'Restore clean-up code, which got lost with the introduction of object events long time ago (around Squeak 3.7 or so).Break dependency to #releaseActionMap implemented in the System package.' id '83d8a4a7-a80d-1848-90d0-d10abf9728f7' date '5 April 2016' time '10:42:29.505517 am' author 'mt' ancestors ((name 'Kernel-ul.1011' message 'Normalize the created LargePositiveInteger in Random >> #nextLargeInt:.' id '924b2c29-5e11-4abb-aeb5-355380a4e56a' date '2 April 2016' time '9:22:40.391347 pm' author 'ul' ancestors ((name 'Kernel-ul.1010' message 'Behavior changes:- when #flushCache is sent to a selector, then there''s no need to send it to the corresponding method too.SmallInteger changes:- #decimalDigitLength shouldn''t perform LargeInteger comparisons on 32-bit VMs- do fewer computations in #printOn:base:length:padded:- removed #destinationBuffer: which has no sender' id 'b583a3a1-3df9-468c-8c26-2388bd519d52' date '2 April 2016' time '8:59:33.195843 pm' author 'ul' ancestors ((name 'Kernel-mt.1009' message 'Recent CogVMs do not yield preempted processes. Fixes the behavior where "[ [] repeat] fork" could not be interrupted anymore via CMD+. and hence locked the image.' id 'bd1b45d5-cb4d-41b0-890b-c8f70de70b1c' date '2 April 2016' time '12:23:20.21041 pm' author 'mt' ancestors ((name 'Kernel-ul.1008' message '- minor performance improvements for NumberParser and Fraction.- give some advantage to the same class integer-integer comparison, which is probably the most common case, in Integer >> #=, at the cost of adding a minor overhead to the integer-non-integer comparisons.- removed Integer >> #hash because it''s not used and the implementation become incorrect over time.' id 'dee08222-ad83-4daf-a90d-a7a4e7b5009f' date '30 March 2016' time '2:54:12.155092 am' author 'ul' ancestors ((name 'Kernel-ul.1007' message '- merged- quicker SmallInteger>>printOn:base:length:padded: for base 10, the most common case' id '10e56dde-9a4b-4fe5-af9f-a02546962e66' date '20 March 2016' time '12:46:32.331305 am' author 'ul' ancestors ((name 'Kernel-ul.1006' message '- 10% faster SmallInteger >> #decimalDigitLength on 64-bit VM- added a comment to SmallInteger >> #numberOfDigitsInBase:- reformatted and tweaked Number >> #raisedToInteger:' id '0883d257-21c1-4bac-bc57-a6cfc1b423e4' date '19 March 2016' time '1:28:42.41382 pm' author 'ul' ancestors ((name 'Kernel-eem.1005' message 'Give SmallFloat64 identityHash 4 and put it in the first class table page at that hash.  64-bit Spur will change over to that tag pattern asap.' id 'ef6c553c-70dc-4646-8a12-172594ff090a' date '9 March 2016' time '11:53:31.024318 am' author 'eem' ancestors ((name 'Kernel-bf.1004' message 'Nicer display of tinyBenchmark results:110,000,000 bytecodes/sec; 1,200,000 sends/sec' id '66e79374-507f-4a75-a4a4-e9dad4dbd17c' date '6 March 2016' time '2:24:19.735994 pm' author 'bf' ancestors ((name 'Kernel-mt.1003' message 'Restores some missing messages in EventSensor. Provide the default callback for swapMouseButtons preference as expected by our preference system.' id '17eba02e-a573-4eb3-bcf6-dbb07fce130f' date '2 March 2016' time '1:09:36.194111 pm' author 'mt' ancestors ((name 'Kernel-dtl.1002' message 'Move Kernel-Chronology to Chronology-Core and KernelTests-Chronology to Chronology-Tests' id 'fc05eaac-09a2-4c61-aa9e-b41aa7fad3f9' date '27 February 2016' time '6:33:02.285448 pm' author 'dtl' ancestors ((name 'Kernel-tfel.1001' message 'Fix fallback code in Large(Positive|Negative)Integer>>normalize. The code incorrectly assumed that if you max/min integer is larger than -2**30 / 2**30-1 then you are on 64bit. Some VMs do not do Integer tagging, and for those the check should be as on the machine level (-2**31 / 2**31-1)' id '26062a02-5ef1-43e2-b6d1-228cedef5a72' date '19 February 2016' time '12:50:25.522776 pm' author 'tfel' ancestors ((name 'Kernel-eem.1000' message 'Make Process>>resume primitive.  Andreas fixed the ancestor of the Cog VM so that the resume primitive fails if the suspendedContext is not a context.  This renders Tim''s suspendedCOntext ifNil: [^self primitiveFailed] guard obsolete.  Hence nuke primitiveResume.' id '70e6b96c-ca2f-4f79-8253-239575f13beb' date '18 February 2016' time '11:18:00.405861 pm' author 'eem' ancestors ((name 'Kernel-eem.999' message 'Fix isSuspended (my last commit was a regression; I had confused isSuspended with isBlocked).  Comment all the isFoo testing methods in process.  Add isBlocked.  Modify Process>>terminate to set the pc of the context of a process that is not auto-terminated to its endPC so that isTerminated and isSuspended can distinguish between processes either terminated or suspended.' id '30222068-755f-4637-bbbb-6f775291e746' date '18 February 2016' time '11:03:09.008076 pm' author 'eem' ancestors ((name 'Kernel-bf.998' message 'Fix underscore assignments' id 'f7674529-7b17-4eb4-ba65-d4ac0d6e262f' date '18 February 2016' time '4:34:20.797046 pm' author 'bf' ancestors ((name 'Kernel-bf.997' message 'Make testRematerializedDateComparison pass.' id '90f6486d-dd3a-4d00-847a-67eda6da3d44' date '18 February 2016' time '4:27:40.07581 pm' author 'bf' ancestors ((name 'Kernel-bf.996' message 'Typo.' id '0ff27acd-a99f-4705-a40d-c2eb6c1597fe' date '18 February 2016' time '3:57:42.016305 pm' author 'bf' ancestors ((name 'Kernel-bf.995' message 'Add preference to disable automatic timezone adjustment.' id 'd871efd5-be20-4ad9-9a1d-c1b24dce73b5' date '18 February 2016' time '3:16:12.729637 pm' author 'bf' ancestors ((name 'Kernel-bf.994' message 'Make Timespan explicitly ignore its start''s timezone offset if it was created with the defaultOffset.' id 'e47a7687-8244-43f0-b608-3f0759ac382d' date '18 February 2016' time '2:59:01.974843 pm' author 'bf' ancestors ((name 'Kernel-eem.993' message 'Fix Process>>isSuspended.  Fix a comment typo in Process>>isTerminated.  Put all Process testing methods in their own category.' id 'a151e0db-6470-4e80-8ea8-3c1bbe9282b4' date '18 February 2016' time '1:37:19.052897 pm' author 'eem' ancestors ((name 'Kernel-cmm.992' message 'DateAndTime class>>#nowWithOffset: was part of the public API needed by applications.' id '06f233cb-83a0-466a-b96a-362a4d63864d' date '17 February 2016' time '10:07:45.342973 pm' author 'cmm' ancestors ((name 'Kernel-bf.991' message 'Use proper timezone in DateAndTime now.' id '1d2c150b-bafd-43be-a1ea-648007f13215' date '17 February 2016' time '6:33:53.746681 pm' author 'bf' ancestors ((name 'Kernel-dtl.990' message 'DateAndTime class>>nowWithOffset: assumes that the VM reports wall clock time, not UTC. This is no longer the case. Adjust calculations accordingly.' id 'f078a14c-bc73-42dc-81c5-baf782c63164' date '18 February 2016' time '8:17:01.931516 pm' author 'dtl' ancestors ((name 'Kernel-mt.989' message 'Condense ways of peeking the mouse cursor position. Avoid flushing other mouse events when peeking the mouse position. Useful for the profiler.Note that it is still discouraged to peek the mouse position in Morphic code. We might want to upate all senders of #cursorPoint and #peekPosition.' id 'c658e246-d184-42ce-83dd-7d6f40184726' date '16 February 2016' time '10:28:16.317748 am' author 'mt' ancestors ((name 'Kernel-mt.988' message 'Fix accessor for eventQueue in EventSensor and make use of that accessor throughout the EventSensor code.' id '33646804-d866-4db9-9a27-ac599c317383' date '16 February 2016' time '10:03:44.570748 am' author 'mt' ancestors ((name 'Kernel-mt.987' message 'Fixes regression with a non-working event handling mechanism on Windows machines, which occured due to the recent removal of InputSensor.Also fixes the double-interrupt problem when pressing CMD+.' id 'acfc6690-1289-41c3-984b-7f781b4a0a3f' date '4 February 2016' time '3:06:38.350057 pm' author 'mt' ancestors ((name 'Kernel-eem.986' message 'Process preemption should not cause a yield.  I''d forgotten to swet this in the Spur bootstrap.  Do so in processorScheduler''s startUp, and eliminate the unnecessary reinstallation of low-space and background processes if only snapshotting.' id '3f530429-e326-41a8-b43b-8d18d32b01fc' date '2 February 2016' time '11:13:09.449248 am' author 'eem' ancestors ((name 'Kernel-dtl.985' message 'EventSensor replaces InputSensor, update class and method comments.' id '14804760-466d-4af1-a5f8-ad60b34fdc1d' date '30 January 2016' time '2:53:37.508491 pm' author 'dtl' ancestors ((name 'Kernel-dtl.984' message 'Remove InputSensor. EventSensor replaces InputSensor for both Morphic and MVC.Note: requires update to SmalltalkImage class initialization methods in package System.' id '16c765b5-65b4-49ef-ba63-abceec7cd80e' date '30 January 2016' time '2:37:27.663155 pm' author 'dtl' ancestors ((name 'Kernel-dtl.983' message 'InputSensor removal.Consolidate class methods. Remove InputSensor from that system startup list, and add EventSensor.' id '5083c482-91e7-4fc6-b812-ed73abcbd69c' date '30 January 2016' time '2:12:42.962584 pm' author 'dtl' ancestors ((name 'Kernel-dtl.982' message 'Update preferences to use EventSensor rather than InputSensor.' id 'b62b0fc9-af0f-4db5-a4f0-3af92256cc11' date '30 January 2016' time '12:58:37.124434 pm' author 'dtl' ancestors ((name 'Kernel-dtl.981' message 'InputSensor removal step 1.Move instance methods to EventSensor, eliminate super calls, resolve primitive fallbacks, recategorize. Preserve original method stamps where possible.Class variables and system startup/shutdown to be addressed next.' id 'f28a2de4-862d-4499-90cd-5eb04e0649d3' date '30 January 2016' time '11:08:34.12478 am' author 'dtl' ancestors ((name 'Kernel-eem.980' message 'Lay the ground work for double-byte strings (and possibly a 64-bit indexable bits type).Test shallowCopy''s error code and report primitive failure if it has failed for other than being out of memory (which may simply imply the need for a GC).' id '95543c3e-e2d1-4ec8-8ad2-a90fca9a2b06' date '18 January 2016' time '7:32:08.6746 pm' author 'eem' ancestors ((name 'Kernel-tpr.979' message '{Authorisation error: let''s try again. Sigh}Add Time class>eventMillisecondClock (which gets its value from the same api as the vm event creation prim) and use it instead of the new 64bit based clock - this allows d-click code to work.' id '066512f9-4f6d-4079-bfbf-92fe82801f6a' date '14 January 2016' time '5:07:09.653455 pm' author 'tpr' ancestors ((name 'Kernel-tpr.978' message 'Add Time class>eventMillisecondClock (which gets its value from the same api as the vm event creation prim) and use it instead of the new 64bit based clock - this allows d-click code to work.' id 'd8b6fc52-f1f7-46e1-9d7c-6529b5768375' date '14 January 2016' time '5:04:56.523082 pm' author 'tpr' ancestors ((name 'Kernel-ul.977' message 'DateAndTime changes and fixes:- #now returns an object with the correct date. (DaysSinceEpoch was only updated in #startUp:, so after a day it became inaccurate.)- #now returns increasing values, as it did before.- Removed the unused DaysSinceEpoch class variable.- Removed #startUp:, because it had nothing else left to do.- DateAndTime is removed from the StartUpList after load.- #julianDayNumber:offset: uses the direct setter method, which results in ~55x speedup.' id 'aaa18bc1-b66d-47b3-b755-f87c223fa959' date '10 January 2016' time '10:25:16.755989 pm' author 'ul' ancestors ((name 'Kernel-eem.976' message 'Fix regression due to accidental reversion <blush>.' id '77966cf5-e6cc-4da9-9236-788b1b466fe2' date '7 January 2016' time '3:57:18.38337 pm' author 'eem' ancestors ((name 'Kernel-eem.975' message 'Mutate Mutex and Monitor to the new representation and primitives.Modify Process>>terminate to take a generic approach to ensure blocks in critical sections vua a pragma (#criticalSection) and provide an explanatory comment, plus /not/ aborting the ensure: block if no progress has been made.' id '00437240-a4b8-42ec-82fb-9c48040d7f6e' date '7 January 2016' time '12:32:33.854762 pm' author 'eem' ancestors ((name 'Kernel-eem.974' message 'Reshape Monitor and Mutex and add the critical section primitives in advance of changing over to the critical section primitives.' id '3c4d15d0-4d46-4013-af15-4c930e58f6e2' date '7 January 2016' time '11:31:01.579217 am' author 'eem' ancestors ((name 'Kernel-eem.973' message 'Fix Delay printing and nuke the unused Fix Delay printing and nuke the unused.Provide short-cuts for inteerPart and fractionPart in Integer given their use in ew.g. creating timestamps.' id 'e6c98ae5-bd1c-4d49-b6ae-16e6d94e8c22' date '5 January 2016' time '5:36:08.334115 pm' author 'eem' ancestors ((name 'Kernel-eem.972' message 'Revert the preamble and postscript to avoid inadvertently screwing up delays with subsequent changes.' id 'a02f21e0-db78-4341-a0d8-89528efffe55' date '5 January 2016' time '4:19:47.082417 pm' author 'eem' ancestors ((name 'Kernel-eem.971' message 'Move time from a basis of mixed second clock/millisecond clock primitives to a single microsecond clock basis (albeit with two primitives, one for local and one for UTC microseconds).Derive millisecond and second clocks from local microsecond clock.  Hence eliminate tests for millisecond clock overflow and use of the millisecond clock mask.Change Delay''s resumptionTime from a millisecond clock value to a utc microsecond clock value.Eliminate unused offsets in DateAndTime and hence avoid spin loop at start-up waiting for the second clock to roll over.' id 'c93c23ad-9714-49c1-a2fd-a44b74e0bb63' date '5 January 2016' time '4:08:44.090307 pm' author 'eem' ancestors ((name 'Kernel-eem.970' message 'Changes to Time and Delay prior to changing over to the utc microsecond clock and its use in delay scheduling.' id '95e73746-6557-49a2-af25-ce39009a57b0' date '5 January 2016' time '11:48:28.872258 am' author 'eem' ancestors ((name 'Kernel-eem.969' message 'Fix tow speeling sorres.Handle the case where a method compiled in the debugger has a large frame.' id 'ec5388a5-1235-4c2d-8ec1-9ec28a9f617a' date '12 November 2015' time '5:30:04.713 pm' author 'eem' ancestors ((name 'Kernel-nice.968' message 'Pass a boolean to startUpFrom: indicating whether the object came from a different endian machine or not.' id 'b9646909-d6f1-481e-b913-1e63f3ca5c45' date '13 November 2015' time '12:39:29.775 am' author 'nice' ancestors ((name 'Kernel-nice.967' message 'Implement CompiledMethod>>withoutPrimitive because implementation is depending on CompiledMethod format which may change across VM versions, this method cannot be open-coded into Collection-Tests but obviously belongs to Kernel.' id '9bbbcd71-f6ca-430c-a62a-246e0f21e2e4' date '11 November 2015' time '2:11:25.428 am' author 'nice' ancestors ((name 'Kernel-nice.966' message 'Provide a simplistic BlockClosure equality test in order to make CharacterSet tests pass again.Ideally, we should compare the byte codes when isClean, and the outerContext when not.' id '31f4a1ed-f2fd-4dd5-b2ab-c43df4e8569b' date '9 November 2015' time '8:48:46.618 pm' author 'nice' ancestors ((name 'Kernel-mt.965' message 'Refactors and cleans-up drag-and-drop mechanism used by pluggable lists and trees.' id 'bc2a01d5-b9c9-4111-bfd0-a2a19ae61e88' date '4 November 2015' time '6:47:19.492 pm' author 'mt' ancestors ((name 'Kernel-ul.964' message 'Spur-compatible Object >> #inboundPointersExcluding:.' id '5dbe95ce-96e3-4f4d-bdb1-520c50def26c' date '2 November 2015' time '4:56:32.76 am' author 'ul' ancestors ((name 'Kernel-nice.963' message 'Let''s correct my fresh DataStream correction...The ugly 37777777 pattern may happen in octal, but 50 birthdays is well too young for practicing such sport correctly ;)<rant>if the MC commit window would not try and reformat the code (especially rewrite hexadecimal constants in decimal) - that would have given me one more chance to correct before committing...</rant>' id '251411b2-0110-4d17-8469-5b3aef45ebee' date '31 October 2015' time '11:48:47.351 pm' author 'nice' ancestors ((name 'Kernel-nice.962' message 'Fix DataStream-serialization of SmallInteger in a 64bits spur VM.DataStream assumes each and every SmallInteger fits in 32bits which is no more true.If the SmallInteger is out of 32bits VM SmallInteger range, then use a fake LargeInteger.Also care to re-normalize LageIntegers at materialization time.' id '7437325d-9085-4d61-9960-368cd42f46fe' date '31 October 2015' time '7:24:30.118 pm' author 'nice' ancestors ((name 'Kernel-ul.961' message 'Introduced Random >> #nextBytes:into:startingAt: which can be used to fill the indexable byte fields of an objects with random bytes efficiently. The method was extracted from #nextLargeInt:, which is its only user for now.' id 'ce0d735e-07a6-42e8-a789-40a8776796f4' date '20 October 2015' time '7:39:47.9 am' author 'ul' ancestors ((name 'Kernel-ul.960' message '- fix #seconds:nanoseconds: -> #seconds:nanoSeconds:' id 'fc40b663-cd1f-453e-bd76-2dd015be9582' date '10 October 2015' time '4:04:01.102 pm' author 'ul' ancestors ((name 'Kernel-ul.959' message 'Use #== instead of #= for symbol comparison and compare the floating point value directly to zero in Float >> #adaptTo*andCompare: methods. Also removed the branch for NaN, because the remaining branches yield the same result.Duration changes:- avoid LargeInteger operations in #days:hours:minutes:seconds:nanoSeconds: ad #asMilliSeconds as much as possible' id '0b44d9be-d30e-4daf-8dfc-411b2000d574' date '10 October 2015' time '3:44:26.604 pm' author 'ul' ancestors ((name 'Kernel-topa.958' message 'Allow simple, message-less deprecations' id 'b5dcf2e4-db27-445f-8d24-aafbedcf1177' date '8 October 2015' time '8:45:43 pm' author 'topa' ancestors ((name 'Kernel-topa.957' message 're-save 4' id '00b936da-2d5a-4245-86e0-d074c09cfbe4' date '7 October 2015' time '11:30:02.233 pm' author 'topa' ancestors ((name 'Kernel-topa.956' message 're-save 3' id 'b93840f1-990d-4d70-9dd6-4cddcfdde370' date '7 October 2015' time '11:22:36.695 pm' author 'topa' ancestors ((name 'Kernel-topa.955' message 're-save 2' id '1aaaf84c-9307-4d7f-a800-b5a8086e086e' date '7 October 2015' time '8:51:10.466 pm' author 'topa' ancestors ((name 'Kernel-topa.954' message 're-save' id '4c44e8a1-1076-4c9d-8645-31bcdc73c33d' date '7 October 2015' time '8:44:28.579 pm' author 'topa' ancestors ((name 'Kernel-topa.953' message 'Spur VMs report #''bad argument'' instead of  #''insufficient object memory'' when too much memory is requested. We have to support that.' id '611547b2-50dd-411d-be9d-0b707568425b' date '7 October 2015' time '8:38:47.428 pm' author 'topa' ancestors ((name 'Kernel-eem.952' message 'The comparison of the initial literal in plugin primitive methods needs to compare the first two entries, not the first three.' id '31ef882e-64d5-4e23-8e4f-d870d3bc0086' date '16 September 2015' time '4:42:02.543 pm' author 'eem' ancestors ((name 'Kernel-eem.951' message 'Implement callPrimitive: in the simulator so that, for example, the debugger does not get into an infinite recursion when accepting a new version of a method that has a primitive.Simplify skipCallPrimitive.Fix classCommentBlank so that it always answers the blank, even when there''s an existing comment (shurely shome mistake, hic, ed)..' id '43df7732-200e-421c-9be0-2c6d33244069' date '16 September 2015' time '10:46:01.276 am' author 'eem' ancestors ((name 'Kernel-eem.950' message 'Fix deprecated:[block:]' id '2b3d6360-4395-4cdf-8186-86c145c93ee2' date '28 August 2015' time '12:10:24.052 pm' author 'eem' ancestors ((name 'Kernel-eem.949' message '#~~ has a primitive.  Use it.' id 'd9195787-aea0-48b2-afd4-c3961b86b568' date '28 August 2015' time '10:22:44.926 am' author 'eem' ancestors ((name 'Kernel-eem.948' message 'Implement Ephemeron class creation, e.g.Association ephemeronSubclass: #Ephemeron	instanceVariableNames: ''''	classVariableNames: ''''	poolDictionaries: ''''	category: ''Collections-Weak''' id '45d1146b-9349-4519-9108-af1e414c58dc' date '25 August 2015' time '4:45:37.484 pm' author 'eem' ancestors ((name 'Kernel-eem.947' message 'Provide an accessor for Compiledmethod''s max num literals.  Recategorize the frame size accessors under accessing to join it.' id '1fd40c5c-0559-47a0-9a1d-1f634d652a28' date '25 August 2015' time '4:04:50.097 pm' author 'eem' ancestors ((name 'Kernel-ul.946' message 'Set literal limit to 32767.' id 'eb783de8-bef8-4cb9-9805-b7ed930df782' date '25 August 2015' time '10:47:28.554 pm' author 'ul' ancestors ((name 'Kernel-mt.945' message 'Adds support for process stepping to watch out for other unhandled things. Adds a class for unhandled warnings.' id '4f53691a-f79e-4e40-b46d-33a647b642dd' date '25 August 2015' time '2:54:06.221 pm' author 'mt' ancestors ((name 'Kernel-eem.944' message 'Nuke the compact class support in Kernel and the ClassBuilder.  Spur has a regular 64-bit object header format with no special cases.Fix CompiledMethod>>at:ifAbsent: to work with the initialPC to endPC range and run the ifAbsent: block for indices outside this range.Categorize isCompiledMethodClass correctly.' id '2398e31e-ac36-4423-b2d3-3aafa53bb339' date '22 August 2015' time '10:14:01.562 am' author 'eem' ancestors ((name 'Kernel-ul.943' message '- expose Integer''s LowBitPerByteTable' id '4d28b73f-2520-4b9a-80f5-6fc7fbbad549' date '20 August 2015' time '9:09:05.27 pm' author 'ul' ancestors ((name 'Kernel-ul.942' message '- use #becomeForward: instead of #become: where possible' id '79a558ac-3366-4483-9ddf-04d9b02fb589' date '17 August 2015' time '10:10:26.712 pm' author 'ul' ancestors ((name 'Kernel-ul.941' message '- added support for regular expressions to BlockClosure >> #valueSupplyingAnswers:' id 'fc6d8eaf-1f0b-459c-9ff7-89c0a607ec72' date '14 August 2015' time '10:13:29.228 pm' author 'ul' ancestors ((name 'Kernel-ul.940' message '#allCharacters -> #allByteCharacters' id '45cb01b1-52ab-40ff-ac9d-7b3334915356' date '14 August 2015' time '7:01:14.824 pm' author 'ul' ancestors ((name 'Kernel-ul.939' message '- Magnitude''s spaceship operator uses quick returns.- Number >> #raisedTo: uses #negative and #isZero, which is faster for LargeIntegers than pure comparison with SmallIntegers.- faster #primesUpTo:do:, and #largePrimesUpTo:do:' id '6595484c-9c41-45fe-82f3-c689f7ddffa8' date '12 August 2015' time '10:38:42.576 pm' author 'ul' ancestors ((name 'Kernel-eem.938' message 'Have ClassDescription>>moveChangesTo: write the class''s definition before the changes if there are any so that the changes file is a potential application recovery vehicle, not just a crash recovery vehicle.' id 'f142f874-0cab-43d2-98c5-92fdf103028d' date '11 August 2015' time '6:26:26.719 pm' author 'eem' ancestors ((name 'Kernel-cmm.937' message '- #hasBreakpoint is now needed by Kernel, but must be able to operate independently of System''s BreakpointManager.' id '191e34d9-22d7-4e46-ac5d-cb3cd9baf203' date '5 August 2015' time '8:06:28.072 pm' author 'cmm' ancestors ((name 'Kernel-cmm.936' message 'Squeak 5.0 release, Spur bootstrap changes to transition to Spur object model and core system.' id '8fb06f59-7775-48b6-a898-5d961230d0a2' date '19 July 2015' time '1:18:35.866 pm' author 'cmm' ancestors ((name 'Kernel-topa.935' message 'Reinstall CompiledMethod>>#hasBreakpoint' id 'd30beb7f-4706-4876-9aa1-fd8d45ba4733' date '6 July 2015' time '4:50:44.188 pm' author 'topa' ancestors ((name 'Kernel-eem.934' message 'Make sure that any breakpointed version of a method has been removed from BreakpointManager and that the original unbreakpointed methid is in hand when method source is logged, hence preserving method history even if the programmer mistakenly redefines a breakpointed method (something which this poor author is susceptible to).' id '7ab39047-e820-41a4-989e-f9bfac8b4415' date '4 July 2015' time '8:06:46.434 am' author 'eem' ancestors ((name 'Kernel-eem.933' message 'Version of Kernel providing base version if CompiledMethod>>hasBreakpoint which System will override.' id 'a36cc963-e938-4707-b373-145dd2b049c8' date '4 July 2015' time '7:58:36.434 am' author 'eem' ancestors ((name 'Kernel-eem.932' message 'Provide the same Debugger label support as complete: for the step into block support.' id '12b4ce38-269d-4f6f-9b12-eae61d403a03' date '1 July 2015' time '4:38:42.065 pm' author 'eem' ancestors ((name 'Kernel-eem.931' message 'When an error occurs during complete:, which is used by the Debugger, raise a Notification to allow the Debugger to learn of the error''s description.' id 'edffee09-d6f1-4ae8-b10b-59fe640b5dfe' date '1 July 2015' time '4:22:19.817 pm' author 'eem' ancestors ((name 'Kernel-eem.930' message 'Fix the bug with the Debugger''s through such that the Debugger would appear to freeze when encountering an MNU.  The example is Debug It on:	Object flushDependents do: [ : e | ]followed by Over, Through.  But in fact one can see the same issue doing Debug It and then Through on	nil zorkWhat was happening is that Through was stepping through the uncaught and looping MNUs (of do: or zork in the above examples) since the Debugger did not catch unhandled errors during Through, and sicne doesNotUnderstand:''s default if uncaught is to resend.  The fix is merely to catch unhandled errors when doing Through to the same effect as runUntilErrorOrReturnFrom: caching errors for Over.Also speed up Through.  The changes made in Kernel-eem.857 through Kernel-eem.896 to provide process-faithful debugging slowed down Process>>step a lot.  These changes restore the performance by using evaluate:onBehalfOf: once for each Through, rather than once for each step within Through.' id 'f2ef6b5c-be8c-4bce-ab1b-dff14bb8ab0e' date '1 July 2015' time '3:25:55.097 pm' author 'eem' ancestors ((name 'Kernel-eem.929' message 'Fix computation of prior position in newprintMethodChunkHistorically:on:moveSource:toFile:' id 'c05a273c-9ef2-433f-9106-012dff5a0a4d' date '2 June 2015' time '10:08:30.877 am' author 'eem' ancestors ((name 'Kernel-eem.928' message 'Modify condenseChanges to preserve direct method history.' id '42550ae5-1cf6-41e1-8e22-93b7ad2a6166' date '29 May 2015' time '4:08:39.106 pm' author 'eem' ancestors ((name 'Kernel-eem.927' message 'Support for condensing sources and changes whilepreserving direct history.' id 'b759de23-0d29-460f-94ba-69d3ee900124' date '29 May 2015' time '4:04:53.411 pm' author 'eem' ancestors ((name 'Kernel-eem.926' message 'Make markerOrNil multiple-bytecode-sets aware' id 'b5d090c6-115c-427d-92ca-0e02afa2908d' date '29 May 2015' time '12:02:32.361 pm' author 'eem' ancestors ((name 'Kernel-cmm.925' message 'Fix an error in an error-handler.  Any Exception can and must be able to #printVerboseOn:, not just Errors.' id '088a1f16-41e4-414a-aedf-2e02fc7c51ba' date '27 May 2015' time '10:33:50.392 pm' author 'cmm' ancestors ((name 'Kernel-mt.924' message 'ValueHolder: Only notify about changed contents if contents actually changed.' id 'f9df7cdb-eb50-f54a-b1a5-8fcd565313b7' date '3 May 2015' time '10:36:03.973 am' author 'mt' ancestors ((name 'Kernel-nice.923' message 'Use an intermediate abstract Float representation (sign, exponent, significand) in order to convert single precision bits to double precision bits rather than attempting the conversion by direct bit manipulations.This lead to simpler code, because it is like a semantic bit manipulation rather than a raw bit manipulation.And this also lead to faster code on 32 bits interpreter/COG/Spur VM thanks to avoidance of LargeInteger(was Kernel-nice.893 / 24 December 2014)' id '875249b7-3037-4f50-9ab1-c1b2ec94b0e1' date '1 May 2015' time '3:32:43.592 pm' author 'nice' ancestors ((name 'Kernel-nice.922' message 'Remove an un-necessary inst. var. shadowing (inbox Kernel-nice.745 7 March 2013)' id '609507cb-36a8-44cd-a2ab-368a7a8b6a02' date '1 May 2015' time '3:24:52.309 pm' author 'nice' ancestors ((name 'Kernel-nice.921' message 'Provide an exact version for #floorLog: for those Number using exact arithmetic(as proposed in inbox Kernel-nice.721 / 11 December 2012).Previous version was not exact, otherwise this count would have been zero:    (-300 to: -1) count: [:n | n ~= ((10 raisedTo: n) floorLog: 10)].Note that this won''t make #log: exact, and could lead to disagreement between the two functions.However, old behavior compatible with log: is still possible by passing the radix argument asFloat, so this is not a real problem.' id '1ce76bf5-1e32-4d12-b7b1-9f23a75d37b2' date '1 May 2015' time '3:09:15.528 pm' author 'nice' ancestors ((name 'Kernel-topa.920' message 'Remove spurious -- all -- category that crept into Object' id '22c1b724-e8e2-486b-b91b-49405ebc489a' date '14 April 2015' time '10:20:01.78 am' author 'topa' ancestors ((name 'Kernel-mt.919' message 'Fixed Object organization to not have all-category as a real category. Was empty anyway.' id '6ccd73b1-d88b-d045-89c6-6dfddbdc7f66' date '14 April 2015' time '9:42:18.399 am' author 'mt' ancestors ((name 'Kernel-mt.918' message 'Added a non-specific way to access all elements from a categorizer.' id 'ed5d1308-7dda-b24f-a6fa-9f1eae8070d8' date '12 April 2015' time '3:24:52.584 pm' author 'mt' ancestors ((name 'Kernel-bf.917' message 'Fix accidental non-weak arrays in ObsoleteSubclasses values' id '48b96a41-4966-4f92-a52c-2df737fb2cbb' date '7 April 2015' time '2:06:18.845 pm' author 'bf' ancestors ((name 'Kernel-topa.916' message '(same as before)Fix arguments access in WeakMessageSend' id '8f05add4-c132-40ad-a4cc-a6131ec098f3' date '1 April 2015' time '2:00:39.799 pm' author 'topa' ancestors ((name 'Kernel-topa.915' message 'Fix arguments access in WeakMessageSend comparison.They may be nil; but the accessor guards that already.' id '3318e7de-b5f6-4f3b-a105-7d404be3b78f' date '31 March 2015' time '10:15:55.476 pm' author 'topa' ancestors ((name 'Kernel-cmm.914' message 'Include filed-in methods in the RecentMessages list.' id '2a496e8d-58d0-46cc-9989-f7525275bfd9' date '26 March 2015' time '5:05:35.834 pm' author 'cmm' ancestors ((name 'Kernel-eem.913' message 'Provide missing copyWithSourceCode: depended onby new breakpointing with source code.' id '3424456e-291c-4424-97d8-a19ff41755fe' date '20 March 2015' time '12:32:15.433 pm' author 'eem' ancestors ((name 'Kernel-topa.912' message 'Move methods from Kernel to Tools/Morphic for basic Models (3/3)Load this last.' id '959778ec-8547-43f1-89a5-6f0f93238617' date '18 March 2015' time '10:36:24.019 am' author 'topa' ancestors ((name 'Kernel-cmm.911' message '- Don''t create a SoundSystem just to send #shutDown to it, so that its lazy-initialization will not try to pop up a menu asking the user which type to create and, in the process, invoking WorldState behaviors from outside the UI process and colliding with the new intercycle pause implementation.' id '0d5cd697-a536-47ec-8c0c-0b8b38bf297a' date '15 March 2015' time '10:12:04.602 pm' author 'cmm' ancestors ((name 'Kernel-ul.910' message 'When saving a class comment, flush the changes file, unless we''re doing a file-in.' id '8c3e3968-8e23-4e8c-a875-deff467edebb' date '9 March 2015' time '2:24:39.637 am' author 'ul' ancestors ((name 'Kernel-mt.909' message 'Two utility messages added to classes to find out whether a selector is an override or will be overridden in subclasses.' id 'bd97ddfb-65ef-9a4d-956a-7ebb84782a01' date '5 March 2015' time '11:41:30.983 am' author 'mt' ancestors ((name 'Kernel-ul.908' message 'Removed the unused variables from Random.' id '89028aae-a08b-4320-9c55-53b1036a5192' date '26 February 2015' time '10:09:05.384 pm' author 'ul' ancestors ((name 'Kernel-ul.907' message 'Removed the old random number generator implementation from Random.' id 'a94084a6-3f89-4708-8e60-b7978f1b3501' date '26 February 2015' time '9:26:09.288 pm' author 'ul' ancestors ((name 'Kernel-ul.906' message 'Added an implementation of a 30-bit Mersenne Twister (p=521) to Random. All existing Random instances are migrated to the new implementation.' id '9fd0ffbc-c774-442a-baa5-5b0e13950856' date '26 February 2015' time '9:22:02.722 pm' author 'ul' ancestors ((name 'Kernel-topa.905' message 'Add a convenience method to access arguments of a context.Also: increases compatibility.' id 'ab4128de-7440-4a90-94c2-171a33b906c6' date '26 February 2015' time '11:46:08.016 am' author 'topa' ancestors ((name 'Kernel-ul.904' message 'Avoid the frequent time checks, and the clock rollover bug in BlockClosure >> #bench.Introduced BlockClosure >> #benchFor:, a variant of #bench, which takes the duration of the benchmark as its parameter.Added more information about the running times to the answer.E.g.:[ 10 factorial ] benchFor: 0.1 seconds. "''7,990,000 per second. 125 nanoseconds per run.''"[ 100 factorial ] benchFor: 10 seconds. "''19,900 per second. 50.3 microseconds per run.''"[ 1000 factorial ] bench. "''378 per second. 2.65 milliseconds per run.''"[ 20000 factorial ] bench. "''0.843 per second. 1.19 seconds per run.''"' id '7e873979-7e22-4abb-bd69-fa6d72f8c7fc' date '17 February 2015' time '1:40:49.811 pm' author 'ul' ancestors ((name 'Kernel-nice.902' message 'Generate large random integers a bit more fairly.The idea is just to generate a large bit sequence by gathering enough pseudo random chunks.Note that this implementation knows that Random cannot fairly generate 32 bits, so limit itself to 24 bits chunk.It knows two much about Random already and should better delegate, but since we have a single Pseudo Random Number Generator so far, don''t bother too much.' id '056a5cce-fafc-4bd8-a6e2-e85f9114b48a' date '13 February 2015' time '11:39:01.472 pm' author 'nice' ancestors ((name 'Kernel-eem.901' message 'Make Integer class>>byte1:byte2:byte3:byte4: 64-bitSpur savvy, and add a similarly savvybyte1:byte2:byte3:byte4:byte5:byte6:byte7:byte8:' id '01852b3d-2d73-4a23-8de0-7ca117279435' date '13 February 2015' time '1:00:47.881 pm' author 'eem' ancestors ((name 'Kernel-nice.900' message 'Rescue #timesTwoPower: fallback code from freshly discovered flaws.Don''t be sparing of comments, if we ever need some, that gonna be hereSome of us try very hard to make the tests speak in place of comments, I feel that having both don''t hurt.' id '3366e84f-225d-4519-b571-b099acdaba70' date '12 February 2015' time '3:02:47.866 am' author 'nice' ancestors ((name 'Kernel-bf.899' message 'Fix random for Really Large Integers.' id '1cc7d0c6-0a3d-457f-9609-fa508d11310e' date '10 February 2015' time '4:37:05.988 pm' author 'bf' ancestors ((name 'Kernel-eem.898' message 'Use the brace construct in becomeForward:.  Relaxthe comment in the become implementations toinclude Spur immediates.' id 'ee76d58d-255c-464c-aa5e-0b88a264907c' date '2 February 2015' time '1:54:44.676 pm' author 'eem' ancestors ((name 'Kernel-mt.897' message 'Dynamic variables will not store their default values into the process'' env anymore. This supports changing the result of #default without having to terminate that process (or fiddling with the env var directly...)' id '3fdc3270-04ea-1e45-a02e-1cc17c459fde' date '31 January 2015' time '6:16:02.184 pm' author 'mt' ancestors ((name 'Kernel-eem.896' message 'Tweak the write-back of variables in Process>>evaluate:onBehalfOf: so as not tosmash variables initialized in the process.' id 'da5f62a8-f18c-4630-a319-d3130d2d4312' date '29 January 2015' time '2:29:21.555 pm' author 'eem' ancestors ((name 'Kernel-eem.895' message 'Change Process>>evaluate:onBehalfOf: to updateall non-scheduling variables, such as name and env,to ensure that access to these variables duringdebugging answers those of the debugged process.This is a smaller, if tricker, change than that inKernel-eem.894' id '2872309b-7fd4-4911-9606-9993d569e1c7' date '29 January 2015' time '1:52:39.767 pm' author 'eem' ancestors ((name 'Kernel-ul.893' message '- Added Delay >> #delayDuration: which allows one to reuse the same Delay instance with a different duration.- Merged Kernel-ul.891:	- Introduced ThreadSafeRandom, a process-local variable holding a Random instance. Replaced all uses of Collection''s RandomForPicking with ThreadSafeRandom value.	- Faster Magnitude >> #between:and:.	- Added an accessor for Semaphore''s excessSignals variable.' id '349e7be8-30d6-41ce-a6cb-ad5490347eed' date '18 January 2015' time '8:23:34.326 pm' author 'ul' ancestors ((name 'Kernel-ul.891' message '- Introduced ThreadSafeRandom, a process-local variable holding a Random instance. Replaced all uses of Collection''s RandomForPicking with ThreadSafeRandom value.- Faster Magnitude >> #between:and:.- Added an accessor for Semaphore''s excessSignals variable.' id 'b17702fd-c5b8-4cf8-9b85-8b6790df7e14' date '17 December 2014' time '3:25:17.881 pm' author 'ul' ancestors ((name 'Kernel-bf.890' message 'Restore timestamps lost in assignment conversion.' id '578f262a-c72b-4a4f-b9ce-813aeb77728b' date '8 December 2014' time '1:47:26.425 am' author 'bf' ancestors ((name 'Kernel-eem.889' message 'Provide a plausible definition ofCompiledMethod>>copyFrom: that at least workswith compiled methods and e.g. Array.' id '1fb0b0d6-b62e-4d04-a3d7-e72a25dafeae' date '1 December 2014' time '1:09:35.682 pm' author 'eem' ancestors ((name 'Kernel-eem.888' message 'Fix CompiledMethod class newFrom:' id '99c1a1fa-cf39-4a3d-a40f-c9158a8f7014' date '1 December 2014' time '12:01:40.684 pm' author 'eem' ancestors ((name 'Kernel-eem.887' message 'A few more cases in COntextPart where objectClass:should be used instead of class to avoid proxy issues.' id '888d2632-2d0a-49dd-b83a-b5aceb2c939d' date '27 November 2014' time '1:19:50.961 pm' author 'eem' ancestors ((name 'Kernel-eem.886' message 'Fix idiocy in new SmallInteger comment.' id 'e1e9c50f-8019-434c-87d9-bc08293afad6' date '20 November 2014' time '8:42:54.337 am' author 'eem' ancestors ((name 'Kernel-eem.885' message 'Steal the Smalltalk-80 V2 definition of SmallInteger>>digitAt: which doesn''t assume max digit length.' id '6e239e5b-b957-4ff6-a3ce-bb3ee10cf826' date '19 November 2014' time '3:33:32.003 pm' author 'eem' ancestors ((name 'Kernel-eem.884' message 'Reimplement SmallInteger class>>minVal & maxVal toanswer the values computed at start-up.' id '826d63dd-9356-4847-9022-a7fb3dc3aa44' date '19 November 2014' time '12:16:37.49 pm' author 'eem' ancestors ((name 'Kernel-eem.883' message 'Add class inst vars to hold SmallInteger class>>minValand maxVal.  Add SmallInteger to the front of thestart-up list.  Update SmallInteger''s class commentwith 64-bit info.' id '2ccdf2d6-38ff-4d1a-87c8-c411b596a068' date '19 November 2014' time '12:12:39.345 pm' author 'eem' ancestors ((name 'Kernel-nice.882' message 'No need to query which selector isDoIt, because DoIt methods are not installed anymore in the methodDictionary (for a few years yet).' id '89313c71-97fc-41a3-b2b5-0fccac4b81c9' date '31 October 2014' time '12:31:24.415 am' author 'nice' ancestors ((name 'Kernel-nice.881' message 'Fix Float literal equality: 0.0 and -0.0 are not the same Float...' id '3a3a0a22-ab12-4838-8606-250c9e58cf76' date '27 October 2014' time '9:59:32.033 pm' author 'nice' ancestors ((name 'Kernel-ul.880' message 'Compile methods with the right trailer to avoid a #becomeForward: when the actual trailer is added.' id '4b600072-456c-413f-8b7e-e3f1ae8340f3' date '21 October 2014' time '4:56:17.427 pm' author 'ul' ancestors ((name 'Kernel-eem.879' message 'Add a usable unusedBytecode hook that allowsInstructionClients to define unusedBytecode andact appropriately.Remove the obsolete interpretExtension:in:for:' id 'fbc8b106-b977-4d3b-8df9-4f4836beff40' date '9 October 2014' time '1:35:55.93 pm' author 'eem' ancestors ((name 'Kernel-eem.878' message 'Less haste, more speed.Fix doPrimitive:method:receiver:args: for primitive 188and quick methods (Object>>withArgs:executeMethod:)and support primitive 189(Object>>with:*executeMethod:)' id 'e4b864d7-c2bc-4a8c-b0fa-e867a1508410' date '6 October 2014' time '4:23:20.811 pm' author 'eem' ancestors ((name 'Kernel-eem.876' message 'Fix handleSignal: for a rare edge case that canoccur on Stack & Cog VMs.' id '9ea5bea7-14c9-48c9-9d49-ca311d68d49a' date '29 September 2014' time '2:21:45.514 pm' author 'eem' ancestors ((name 'Kernel-ul.875' message '- improved Date >> #printFormat:- added #isZero to LargeIntegers' id 'cab8700d-92c1-4795-9c28-8edc6671cc46' date '22 September 2014' time '7:47:53.688 pm' author 'ul' ancestors ((name 'Kernel-ul.874' message 'Random changes:- fixed off-by-one error in #next- seed is always a Float- added #hashSeed: which can be used to produce a better initial seed. Small seeds will result in less random first value.- seed is forced between 0 and 2^31-1 if it''s out of range using #hashSeed:- simplified #initialize. 0 is not a bad seed value- fixed #nextValue''s comment and simplified the implementation a bit- added clarification to #nextInt:''s comment- sped up #bucketTest: on the class side' id 'b39db5fc-8e25-4059-98d5-5ffbdd608e76' date '21 September 2014' time '7:24:24.087 pm' author 'ul' ancestors ((name 'Kernel-nice.873' message 'Add spaceship operator support <=>  usefull for sort functions.' id 'c17d3346-f7e5-49c3-8939-91c7606954ef' date '19 September 2014' time '10:45:30.606 pm' author 'nice' ancestors ((name 'Kernel-eem.872' message 'Make skipBackBeforeJump bytecode-set agnostic.Fix a typo.  stepToSendOrReturn doesn''t need to use #|' id '0ac9cda4-0343-4869-9539-152be1c23b79' date '17 September 2014' time '6:16:29.423 pm' author 'eem' ancestors ((name 'Kernel-eem.871' message 'Use prmitiveFailed, not primitiveFail (too much timein VM land).  Also the accessor for the method headerflag selecting bytecode set takes an Encoderinstance, not an Encoder class.' id 'b7263a0f-ef4e-4bf8-ace5-cfae0e04b889' date '17 September 2014' time '5:17:52.5 pm' author 'eem' ancestors ((name 'Kernel-eem.870' message 'Revise blockCreationBytecodeMessage formultiple bytecode sets. Provide the accessor todetermine which flag an encoder should use.' id '26720d45-a583-48c1-8bda-02fa0f50cdc4' date '17 September 2014' time '3:55:43.269 pm' author 'eem' ancestors ((name 'Kernel-eem.869' message 'Fix a bug and an issue with ContextPart>>quickSend:to:with:super:.First, the lookup class for a normal send should be derivedfrom the rcvr argument, not from the context''s receiver.Second, the existing code assumed the SqueakV3/Smalltalk-80bytecode set.Requires at least Compiler-eem.288.' id '69beb9e8-c62a-41d3-9d0f-e2c265530789' date '2 September 2014' time '2:28:08.442 pm' author 'eem' ancestors ((name 'Kernel-mt.868' message 'restored method category of #isKindOf: to "class membership"' id '56fa5571-dfaa-e04c-b8a2-a972f345aaea' date '12 August 2014' time '9:34:24.549 am' author 'mt' ancestors ((name 'Kernel-mt.867' message 'New preference added for activating system windows on first mouse click. Works for all standard tools that subclass Model for their model.' id 'f469a687-9e68-6542-b0ae-01fde30002a8' date '12 August 2014' time '9:29:37.682 am' author 'mt' ancestors ((name 'Kernel-eem.866' message 'Fix the bug in SqNumberParser whereby a fractional value isparsed as a Fraction not as a Float.  Fractions are not literalsand hence factional values must be answered as Floats.Ensure that the semantics of ExtendedNumberParser areunchanged; it /is/ free to answer fractional values as Fractions.Update ExtendedNumberParser''s comment to reflect this.' id '906bb1aa-c7f8-4630-ba45-5374209ddf52' date '6 August 2014' time '10:37:24.712 am' author 'eem' ancestors ((name 'Kernel-eem.865' message 'Make selectorToSendOrSelf multiple bytecode sets aware' id 'ca62a3f4-4a2a-48ec-84a8-1b2499e05eae' date '5 August 2014' time '9:50:02.857 pm' author 'eem' ancestors ((name 'Kernel-eem.864' message 'Allow encoderClass to be stored in a property to allowtsting of methods in different bytecode sets before thosesets have been installed.Don''t create blocks in the property accessors unlessabsolutely necessary.' id '3fa01ebb-bef4-4b68-aac7-3cf0a41e3df1' date '5 August 2014' time '9:27:06.696 pm' author 'eem' ancestors ((name 'Kernel-eem.863' message 'empty log message' id 'cb350f31-9826-4a62-b21b-b824ea553cf1' date '5 August 2014' time '7:57:17.219 pm' author 'eem' ancestors ((name 'Kernel-eem.862' message 'Add skipCallPrimtiive for multiple-bytecode-sets capable Decompiler.' id 'ff1a01aa-168f-486e-9fd6-53d9d56218dc' date '5 August 2014' time '7:35:31.651 pm' author 'eem' ancestors ((name 'Kernel-eem.861' message 'Slightly more efficient ProtoObject>>become:.Eliminate isKindOf:''s in InstructionPrinter>>pushConstant:.Provide CompiledMethod>>protocol to answer its selector''scategory^H^H^H^H^H^H^H^Hprotocol.' id '06be17f2-e2b8-436d-b85f-49ac68899bc6' date '5 August 2014' time '12:11:04.902 pm' author 'eem' ancestors ((name 'Kernel-nice.860' message 'Avoid engaging LargeInteger arithmetic (asTrueFraction) just for testing the sign of a Float' id '368a9aba-7c65-ad4b-9499-75a652bed57f' date '24 July 2014' time '1:00:22.683 pm' author 'nice' ancestors ((name 'Kernel-eem.859' message 'Add the base ServiceGui menu hook to StringHolder inpreparation for making CodeHolder''s one augment menus,not just Browser''s.' id '3fb186b0-3a6c-441c-ab24-ed293562c7b2' date '18 July 2014' time '11:45:19.607 am' author 'eem' ancestors ((name 'Kernel-eem.858' message 'Fix a couple of bugs in BlockClosure>>printSourceOn:' id '43c040b0-53f8-43e0-a8c9-42fbaba86a27' date '18 July 2014' time '9:40:15.375 am' author 'eem' ancestors ((name 'Kernel-eem.857' message 'Make the debuggber process faithful."Process>>effectiveProcess is a mechanism to allow process-faithful debugging. The debugger executes code on behalf ofprocesses, so unless some effort is made the identity ofProcessor activeProcess is not correctly maintained whendebugging code. The debugger uses evaluate:onBehalfOf: toassign the debugged process as the effectiveProcess of theprocess executing the code, preserving process identity."' id '9ff469b7-fc26-4f39-9212-144316319dbb' date '23 June 2014' time '10:26:23.836 am' author 'eem' ancestors ((name 'Kernel-dtl.856' message 'Fix inconsistent image state as reported on squeak-dev:Date: Wed, 11 Jun 2014 23:44:42 -0400From: Florin MateocTo: The general-purpose Squeak developers listSubject: [squeak-dev] Class subclasses I think this is an old bug, presumably since ProtoObject was introduced (and presumably because ObjectTracer was used in the process). If you ask Class for its subclasses (or if you inspect it) you see that ObjectTracer class is listed along with ProtoObject class, although ObjectTracer''s superclass is ProtoObject. This can lead to some funny bugs if you try to write some hierarchy traversing code.' id '5a0967c5-86ae-4631-9d20-d960cd97abb1' date '15 June 2014' time '10:42:28.524 am' author 'dtl' ancestors ((name 'Kernel-cmm.855' message '- A simple fix for an 8X performance improvement in DateAndTime>>#< as reported by LXTestDateAndTimePerformance.' id '478f3548-e587-4dd9-8962-d6ba6dbe2035' date '2 June 2014' time '9:53:24.175 am' author 'cmm' ancestors ((name 'Kernel-eem.854' message 'Fix the regression caused by Kernel-eem.847.  Instead ofinstalling teh correct binding in compileAllFrom: addbehavior>>updateMethodBindingsTo: and invoke it fromClassBuilder>>update:to:.  This restores the failingPureBehaviorTests>>testReshapeClass.' id '354e7db1-1a1c-426c-ae87-018e33f29c69' date '27 May 2014' time '11:17:11.701 am' author 'eem' ancestors ((name 'Kernel-nice.853' message 'Introduce an isAnExactFloat test, which is true when a Number can be converted as Float exactly.Use this to boost some mixed arithmetic comparisons by avoidance of Float>>asTrueFraction in more cases.Use this to make Fraction>>hash more explicit.While at it, improve a bit the Fraction>>hash in inexact case (previous naive bitXor: causes too many collisions)Since some hash has been modified, rehashAll in postscript.' id '0c682a44-c243-440b-8caf-399be09824bc' date '21 May 2014' time '2:52:52.286 am' author 'nice' ancestors ((name 'Kernel-eem.852' message 'Change scanning methods in InstructionStream andCompiledMethod to double-dispatch throughCompiledMethod>>#encoderClass to provide pluggablemultiple bytecode set support.  The sign of a method''sheader chooses which of two bytecode sets are in effect,choosing between PrimaryBytecodeSetEncoderClass(header >= 0), and SecondaryBytecodeSetEncoderClass(header <= 0).' id '6d0add2f-b4ae-4e90-9b0d-7c938c4f4c1c' date '19 May 2014' time '11:49:49.951 am' author 'eem' ancestors ((name 'Kernel-eem.851' message 'First part of Kernel multiple bytecode sets switchover.  Makesure CompiledMethod>>ncoderClass works as expectedbefore depening on it.' id '3ced43fc-fd88-4b0c-b029-fd870592dbc2' date '19 May 2014' time '11:41:55.614 am' author 'eem' ancestors ((name 'Kernel-dtl.850' message 'Provide DateAndTme>>floor so that ObjectHistoryMark does not need to use instVarAt:put: to obtain a time stamp with whole seconds. This protects for future changes to DateAndTime that may not rely on an instance variable named #nanos.' id '59305e44-d447-499c-82f8-44c7d5ae25ee' date '14 May 2014' time '7:46:05.064 am' author 'dtl' ancestors ((name 'Kernel-nice.849' message 'Authorize implicit specification of ScaledDecimal scale 123s -> 123.s0 , 0.27s -> 0.27s2 like VW and Pharo.(Issue http://bugs.squeak.org/view.php?id=7755)Note that if other letters follow the s, then s is not interpreted as a scale, because it could be a message.For example, (25sin) is interpreted as (25 sin) like in Pharo rather than (25s0 in) like in VW.This way, the chances of ambiguous interpretation of existing code base is limited to the sole message #s.' id 'c7a61a26-0156-479f-af39-9c351f618fc3' date '13 May 2014' time '12:12:10.829 am' author 'nice' ancestors ((name 'Kernel-nice.848' message 'Now that there is a direct access to Float negativeInfinity, use it.' id '8e301b04-6b3d-4f42-8292-6d3a8eb34f82' date '3 May 2014' time '10:47:32.344 pm' author 'nice' ancestors ((name 'Kernel-eem.847' message 'Fix class reshaping losing the correct methodClassAssociationin instance side methods.' id '61cf122b-e7e3-4c10-9d8b-17df1509d656' date '2 May 2014' time '5:45:56.76 pm' author 'eem' ancestors ((name 'Kernel-eem.846' message 'Fix whichMethodsStoreInto: for pool variables.Any kind soul who wants to do the same forwhichSelectorsStoreInto: et al is encouragedto do so. The test case is looking for reads or writesof a pool variable.' id 'b9c690a8-8a32-44bc-b553-2a2bceedae70' date '2 May 2014' time '4:04:03.262 pm' author 'eem' ancestors ((name 'Kernel-cmm.845' message '- #flush after printing error information, and before image immediately exits, otherwise it won''t always get written.- Add accessor for #negativeInfinity so I don''t have to create new Float via Float infinity negated when all I want to do is compare.- #asBytesDescription for Float too because this is a very useful printing method for even things other than byte counts (and we should think of a better name for it too).' id 'b0fee9bf-c59e-4560-9a57-eddd2e055838' date '2 May 2014' time '2:23:45.137 pm' author 'cmm' ancestors ((name 'Kernel-cwp.844' message 'merge' id 'f4f1b55b-db99-4fae-9a9b-3fcdcc0a6716' date '22 March 2014' time '7:57:39.797 pm' author 'cwp' ancestors ((name 'Kernel-cwp.840' message 'Rename EnvironmentRequest to CurrentEnvironment.' id '29c07cf5-3bf7-4afd-95d3-b3db45892522' date '22 March 2014' time '7:55:47.589 pm' author 'cwp' ancestors ((name 'Kernel-nice.839' message 'For conformance to IEEE 754-2008 (IEC 60559-2011), the sucessor of Float fmin negated is now a negativeZero.' id '070493d0-68d5-4385-b3a6-4ddf4c64497f' date '1 March 2014' time '12:36:12.266 am' author 'nice' ancestors ((name 'Kernel-nice.838' message 'Don''t let 0.1s1 // 0.1s1 engage an infinite loop when super would just do it right.' id '001e2bd2-6b17-4b02-9b49-c7ee03d52e3d' date '28 February 2014' time '1:36:14.795 am' author 'nice' ancestors ((name 'Kernel-nice.837' message 'Allow uppercase exponents in ExtendedNumberParser (''1.00E-2'' asNumber)' id '12cc90d9-9ee2-445e-85cc-4febd06c9b09' date '27 February 2014' time '11:09:40.472 pm' author 'nice' ancestors ((name 'Kernel-dtl.836' message 'Do not allow either basicNew: or basicNew for CompiledMethods because CompiledMethods may only be created with newMethod:header: (otherwise a VM crash may result).' id '410e695f-7f23-43e4-9dc2-d292b9954f0d' date '16 February 2014' time '2:19:44.092 pm' author 'dtl' ancestors ((name 'Kernel-cmm.835' message '- Why is FileStream class>>#stderr primitive failing when asked for its #size?' id '9b210942-2bae-4a82-9fde-ff77af5dec9a' date '28 January 2014' time '11:13:17.23 am' author 'cmm' ancestors ((name 'Kernel-topa.834' message 'Move trait-backstops back to Kernel, so trait unloading still works.My previous change is now unecessary.' id '0184b773-5c2a-40a9-9922-3b1ba2443767' date '25 January 2014' time '11:55:18.392 pm' author 'topa' ancestors ((name 'Kernel-topa.833' message 'Allow for Traits to be _not_ present when obsoleting a Class.Necessary to actually be able to unload Traits in the first place.' id 'c75fce66-1af9-446c-b847-e9be57bd79ea' date '25 January 2014' time '11:44:53.514 pm' author 'topa' ancestors ((name 'Kernel-cwp.832' message 'Remove references to Undeclared and route through the appropriate environment.' id '8aa9fb24-86f6-43bb-b925-d5b6e7d47022' date '18 January 2014' time '10:36:05.863 am' author 'cwp' ancestors ((name 'Kernel-nice.831' message '1) Fix awfull bug in NumberParser when reading a number with fraction part(the trailing digits of the fraction might be skipped when there''s many of them because of incorrect update of lastNonZero position)This made this test fail:self assert: (Float readFrom: (((1<<1075) reciprocal + (1<<1400) reciprocal) printShowingDecimalPlaces: 2000)) = Float fmin.I just wanted to check NumberParser w.r.t. a former bug of dtoa, but it failed for different reasons http://www.exploringbinary.com/gays-strtod-returns-zero-for-inputs-just-above-2-1075/2) Classify some as yet unclassified (or miss-classified)' id '5c62dca4-bf8e-4330-9cb1-9cd24047aac6' date '14 January 2014' time '3:43:29.851 am' author 'nice' ancestors ((name 'Kernel-nice.830' message 'Protect against (SmallInteger new: 0) at image side because it can currently crash the VM.See http://stackoverflow.com/questions/20621119/how-to-print-an-integer-to-transcript' id '80247214-23da-4bd8-9cf1-5903321dcbd4' date '9 January 2014' time '12:13:16.739 am' author 'nice' ancestors ((name 'Kernel-fbs.829' message 'Move #showDeprecationWarnings preference to Deprecation.' id '7385dbaa-8f76-6942-97a9-21b0f60037a4' date '3 January 2014' time '5:31:08.701 pm' author 'fbs' ancestors ((name 'Kernel-fbs.828' message 'Move some Tools functionality out of Kernel to Tools.' id '7f0b6d62-9a2b-4448-bb09-437d34af6010' date '3 January 2014' time '11:37:55.998 am' author 'fbs' ancestors ((name 'Kernel-fbs.827' message 'Move Transcripter''s invoker to System-Recovery. All #primitiveError: senders are in Tools, so this completes the move of recovery things to System-Recovery.' id 'd83c2233-41dd-e24f-9386-04a55ab9318c' date '30 December 2013' time '10:13:12.71 am' author 'fbs' ancestors ((name 'Kernel-nice.826' message 'Use non logging Compiler protocol rather than providing a logged: false argument.' id '81cda804-7d00-4520-b8af-07cab07c07d0' date '16 December 2013' time '4:33:56.464 pm' author 'nice' ancestors ((name 'Kernel-dtl.825' message 'The emergency evaluator does not work if primitiveError: is broken. Fix it.' id '813831b0-82db-47b5-99ab-dd11959a0c58' date '14 December 2013' time '3:42:04.82 pm' author 'dtl' ancestors ((name 'Kernel-fbs.824' message '_For now_, rip the emergency evaluator out because it''s broken... unless you''re using MVC, in which case it just works.Later work can add an AppRegistry to the _System_ package, so that _Morphic_ can get an emergency evaluator once more. (Emphasis to emphasise that an emergency evaluator is not Kernel''s concern. #primitiveError: probably ought to go into System.)' id 'ad461b3e-f257-6e46-ae02-9aa8cffd8a6d' date '13 December 2013' time '6:59:11.307 pm' author 'fbs' ancestors ((name 'Kernel-eem.823' message 'AdditionalMethodState>>analogousCodeTo: needs toreject other kinds of objects, not assume they''reAdditionalMethodState instances.' id 'b2a6c46e-4bf3-4ebd-b69f-a676648e52fc' date '3 December 2013' time '11:46:14.717 am' author 'eem' ancestors ((name 'Kernel-eem.822' message 'Change the execution simulation machinery (as used by theDebugger) to:- use the mirror primitives to access the receiver and literal  variables, avoiding sending messages to these objects,  hence mimicking the VMs behaviour, and simulating the  execution of code using proxies correctly.- retrieve the primitive error code form failing primitives- fix the simulation of Object>>perform:withArguments:inSuperclass:' id 'b991e66c-90bb-4118-91c7-4b7dbe38d440' date '30 November 2013' time '1:21:56.41 pm' author 'eem' ancestors ((name 'Kernel-cmm.821' message '- Don''t let Boolean and Number inherit Object''s really slow #veryDeepCopy.' id '591c1ede-81bc-40d7-8591-af7fe29b2bd5' date '26 November 2013' time '10:24:26.281 am' author 'cmm' ancestors ((name 'Kernel-fbs.820' message 'Kernel has a number of SharedPools, so SharedPool belongs (for better or worse) in Kernel, not System.' id '7207e866-665d-bc4c-ad55-b1aba40f7f77' date '20 November 2013' time '11:04:52.228 pm' author 'fbs' ancestors ((name 'Kernel-cmm.819' message '- Fix #numArgs for MessageSend''s whose arguments have not yet been set.' id 'df349ca4-09ec-4a78-b10b-bc2ca823d8cd' date '6 November 2013' time '3:42:56.929 pm' author 'cmm' ancestors ((name 'Kernel-nice.818' message 'Avoid spurious warnings in Class>>rename: when an Undeclared isn''t really referenced.This may help some SUnit tests to pass.' id '3dae8edc-b873-491e-8b54-596cae38eb5f' date '2 November 2013' time '12:05:29.34 am' author 'nice' ancestors ((name 'Kernel-cmm.817' message 'notNil belongs on ProtoObject along with the other common nil-testing methods.' id 'a37c9485-212f-4f0d-9e39-69952517d138' date '31 October 2013' time '8:47:05.439 pm' author 'cmm' ancestors ((name 'Kernel-cmm.816' message 'Remove valueWithAllPossibleArguments: because it has not proven a general necessity..' id '62af959d-4b3e-4b4c-8c4e-aa7f1465e8de' date '26 October 2013' time '2:55:06.697 pm' author 'cmm' ancestors ((name 'Kernel-ul.815' message '- merged Kernel-ul.812, Kernel-cmm.814- removed MethodDictionary >> #includesKey:, because it''s bogus' id 'fed1469b-c755-4e2d-a37f-5dd00b5d08a3' date '26 October 2013' time '12:37:22.693 am' author 'ul' ancestors ((name 'Kernel-ul.812' message '- merged Kernel-ul.811 with the changes to Random- use the #environment message to access the environment from Class, instead of the variable named environment, because the latter might be nil, which causes an error during update' id 'c9549364-8b71-4105-ac51-cff717cd57ee' date '24 October 2013' time '6:20:30.715 pm' author 'ul' ancestors ((name 'Kernel-nice.811' message 'Make squeakDebug.log report length a setting.' id 'd8e4e28f-1d3d-49f1-a3d5-51b75f95b99e' date '25 September 2013' time '11:01:08.496 pm' author 'nice' ancestors ((name 'Kernel-nice.810' message 'Fix log/ln for integers1) LargeNegativeInteger sends signal:from: which is a pharosim (unimplemented)2) a negative SmallInteger answers a nan which is not consistent with LargeNegativeInteger nor Fraction' id 'eb2a7647-cf62-49f2-8436-40b3a52e18af' date '22 September 2013' time '1:05:14.525 am' author 'nice' ancestors ((name 'Kernel-nice.809' message 'Deprecate compile:notifying:trailer:ifFail:.The passed classification was unused in this operation.' id '2c225644-9320-4e31-8191-5cbcf06c184c' date '20 September 2013' time '10:27:59.843 pm' author 'nice' ancestors ((name 'Kernel-nice.808' message 'Don''t pass a category to a Compiler, classifying is not its job.' id '0538a438-3c3f-4580-a21e-6d7da6c5faca' date '20 September 2013' time '9:51:16.441 pm' author 'nice' ancestors ((name 'Kernel-nice.807' message 'If you just need the parameter names, then just ask for the parameter names.Asking for parameter and temp names, then throwing the temps away sounds like not using the right API in the right place...' id '7e2508f3-57f2-4f2f-b1f2-e2d2ac123091' date '20 September 2013' time '1:10:29.327 am' author 'nice' ancestors ((name 'Kernel-cmm.806' message 'Magnitude>>#inRangeOf:and: is a more-forgiving version of #between:and:.' id '431dea93-aeff-4997-88d1-427e09f9375a' date '16 September 2013' time '5:38:39.489 pm' author 'cmm' ancestors ((name 'Kernel-fbs.805' message 'Move Behaviour >> #changeRecordsAt: to System-Changes. There are other System-Changes things still in Behavior, which should also eventually move.' id 'c6324847-4a08-114a-a14d-ecd4c00fb05e' date '11 September 2013' time '10:27:07.724 pm' author 'fbs' ancestors ((name 'Kernel-fbs.804' message 'Kernel shouldn''t reference UI stuff. Even though this could well belong in System, I''m moving it to Protocol because that''s the only in-image user of the message.' id '0345889e-dff5-8d42-bd1b-6198e307ac13' date '2 September 2013' time '6:10:57.029 pm' author 'fbs' ancestors ((name 'Kernel-fbs.803' message 'When adding a class var, use a #environment message send, because the environment instvar may be nil (when classes explicitly wish to defer the decision of containing environment to their superclass).(I''ve been using this change for ages in my own images.)' id 'd195e09a-59f7-ce42-a9fd-1c4d7a774d02' date '2 September 2013' time '6:07:43.531 pm' author 'fbs' ancestors ((name 'Kernel-cmm.802' message '- In looking at the API of ProtoObject, isKindOf: was the only odd-man out.  Proxy subclasses needing that should copy the implementation into themselves.- #becomeForward: belongs in ProtoObject along with #become:.' id '1897a745-29bf-41be-a5a9-e1664d6334a9' date '14 August 2013' time '1:18:41.14 pm' author 'cmm' ancestors ((name 'Kernel-bf.801' message 'Merge Bob Arning''s fix for Delay snapshotting.' id '255906c6-0505-423f-bb08-40920cf35575' date '7 August 2013' time '6:04:44.128 pm' author 'bf' ancestors ((name 'Kernel-fbs.800' message 'Consolidate all finalization stuff in System-Finalization.' id '94dcd493-9f6b-7042-9130-eb18bc9bd2e8' date '6 August 2013' time '10:15:36.612 pm' author 'fbs' ancestors ((name 'Kernel-fbs.799' message 'Move #allTraits, #traitCompisition and similar methods to Traits.' id 'b2c45906-a80b-3542-a0b0-4abce3c7c1d8' date '6 August 2013' time '5:49:04.874 pm' author 'fbs' ancestors ((name 'Kernel-fbs.798' message 'Split the remaining System-referencing Kernel exceptions such that the System references are added by the System package.' id 'a3ca8b35-44c0-074b-b5f2-47bfc5e3965a' date '5 August 2013' time '7:52:49.59 pm' author 'fbs' ancestors ((name 'Kernel-nice.797' message 'Workaround to fix http://bugs.squeak.org/view.php?id=1554A class variable defined in a superclass should take precedence over a global variable.Note that current implementation will import the bindings of every superclass environment which is questionable.Fix a doubled statement terminator in Month class>>readFrom:.' id 'c2ee61a3-86aa-4a39-ae2a-93ac3e8c81c6' date '28 July 2013' time '4:48:53.354 pm' author 'nice' ancestors ((name 'Kernel-fbs.796' message 'Move MethodFinder to Tools-MethodFinder. Thanks to Chris Muller for the suggestion!' id '7331da85-fde6-b047-ad92-57b6d0a9280c' date '25 July 2013' time '7:41:41.281 pm' author 'fbs' ancestors ((name 'Kernel-fbs.795' message 'SmalltalkImage current -> Smalltalk.' id '733a64b2-fc43-bc40-9114-599b085d9187' date '25 July 2013' time '8:33:16.497 am' author 'fbs' ancestors ((name 'Kernel-fbs.794' message 'ClassBuilder defines its own informUserDuring:, so ClassBuilder shouldn''t use UIManager''s (except of in #informUserDuring:).' id 'c8c7f0d6-1f44-42d3-82b4-246f94e43701' date '22 July 2013' time '11:44:53.8 am' author 'fbs' ancestors ((name 'Kernel-fbs.793' message 'Kernel shouldn''t reference System. This lets System decorate Warning to provide nice user-level interaction while keeping UI concerns out of Kernel.' id 'ae933d33-a748-4827-ae19-49205c121d16' date '22 July 2013' time '11:09:34.652 am' author 'fbs' ancestors ((name 'Kernel-nice.792' message 'Finish solving the update problem: Merge fbs.791 + nice.779' id '3e734308-178a-4951-8996-91f073e112be' date '21 July 2013' time '3:47:13.718 pm' author 'nice' ancestors ((name 'Kernel-fbs.791' message 'Allow the loading of classes with nil environment. (This indicates that a class tracks its superclass'' environment.)' id 'a70ef892-e4ef-1a46-9aed-c95fd0ee4cd5' date '11 July 2013' time '8:58:41.496 pm' author 'fbs' ancestors ((name 'Kernel-fbs.790' message '#requirement, #isRequired, etc. are Trait things, so belong in the Trait package.' id '46c1f00e-cb0c-4a4f-b1e1-6d7753a78b22' date '10 July 2013' time '11:41:48.781 am' author 'fbs' ancestors ((name 'Kernel-fbs.789' message 'Move most of the Graphics-referencing methods to Graphics. #testJoystick: and #sweepHandIdleProcess have no senders in the base image. #currentCursor and #currentCursor: look like they should die (and have their senders call Cursor''s methods directly).Making MethodFinder''s references to Color and Point looks like it might require another registry-like thing, where packages tell MethodFinder about their internals.' id 'b65ace2f-db14-3e4c-9d5e-8d5f187cf836' date '7 July 2013' time '10:42:38.83 pm' author 'fbs' ancestors ((name 'Kernel-fbs.788' message 'Actually deprecate the deprecated Kernel methods.' id 'd82773ba-c570-2e4c-b757-b7eb3a457e30' date '6 July 2013' time '4:38:01.284 pm' author 'fbs' ancestors ((name 'Kernel-fbs.787' message 'All the other #stringFor: implementors live in *Etoys-tiles.' id '4db737f7-4391-be4f-be00-57ab4fd8ca10' date '6 July 2013' time '4:11:07.014 pm' author 'fbs' ancestors ((name 'Kernel-fbs.786' message 'Converter methods belong in the package to which the converted-to classes belong.' id 'dfe865c4-a40d-7044-b4c1-49c9aa2fadb3' date '6 July 2013' time '3:49:28.83 pm' author 'fbs' ancestors ((name 'Kernel-fbs.785' message 'Move ObjectOut to MorphicExtras-SqueakPage to be closer to the other sqp stuff. This at least separates SqueakPage code from Kernel, while we figure out how to properly disentagle things.' id 'c844ee59-dba5-ab4c-9ede-f6fb08725bcd' date '6 July 2013' time '2:58:36.802 pm' author 'fbs' ancestors ((name 'Kernel-fbs.784' message 'These xxx methods belong with the other SqueakPage methods, in MorphicExtras-SqueakPage.' id '80e20562-abe1-e64f-81ba-2e35d82ac8c7' date '6 July 2013' time '2:41:07.138 pm' author 'fbs' ancestors ((name 'Kernel-fbs.783' message 'Debugger support methods belong in Tools-Debugger.' id 'b1d6f27c-91e2-8c4a-ae42-b0b2f25b280b' date '6 July 2013' time '2:36:43.813 pm' author 'fbs' ancestors ((name 'Kernel-fbs.782' message 'Silly me, I forgot these guys.' id 'f5d9104d-dda9-e549-ae3a-98c2260f1e87' date '5 July 2013' time '10:10:27.614 pm' author 'fbs' ancestors ((name 'Kernel-fbs.781' message 'If not Tools, then System might be the right package for inspectors. But definitely not Kernel.' id 'db701432-13f0-0145-88ee-3c59cdd5b25b' date '5 July 2013' time '10:07:04.479 pm' author 'fbs' ancestors ((name 'Kernel-fbs.780' message 'Make Compression augment Kernel, and thus break the cyclic Kernel <-> Compression dependency.' id '081159f7-f3d1-a844-b62d-a5e4c784a296' date '5 July 2013' time '9:57:39.778 pm' author 'fbs' ancestors ((name 'Kernel-fbs.779' message 'Kernel -/-> Traits.' id 'e6029c34-53d1-a24e-8961-bb7c1cd4ad2a' date '2 July 2013' time '11:05:26.126 pm' author 'fbs' ancestors ((name 'Kernel-fbs.778' message 'More consolidation of the "System-Object Events" pieces. Note the removal of indirection through Object class >> #flushEvents. At some point we might want to deprecate this method because it doesn''t do anything useful.' id '883d00af-21bc-ee42-af7d-c15c19c491e4' date '30 June 2013' time '11:12:32.033 am' author 'fbs' ancestors ((name 'Kernel-fbs.777' message '* #traitComposition and friends aren''t Kernel methods, they''re means of dealing with changes in traits.* #printOn: belongs to ModifiedClassDefinitionEvent''s package, not Kernel.' id '41439d77-d04a-004c-94e2-68e5385d0915' date '29 June 2013' time '11:18:55.634 pm' author 'fbs' ancestors ((name 'Kernel-fbs.776' message 'System-Support isn''t the most natural place for this method, but it''s a vast improvement over Kernel.' id '0bfe45d6-0d61-7d4d-90ba-b18b3421d315' date '29 June 2013' time '11:08:04.333 pm' author 'fbs' ancestors ((name 'Kernel-fbs.775' message 'Don''t use Utilities. It needs to go.' id '1185b53c-5a7c-6442-bb20-2177e05ace9e' date '29 June 2013' time '11:02:47.13 pm' author 'fbs' ancestors ((name 'Kernel-fbs.774' message 'WindowColorSpec references belong in System-Support, not Kernel.' id '294f5ca8-9a98-ca45-a362-db16b7e5c63f' date '29 June 2013' time '10:36:49.383 pm' author 'fbs' ancestors ((name 'Kernel-fbs.773' message 'Break a strand in the Kernel -> System dependency by moving MethodReference references into System-Support.' id 'ab25943a-ccea-0b40-b616-a299a93acd04' date '29 June 2013' time '10:25:59.798 pm' author 'fbs' ancestors ((name 'Kernel-fbs.772' message 'Move things to do with object events to the System-Object Events subpackage.' id '7366bd8f-bc8c-754d-a817-291d33689207' date '29 June 2013' time '10:13:17.979 pm' author 'fbs' ancestors ((name 'Kernel-nice.771' message 'Start deprecating usage of \\\A long comment in \\\ tells the reasons for deprecating' id 'e6da6bb0-0aa4-4400-b96c-c53dc343584a' date '18 June 2013' time '11:28:04.495 pm' author 'nice' ancestors ((name 'Kernel-fbs.770' message 'Push the core (the actual kernel) of Exceptions-Kernel into Kernel-Exceptions, so that Kernel doesn''t depend on Exceptions.(I''d like to see domain specific exceptions pushed closer to their domains, rather than "cross-slicing" all exceptions together just because they''re exceptions. Hence the new Kernel-Numbers-Exceptions category.)' id '96386258-f4b8-4217-ad92-97749f3aba11' date '14 June 2013' time '2:09:30.742 pm' author 'fbs' ancestors ((name 'Kernel-fbs.769' message 'Avoid using Utilities; UIManager default provides a better hook.' id '29729ba9-7e21-44eb-8b8f-7e71e228aa6e' date '5 June 2013' time '8:54:16.943 am' author 'fbs' ancestors ((name 'Kernel-fbs.768' message 'These methods ask the user for something. (As in, that''s their primary purpose.) As such they belong in the same package as UIManager, ToolBuilder-Kernel.(I don''t see the value of these ''convenience'' methods, but I suppose others do.)' id 'b90884d6-3fbb-42ed-a13c-f04ed880c02e' date '3 June 2013' time '10:46:25.818 pm' author 'fbs' ancestors ((name 'Kernel-fbs.767' message 'StringHolder >> #spawn: belongs in Tools.' id 'fc8eee8d-348a-4b09-a363-07654221ce05' date '3 June 2013' time '10:40:55.66 pm' author 'fbs' ancestors ((name 'Kernel-fbs.766' message 'Object #chasePointers, #explorePointers are how you open up a PointerFinder, so belong in Tools.' id 'aa5fc2f1-520e-4e16-97f3-93932a539c4a' date '3 June 2013' time '10:29:02.57 am' author 'fbs' ancestors ((name 'Kernel-fbs.765' message '#openLabel: and #open are entries to the Tools, so belong in the Tools package.' id '48b07caa-e5dc-4908-9a19-cc561415bac5' date '3 June 2013' time '9:41:25.364 am' author 'fbs' ancestors ((name 'Kernel-fbs.764' message 'eToyStreamedRepresentationNotifying: -> EToys package.' id '54989dbd-2cdf-4879-871b-822f1d6141e7' date '3 June 2013' time '9:34:21.262 am' author 'fbs' ancestors ((name 'Kernel-fbs.763' message 'Object >> #localeChanged moved to System-Localization because it''s a localisation thing, and because I''d rather have System depend on Kernel than Kernel depend on System.' id '9f65f6b7-a199-40f1-8334-3564bfe3b063' date '2 June 2013' time '5:51:53.948 pm' author 'fbs' ancestors ((name 'Kernel-fbs.762' message 'Turn Promise into a fully chainable object with decent error handling.(This implements the Smalltalk equivalent of JavaScript''s Promises/A+ specification.)' id '189ac08f-d45b-40f8-b7cd-e183ae46f3bf' date '30 May 2013' time '11:07:50.674 pm' author 'fbs' ancestors ((name 'Kernel-fbs.761' message 'Signal a proper error for a missing Trait requirement, so the Debugger can catch it.' id 'b974ebc4-e7fb-4172-98e7-d0e3dc617d47' date '29 May 2013' time '10:19:06.481 am' author 'fbs' ancestors ((name 'Kernel-cmm.760' message '- Move #isKindOf: to ProtoObject to allow the PointerFinder to work with Proxies.' id '523782ae-3096-40ec-8031-77432a691908' date '26 May 2013' time '11:25:19.426 am' author 'cmm' ancestors ((name 'Kernel-fbs.759' message 'Fix minor typo.' id '1638624e-62cd-461f-a062-31edc1105d93' date '12 May 2013' time '11:58:00.306 am' author 'fbs' ancestors ((name 'Kernel-cmm.758' message '- Another ticky-tack commit because Monticello-bf.540 did not capture ALL package changes.  The comment for the prior package is wrong, it did not include this change because I failed to:  1) Copy the change text to the clipboard  2) click "Cancel"  3) Find a MC browser.  4) Click "Save"  5) Re-paste the change text.Please see my immediate ancestor for what this change is about.' id 'b64656cf-20bf-4bad-9fca-2750e1c67e67' date '3 May 2013' time '11:43:45.83 am' author 'cmm' ancestors ((name 'Kernel-cmm.757' message '- Added convenience methods for creating DateAndTimes relative to now.- When materializing Floats via fromIEEE32Bit:, use the canonicalized 0.0.' id '655c18f5-1a73-4fae-bd0d-0e2bb4bb06d7' date '3 May 2013' time '11:37:02.186 am' author 'cmm' ancestors ((name 'Kernel-dtl.756' message 'Remove Integer>>hex8. This is used only in VMMaker for printing hex representations of 32-bit values. It should be maintained as a VMMaker extension, along with whatever extension may be required for formatted printing of 64-bit values.Add Time class>>primPosixMicrosecondClockWithOffset in addition to primUTCMicrosecondClock and primLocalMicrosecondClock. There are three microsecond primitives that are (or will be) supported on all Cog and interpreter VMs that may be accessed as:{	Time primUTCMicrosecondClock .	Time primLocalMicrosecondClock .	Time primPosixMicrosecondClockWithOffset}' id 'ccdaa08e-5f15-4862-90bc-8413832f3363' date '30 April 2013' time '11:11:20.297 pm' author 'dtl' ancestors ((name 'Kernel-ul.755' message 'Added two methods to access primitive 240 and 241, which can provide microsecond resolution timestamps on Cog VMs.' id '7acc79da-c279-4097-a56f-7d44c94aa5f7' date '27 April 2013' time '10:07:32.072 pm' author 'ul' ancestors ((name 'Kernel-fbs.754' message 'Move #createStubMethod to Tools-Debugger.' id 'aefa8798-1ade-4e82-8689-faea726120f9' date '19 April 2013' time '8:38:06.709 am' author 'fbs' ancestors ((name 'Kernel-fbs.753' message 'Preserve Fraction''s invariant of always using fully reduced fractions.' id 'fed54ba8-20d7-48c6-b61f-939552ef780c' date '31 March 2013' time '9:48:19.626 pm' author 'fbs' ancestors ((name 'Kernel-fbs.752' message 'Increase the "polymorphitude" of numbers by supplying a default implementation of #zero, together with a few per-type specialisations to go with those we already have.' id '0724a0a2-6b96-4e07-94ed-79bdc4e2466b' date '30 March 2013' time '10:09:47.906 pm' author 'fbs' ancestors ((name 'Kernel-eem.751' message 'Now that the simulation guard is gone from doPrimitive:method:receiver:args:the simulation machinery can avoid stepping into it, allowingthe debugger to debug doPrimitive:method:receiver:args:' id 'ba80dd7e-4655-40c1-a0e1-d322c0d541e9' date '22 March 2013' time '2:53:15.234 pm' author 'eem' ancestors ((name 'Kernel-eem.750' message 'Avoid embeddedBlockClosures holding onto theClosureExtractor that created them.Avoid repeatedly calling endPC in embeddedBlockClosures scan.' id 'ebc85716-a4ee-436b-a229-397e78b85586' date '20 March 2013' time '2:06:11.127 pm' author 'eem' ancestors ((name 'Kernel-eem.749' message 'Less noise in abstractSymbolic sends.  Plus better sendprinting for both abstractSymbolic and symbolic if selectoris not a symbol.' id '73418d30-16f5-44e4-aca3-8a2ba22bc43c' date '15 March 2013' time '3:20:44.917 pm' author 'eem' ancestors ((name 'Kernel-nice.748' message 'Speed-up Integer+/-Fraction and Fraction+/-Integer because we know this does not require any gcd computation.This speed up cause minimal code duplication.' id 'e289a03d-ac61-40dd-9b28-4d950ddb1b76' date '11 March 2013' time '8:18:42.912 am' author 'nice' ancestors ((name 'Kernel-nice.747' message 'Second attempt to fix the fact that ClassBuilder is not cleaning cog VM jitted CompiledMethod cache.Any CompiledMethod used again before the end of newClass recompilation, might be jitted again.Thus the cache must be cleaned up again before final mutation time.This is particularly true of Parser/Compiler and probably some other Kernel objects.Note to the hunters: we use are using bullets of same caliber (primitive 116) to kill the bear.If it ever fails, next will be nuclear weapon (primitive 89), no matter the colateral download slow down which could result.Note about subclasses: since subclasses are mutated first, one could try to exhibit another cache clean-up failure.For example, if one super method of the subclass is used during ClassBuilder mutate:to:.Before crippling the code with more workarounds, I''ll wait for an example from third party, as for myself that''s enough brain fuck for the evening.' id 'd64b5740-5217-4ec9-b6b0-06922cc9b5d8' date '10 March 2013' time '10:03:30.578 pm' author 'nice' ancestors ((name 'Kernel-nice.746' message 'Fix ClassBuilder which previously failed to flush the cache of old CompiledMethod when the class changes of format.This failure to invoke primitive 116 can lead to COG VM crash (a cogit jitted method is not unlinked).This does not affect old interpreter which clear the caches thru primitive 119.It is essential that the newClass points to identity-preserved CompiledMethods of oldClass methodDictionary before recompiling so that primitive 116 be correctly invoked, particularly we must not clear methodDictionary with a MethodDictionary new..' id '0f9d411b-68a9-49eb-b37a-1bc4fb8fa36d' date '10 March 2013' time '7:52:48.738 pm' author 'nice' ancestors ((name 'Kernel-bf.744' message 'Sanitize Time class>>readFrom: to not read beyond the time. Use that to sanitize DateAndTime class>>readFrom:, too, avoiding the only known use of PositionableStream>>last. Time tests are still green.' id 'e3c35ac4-6571-4bcc-86d4-ccb613a8e631' date '4 March 2013' time '3:25:12.024 pm' author 'bf' ancestors ((name 'Kernel-nice.743' message 'Remove #printOnStream: #storeOnStream: and #propertyListOn:.' id 'e7b3b290-b257-4b07-8fdd-2011646a818d' date '3 March 2013' time '2:59:08.297 pm' author 'nice' ancestors ((name 'Kernel-nice.742' message 'Diminish excessive usage of ReadWriteStream' id 'b2026116-be3c-4da6-a0af-0f223c9521a8' date '24 February 2013' time '6:13:51.724 pm' author 'nice' ancestors ((name 'Kernel-nice.741' message 'Reduce the number of hardcoded constants used by #raisedTo:modulo:This will enable smooth transition to next generation of LargeIntegersPlugin.' id '15a282b0-84ac-4723-b44c-7dd91e9aebf0' date '24 February 2013' time '5:32:56.978 pm' author 'nice' ancestors ((name 'Kernel-eem.740' message 'Move the code to set the owning method of anAdditionalMethodState to the setter away from clients.Add an anti-sharing check.' id '9dce4ab5-fac8-4dc8-bbb7-9f9ca5b37fc6' date '23 February 2013' time '5:42:23.379 pm' author 'eem' ancestors ((name 'Kernel-fbs.739' message 'Stay in the debugger for longer. Part 3 of 5.Stack introspection so the Debugger doesn''t have to. Signal the new exceptions when necessary.' id '39126c7c-4c6c-4902-b753-18e0979bab69' date '7 February 2013' time '10:38:28.822 pm' author 'fbs' ancestors ((name 'Kernel-dtl.733' message 'Remove EventSensor>>wait2msUse of EventSensor>>wait2ms in sensor direct access to mouse and keyboard causes slow and incorrect keyboard handling in MVC. In newer Squeak images (3.9 and later), removing the delay restores normal MVC keyboard input.This change removes the wait2ms delay entirely. If the problem described in http://lists.squeakfoundation.org/pipermail/squeak-dev/2007-May/116185.html should reappear, a different solution will be required.Notes:In Squeak trunk, the wait2ms delay is invoked only when in MVC. However, Scratch (and possibly other applications) makes use of direct sensor access from Morphic (arguably this is an error in Scratch, but the usage exists nonetheless).Background:Recent thread in which StÃÂÃÂ©phane Rollandin identified the source of the problem:http://lists.squeakfoundation.org/pipermail/squeak-dev/2013-February/168526.htmlRationale for introducing the delay in earlier versions of Squeak:http://lists.squeakfoundation.org/pipermail/squeak-dev/2007-May/116185.html' id 'b74ab5eb-4f9f-4f1a-bf6d-90f8f60fb3c4' date '6 February 2013' time '9:02:02.046 pm' author 'dtl' ancestors ((name 'Kernel-eem.732' message 'Make CompiledMethod>>removeProperty:[ifAbsent:] get ridof the AdditionalMethodState if the resulting state is empty.Streamline BlockClosure>>newProcess[With:] which doesnot need to run unwinds if control reaches the end ofthe process.Use the abstract blockCreationBytecodeMessage to computeBlockClosure''s size instead of accessing bytecodes directly.' id 'd9c124ab-9da1-4785-bfa3-341b385fffcb' date '6 February 2013' time '1:10:49.952 pm' author 'eem' ancestors ((name 'Kernel-nice.731' message 'merge nice+bf 730' id 'c4663029-f1b5-48e3-ae29-402076e50f8f' date '17 January 2013' time '11:33:08.076 pm' author 'nice' ancestors ((name 'Kernel-bf.730' message 'Cache source files during class mutation for noticeable speedup with larger hierarchies.' id '287d829c-b04d-4165-abc5-e045d037bd6d' date '11 January 2013' time '12:10:54.539 pm' author 'bf' ancestors ((name 'Kernel-nice.729' message 'Use at:ifAbsentPut: instead of at:ifAbsent: [ at:put: ]This is an update of http://bugs.squeak.org/view.php?id=5667' id '4e9cfbca-a21e-472b-9a0e-d598a982af3b' date '2 January 2013' time '11:52:19.073 pm' author 'nice' ancestors ((name 'Kernel-nice.728' message 'Fix http://bugs.squeak.org/view.php?id=7605.Creating a new Float of size ~= 2 may crash the image.With this change it is safe to create a Float new (0.0), no use to forbid it.Thanks Levente' id 'c38e7675-1a9f-4697-827d-e6e5c9d3f15c' date '2 January 2013' time '10:27:22.828 pm' author 'nice' ancestors ((name 'Kernel-cwp.727' message 'Environments bootstrap - stage 3' id '035cc801-2619-49a8-965e-b61a1eada4e3' date '1 January 2013' time '7:01:18.073 pm' author 'cwp' ancestors ((name 'Kernel-cwp.726' message 'Environments bootstrap - stage 1' id 'f9e0f27b-a0ec-4827-a765-1b85d58cbfe8' date '1 January 2013' time '6:49:20.367 pm' author 'cwp' ancestors ((name 'Kernel-nice.725' message 'Fast-up large integer modulo operations (\\ and rem:)Implementation notes:Quotient and remainder are computed in a single LargeIntegersPlugin primitive (see digitDiv:neg:) so it''s faster to just use it.For LargeInteger with 64 bits or less, LargeInteger primitives (31 32 33) are faster than the plugin (especially in COG) so try them first.This results in a 2x speed up of modulo operations in 4.2.5 VM (whatever bit length), and a 2x speed up in COG VM for bit length > 64.There is a penalty of 15% in COG for #rem: when bit length <= 64 because there is no primitiveRem...Well, I added primitiveRem and it is in both VM branches, but it has no primitive number assigned.If we assign a primitive number (20 ?) we can expect a 5x speed up for rem and bitLength <= 64.' id '52a4994f-63bc-4f71-9f8f-6f2fad460bde' date '1 January 2013' time '4:47:30.911 pm' author 'nice' ancestors ((name 'Kernel-nice.724' message 'Merge 0.0 negated' id 'c9358112-8055-4606-87a2-24ae571d8650' date '1 January 2013' time '4:05:23.848 pm' author 'nice' ancestors ((name 'Kernel-nice.723' message 'Speed-up LargeInteger asFloat when highBit > Float precision.' id '25ceb347-c410-4991-8525-1eba938566f3' date '1 January 2013' time '3:56:14.701 pm' author 'nice' ancestors ((name 'Kernel-nice.720' message 'ScaledDecimal>>#log and #ln should be immune to intermediate Float overflow/underflow' id '0095160b-f0c9-48d2-8ed2-c19c408430a2' date '11 December 2012' time '10:51:40.587 pm' author 'nice' ancestors ((name 'Kernel-nice.719' message '#floorLog: is not robust to Float overflow/underflow while #log: now is. Let the robust #log: do its job.' id 'a78236cc-0105-464b-a69c-4df3f6926f1e' date '11 December 2012' time '7:47:52.216 pm' author 'nice' ancestors ((name 'Kernel-ar.718' message 'Fix broken behavior in nested valueWithin:onTimeout: usage.' id '34faba8b-abd8-a749-b293-9e843f1b1eeb' date '4 December 2012' time '8:40:21.883 pm' author 'ar' ancestors ((name 'Kernel-cmm.717' message 'NumberParser>>error: signal a NumberParserError instead of Error.' id '9f98e64f-c1da-4c6e-94ec-c07d48dd7a22' date '24 November 2012' time '6:26:24.16 pm' author 'cmm' ancestors ((name 'Kernel-nice.716' message 'Let (0.0 printShowingDecimalPlaces: 2) = ''0.00''' id '2d5c476b-182b-4c53-a260-ed0da80e0bff' date '5 November 2012' time '9:44:23.181 pm' author 'nice' ancestors ((name 'Kernel-eem.715' message 'Faster less wasteful sendsSelector:' id '902c113e-b1bc-47ec-b969-6642fd930104' date '5 November 2012' time '9:52:55.755 am' author 'eem' ancestors ((name 'Kernel-cwp.714' message 'Merge in cwp.709: Remove support for per-class settings of #allowUnderscoreSelectors.' id 'fd5a8602-5b4f-46d0-86ee-c89e91f2e20f' date '25 October 2012' time '12:16:19.282 pm' author 'cwp' ancestors ((name 'Kernel-eem.713' message 'Make ClosureExtractor produce properly nested closures.If the closures ever get passed on to DebuggerMethodMapinstances they can confuse the debugger if not properlynested.' id 'e8650d8a-3b37-4fb3-9e2f-8bc074c2d3d6' date '24 October 2012' time '4:04:09.929 pm' author 'eem' ancestors ((name 'Kernel-eem.712' message 'Make CompiledMethod>>scanFor: accept a block or a number.It''s too easy to say "m scanFor: [:b|...]" and it return nothingbecause the closure is never equal to a byte, and there''s no error.' id '865633cc-22d5-48fe-8768-b53c0567b3fd' date '8 October 2012' time '11:29:17.81 am' author 'eem' ancestors ((name 'Kernel-ul.711' message 'Accept a block as description (besides a string) in Object>>assert:description:. This ensures that the method''s behavior is the same as TestCase>>assert:description:''s.' id '34bbbd59-62f6-8a4c-98a1-4277ce568856' date '21 September 2012' time '3:52:01.69 am' author 'ul' ancestors ((name 'Kernel-bf.710' message 'For printing Time, do not use Floats. E.g., ''6:27:08.649'' asTime was printed as ''6:27:08.649000000000001 am'' due to converting to floating point for printing, when the representation itself uses precise numbers (nanoseconds). This fix introduces Integer>>printOn:asFixedPoint: which might not be the best idea; if some other dialect has an existing method that does something similar we should use that selector.' id '772d3014-9910-4231-bee1-36d35938014d' date '4 September 2012' time '1:54:08.616 pm' author 'bf' ancestors ((name 'Kernel-ul.709' message 'Various changes:- improved Object >> #inboundPointersExcluding:. Better results (less noise) and performance. Uses a marker object instead of 0.- introduced ProtoObject >> #pointsOnlyWeaklyTo: which returns true if the receiver only has a weak reference to the argument, otherwise false. The reason why it''s in ProtoObject is that #pointsTo: is there too. Implementation from Pharo by Igor Stasenko.- added Process >> #environmentAt:ifAbsentPut: which is useful for direct manipulation of the environment of Processes- introduced Behavior >> #isCompact and changed two methods which can use this method directly' id '359e6dd2-5981-ae43-a5bd-c687dd1d5614' date '4 September 2012' time '12:42:11.196 am' author 'ul' ancestors ((name 'Kernel-eem.708' message 'Fix CompiledMethod>equivalentTo:.  Old implementationassumed RB parse trees which are comparable.' id '8d0ba08e-9374-4d98-8f6e-93d5fd9fbea2' date '24 July 2012' time '3:28:27.644 pm' author 'eem' ancestors ((name 'Kernel-bf.707' message 'Fix fileout of changeset missing override methods.' id '52d2a763-5135-4fb5-9c1c-cdcdd13013a6' date '24 July 2012' time '11:05:11.73 am' author 'bf' ancestors ((name 'Kernel-eem.706' message 'Remove redundant code in CompiledMethod>>copyWithTrailerBytes: that worked around an obsolete bug' id '0e281a27-0e2d-42e5-ab2f-11f4cbabe6ca' date '23 July 2012' time '2:03:27.407 pm' author 'eem' ancestors ((name 'Kernel-dtl.705' message 'Patch by JohnReed Maffeo for Mantis 7693: DateAndTime readFrom: does not recognize $Z as a valid timezone designator. http://bugs.squeak.org/view.php?id=7693Change Set:		DateAndTimeDate:			9 July 2012Author:			jrmMethod readFrom: in Class DateAndTime modified to interpret $Z as a valid time zone designator. Associated test modified to verify the new behavior.' id 'b52aa671-18a1-43f6-b389-4430bfc0fe9a' date '9 July 2012' time '10:38:16.262 pm' author 'dtl' ancestors ((name 'Kernel-ul.704' message 'Merged. Every package should have one head version in the Trunk.' id '224efcec-9920-7b4f-9fad-46ae9554a560' date '5 July 2012' time '11:22:10.913 am' author 'ul' ancestors ((name 'Kernel-eem.703' message 'Fix copying of the AdditionalMethodState on CompiledMethodcopy.  Fix setting copied pragmas'' methods to the copiedmethod for both CompiledMethod>>copyWithTrailerBytes: andCompiledMethod>>copy.' id '072b8788-6194-499e-99f3-877f353d3f8e' date '4 July 2012' time '1:52:09.978 pm' author 'eem' ancestors ((name 'Kernel-bf.702' message 'Make 7 more Date/Time tests pass. To make the remaining 3 tests pass we need to decide if unspecified timezones should be taken as local time (as per ISO 8601) or as UTC (as per changes by cmm). Currently there is a mix if the two.' id 'a349f289-2b28-4e98-abfc-5b4d199aa8f1' date '4 July 2012' time '12:10:20.238 am' author 'bf' ancestors ((name 'Kernel-bf.701' message 'Fix for Date yesterday - Date today (thanks to Glen Paling for finding this)' id '25125f3c-0ab4-4421-aef5-71cb84f20fa8' date '3 July 2012' time '6:32:34.351 pm' author 'bf' ancestors ((name 'Kernel-eem.700' message 'Back out of my bogus fix to runUntilErrorOrReturnFrom:.My "fix" breaks non-local return in the debugger.I can''t find my original case that justified the new code(although it was that in the debugger too much stack wasunwound), and so it needs to be backed-out and we needto find good test cases to fix this correctly.' id '18c57dcf-d75b-4c61-b5a3-67a9f8cfa4f6' date '28 June 2012' time '10:30:56.246 am' author 'eem' ancestors ((name 'Kernel-fbs.699' message 'Remerge Kernel-nice.695:Provides a new version of significandAsInteger that relies on regular Float arithmetic and regular asInteger conversion.In case of exceptional values, use the old behaviour, that is directly extract the bit pattern, but without implied one at position 53.Marginally faster than old version - sorry, not significantly.' id '82d9060f-aaf6-4a84-934f-c7bcdd053e56' date '11 June 2012' time '9:15:23.072 pm' author 'fbs' ancestors ((name 'Kernel-fbs.698' message 'Remerge Kernel-nice.694:Protect floorLog: 2 for case of exceptional float values (because exponent does not)Change exponent primitive fallback code to avoid a recursion with floorLog2:Note that I created a separate selector #exponentFromBitPattern for handling fallback, because it''s easier to test.' id 'ceb4e4d0-4031-429d-9001-dd4dc44258ac' date '11 June 2012' time '9:12:51.486 pm' author 'fbs' ancestors ((name 'Kernel-fbs.697' message '* The resolver instvar is initialised to an Array so #ifNotNil: is a no-op.* #evaluateResolver: reimplemented #cull:; rather use BlockClosure''s version - less duplication.' id 'bcec51c0-7e42-4f78-897b-73b99f088354' date '8 June 2012' time '2:58:00.068 pm' author 'fbs' ancestors ((name 'Kernel-nice.693' message 'Merge nice.692 (reading Fraction from Stream)add a comment to the postscript just to force a rehashAll.' id 'e88d4aab-9e87-4e64-82cd-0475d919faa5' date '3 June 2012' time '1:36:01.517 am' author 'nice' ancestors ((name 'Kernel-eem.692' message 'Implement CompiledMethod>>#hash, both to accord withCompiledMethod>>#= and to override ByteArray>>#hashwhich looks at all bytes of the receiver and hence mayproduce a variable hash if the GC moves literals in a method.' id '72f75218-3cfc-4575-b159-8de0e44aa479' date '27 May 2012' time '3:08:41.389 pm' author 'eem' ancestors ((name 'Kernel-nice.691' message 'Grace period is over, publish and merge the changes for printing Floating point with fixed precision.' id 'f69b524f-83bb-4ef0-b084-e7a96dd5d33e' date '22 May 2012' time '10:14:29.897 pm' author 'nice' ancestors ((name 'Kernel-eem.690' message 'Add Integer>hex8.  Arguablty this should be an extension inVMMaker, but since hex isn''t, this isn''t either (historical).Refactor CompiledMethodTrailer to allow subclasses toinstantiate classes other than CompiledMethod.Add CompiledMethod>referredInstVars' id '86741d23-9dcd-4c36-b86e-99d260c22445' date '20 May 2012' time '11:45:51.817 am' author 'eem' ancestors ((name 'Kernel-nice.689' message 'Let #floorLog: be exact in the base used by underlying Float implementation (currently 2 is hardcoded because Float class>>base was not implemented).In other cases, warn about possible rounding errors.' id '06728744-bdfb-4e41-aa4c-39da40f860a4' date '16 May 2012' time '9:32:53.987 pm' author 'nice' ancestors ((name 'Kernel-nice.688' message 'Provides a naive #printShowingMaxDecimalPlaces: and #printOn:maxDecimalPlaces:To be tested...{0.7 printShowingMaxDecimalPlaces: 3.2.0001 printShowingMaxDecimalPlaces: 3.-1.9994 printShowingMaxDecimalPlaces: 3.}' id 'ad83d134-2a4e-4f15-b38a-363e2da73f2b' date '15 May 2012' time '11:21:24.599 pm' author 'nice' ancestors ((name 'Kernel-eem.687' message 'Provide a more helpful comment for Class>>copy.' id '66ea6288-0642-439c-bc13-ae34900d2382' date '15 May 2012' time '9:46:07.158 am' author 'eem' ancestors ((name 'Kernel-nice.686' message 'Improve DateAndTime hash speed by ~2 order of magnitude with a collision rate of ~1 per 10,000, following suggestion of pad, reviewed by nice.Care to HashedCollection rehashAll in postscript.' id 'f59cead1-1757-4e97-9ffc-19fa5a8dd384' date '11 May 2012' time '10:49:19.244 pm' author 'nice' ancestors ((name 'Kernel-nice.685' message 'Rename Number class>>#readSqueakSyntaxFrom: into #readSmalltalkSyntaxFrom:This is to provide a common API across dialects for external packages since both VW7.x and Pharo2.0 have #readSmalltalkSyntaxFrom:Note that Number syntax may vary slightly across dialects and #readSmalltalkSyntaxFrom: is to be understood "in local dialect"...#readSqueakSyntaxFrom: was quite recent and not used in trunk, so I removed rather than deprecate. If you don''t agree, raise your voice.' id '2febaac6-3ff5-3640-abfd-068dce4f0a2b' date '4 May 2012' time '10:51:32.635 am' author 'nice' ancestors ((name 'Kernel-eem.684' message 'Implement endPC numArgs and numTemps for closuresand contexts (both block and method activations).Provide CompiledMethod>abstractBytecodeMessagesDo:et al.Implement BlockClosure>isClean to identify self-contained blocks.' id 'e838a325-27ec-4a62-a907-d4059451a046' date '26 April 2012' time '11:07:37.737 am' author 'eem' ancestors ((name 'Kernel-nice.683' message 'Merge with nice.652 (Float unambiguous printing).' id 'a7c12ee7-fee9-ae44-b849-f314f0859c25' date '26 April 2012' time '7:06:10.666 pm' author 'nice' ancestors ((name 'Kernel-eem.682' message 'Faster non-local return through unwind-protects by notignoring the firstUnwindContext supplied by the VM.' id '700ce759-d9db-45ed-9929-20018642651d' date '25 April 2012' time '10:58:44.627 am' author 'eem' ancestors ((name 'Kernel-bf.681' message 'Use new classify:under:suppressIfDefault:logged: method after config map ensured it is loaded.' id '28c3d2c8-94e5-45aa-8b18-50937f2b9865' date '19 April 2012' time '6:31:00.093 pm' author 'bf' ancestors ((name 'Kernel-bf.680' message 'When manually recategorizing a method, make an entry in the changes file. Otherwise the methpd''s latest change record in the changes file will not match what''s in the image, confusing Monticello.' id 'b7735cff-3ec1-47d5-9c49-6f054f21f317' date '19 April 2012' time '6:23:49.174 pm' author 'bf' ancestors ((name 'Kernel-eem.679' message 'Fix loading of CompiledMethod subclasses.  The old codejust used CompiledMethod''s format, which includes itscompact class index, hence resulting in instantiating thesubclass returning an instance of CompiledMethod.  Thenew code masks out CompiledMethod''s compact class imdex (if any) and masks in the right compact class index.' id 'aa8e1b1a-a108-4228-91bf-c996fa4b5b26' date '18 April 2012' time '10:40:18.574 am' author 'eem' ancestors ((name 'Kernel-eem.678' message 'Provide a kbdTest for the EventSensor.' id 'a1560bd8-28a8-4167-a5ae-d3da0cd21c70' date '18 April 2012' time '10:29:16.009 am' author 'eem' ancestors ((name 'Kernel-eem.677' message 'Add the 4 argument perform:with:with:with:with: for Cog andwho ever else.' id '94b37f14-3ec9-477d-9269-d90ed23b82b4' date '31 March 2012' time '1:44:09.167 pm' author 'eem' ancestors ((name 'Kernel-eem.676' message 'Neater simpler, correct implementtion of #once for thecurrent Squeak closure implemenation which lacks cleanblocks.' id '54422144-91c1-4c63-9fbe-8acb5733e35f' date '28 March 2012' time '6:31:09.818 pm' author 'eem' ancestors ((name 'Kernel-eem.675' message 'Fix the improved decompileWithTempNames for doitswithout temp names. 673 breaks e.g.	DecompilerTests new testRemoteTemp' id '44dbc698-62dc-4f6b-afd0-c987fdadb1f7' date '19 March 2012' time '2:51:13.711 pm' author 'eem' ancestors ((name 'Kernel-eem.674' message 'Make the improved decompileWithTemps function in the abandoned sources case (where a method holdsTempNames).' id 'b866b3fd-2e22-4188-a09a-6292ff0eb8b4' date '19 March 2012' time '12:53:33.739 pm' author 'eem' ancestors ((name 'Kernel-bf.673' message 'Fix decompileWithTemps (moving the better logic the Browser used into CompiledMethod), and use it when getting a method node. This makes the Debugger see the same decompiled source as the Browser.' id 'ed8f09cb-8fd5-4bbe-b9a6-1aab2d7f0dc0' date '19 March 2012' time '8:07:23.064 pm' author 'bf' ancestors ((name 'Kernel-cmm.672' message '- Merged globalized Timespans fix.' id '1c8ff441-2e76-4094-8c72-4e3cf8bcb90a' date '14 March 2012' time '2:11:21.53 pm' author 'cmm' ancestors ((name 'Kernel-cmm.671' message 'Decided against the localized vs. globalized mode.  Timespans created in the context of an offset will start in that offset.  When no context is available, the defaultOffset for Timespans must be zero.  For example, two ways to make a Date for today:	Date today.  ''start is midnight at offset zero.  Will compare successfully to other Date today results.''	DateAndTime now asDate.  ''In this case, the start is midnight of the local time-zone.  It can only compare equally to Dates of its time-zone.''' id '9c0e18ac-1c8f-4ae6-b39e-d487720e8580' date '10 February 2012' time '4:58:49.106 pm' author 'cmm' ancestors ((name 'Kernel-cmm.670' message 'Perform initialization required for prior change in the postscript.' id 'b6408357-975c-4212-93c5-7932cc175306' date '5 February 2012' time '2:32:50.946 pm' author 'cmm' ancestors ((name 'Kernel-cmm.669' message 'Introduced Timespan class>>defaultOffset.  This is the offset that will be used for creation of all Timespans when an offset is not specified.  When an offset is specified or involved in construction or calculation, the result is now produced in terms of the source offset.	For example, Date today now produces a globalized date by default.  However, "Date starting: (DateAndTime year: 2004 month: 2 day: 29 hour: 13 minute: 33 second: 0 offset: 2 hours)" produces a Date.whose start is expressed in terms of UTC+2.	The default defaultOffset is Duration zero so that Squeak will have fast, globalized Dates out of the box.  Globalized Dates are common for applications.	Legacy localized Dates can be obtained by evaluating "Date localize" so that, when an offset is not specified or otherwise involved in the input, the local offset will be used.' id '5ddec343-01ad-4e76-b32c-299fac68ec09' date '3 February 2012' time '5:55:11.175 pm' author 'cmm' ancestors ((name 'Kernel-eem.668' message 'Rip out the "prevent me debugging myself" primitive 19from ContextPart>doPrimitive:method:receiver:args:.' id '6d7c03fa-7e34-49ee-af59-08c26564f9ef' date '30 January 2012' time '4:07:10.324 pm' author 'eem' ancestors ((name 'Kernel-cmm.667' message 'Fix copying a Stopwatch.' id '40c83fd8-7462-4d3e-807e-ead52745f4eb' date '28 January 2012' time '4:37:01.086 pm' author 'cmm' ancestors ((name 'Kernel-ul.666' message '- Fixed Integer >> #isPowerOfTwo which returned true for 0. Added optimized versions to Integer''s subclasses.- Updated MethodDictionary class >> #sizeFor: to be error resistant if the semantics of #asLargerPowerOfTwo would change.' id '7a3266d0-57d3-3149-992f-5d3a6959c043' date '23 January 2012' time '3:19:39.301 am' author 'ul' ancestors ((name 'Kernel-nice.665' message 'merge Kernel-nice.644Add Integer>>bitCount to count the bits set (to 1) in an Integer.' id '3122f4bd-6c16-4919-9b90-47080e9365cb' date '22 January 2012' time '6:13:29.686 pm' author 'nice' ancestors ((name 'Kernel-nice.664' message 'merge Kernel-nice.656Remove one unused message: now that Integer is polymorphic to Fraction he never has to #adaptToFraction:andSend:' id 'fd5de2b6-9257-4184-bd16-498faaca6329' date '21 January 2012' time '4:44:27.824 pm' author 'nice' ancestors ((name 'Kernel-bf.663' message '- dispatch events to HostWindowProxy- add EventSensorConstants for window events and touch events' id '30a6e9d4-3733-4160-8b28-78a6482c1de0' date '5 January 2012' time '6:41:16.427 pm' author 'bf' ancestors ((name 'Kernel-ul.662' message '- fix: even empty MethodDictionaries should have one slot' id 'daeab859-78f8-5249-8495-57902d12d835' date '21 December 2011' time '4:26:32.078 am' author 'ul' ancestors ((name 'Kernel-laza.661' message 'Make the recategorization of a class be recorded in the changes file' id 'e2deef86-7fa0-48f6-80a8-256b68e45a1a' date '14 December 2011' time '4:53:54.778 pm' author 'laza' ancestors ((name 'Kernel-dtl.658' message 'The primitive fallback code in object:perform:withArguments:inClass: should test ''selector isSymbol'' rather than ''selector isMemberOf: Symbol'' because #someSelector isMemberOf: Symbol ==> falseObserved when running testMirrorPerform on a VM with failing primitivePerformInSuperclass, resulting in a misleading error message.' id '8f8f6e77-b113-446b-b593-aa5aa0f8db4e' date '11 December 2011' time '7:50:47.904 pm' author 'dtl' ancestors ((name 'Kernel-ul.657' message 'Merged.' id '9474fac1-19c1-6d46-91d8-0842ee711d38' date '9 December 2011' time '11:25:31.967 am' author 'ul' ancestors ((name 'Kernel-dtl.656' message 'For Squeak 4.3 release code freeze, temporarily revert previous ReferenceStream changes due to unresolved issues (see http://lists.squeakfoundation.org/pipermail/squeak-dev/2011-December/162386.html). The updates will be reintroduced following the Squeak 4.3 release.Packages affected:  Kernel-Objects  System-Object Storage  Tests-Object Storage' id 'ddfcad11-16e3-4649-9bda-5fa0dc8254e1' date '7 December 2011' time '7:32:57.155 pm' author 'dtl' ancestors ((name 'Kernel-dtl.655' message 'Fix ReferenceStream handling of weak references. Test and patches by Juan Vuletich.<http://lists.squeakfoundation.org/pipermail/squeak-dev/2011-November/162285.html>Packages affected:  Kernel-Objects  System-Object Storage  Tests-Object StorageIf we serialize a model with weak references to views, only the model should be serialized and not the views.The bug became apparent only when dumping a model to a SmartRefStream, that calls #references, and the serialized stream was later materialized in an image where the view classes had been deleted. In such rare cases, materialization would fail when trying to reference these absent classes. If serializing to a ReferenceStream, the bug didn''t become apparent (views were never serialized). If serializing to a SmartRefStream, but view classes still existed, the bug didn''t really become apparent (because views were not actually deserialized), the only effect was a larger file.' id 'a7fda999-52a1-42f1-92da-9cdae7a9614a' date '27 November 2011' time '6:50:19.012 pm' author 'dtl' ancestors ((name 'Kernel-bf.654' message '- fix class vars not showing up in menu while a browser''s class side is selected' id 'd13de9a3-b2e6-403e-ac68-66d94cb15a79' date '17 November 2011' time '2:18:37.428 pm' author 'bf' ancestors ((name 'Kernel-nice.653' message 'Minor refactoring of isProbablyPrime- Add more comments (tell it''s a Miller Rabin test, tells about probabilities)- avoid repeated shift when #lowBit can help doing it once- refactor Knuth "P3" test to a simpler expression- and restore the fact that there is a step "P4" before "P5"' id 'd149a4f7-f537-4f76-9b79-367acd0aa832' date '15 November 2011' time '11:23:38.908 pm' author 'nice' ancestors ((name 'Kernel-laza.649' message 'Make protocol changes be recorded by the changes file.' id '9ee9cceb-4b76-3d41-8a57-bd0b6eb79dc0' date '3 November 2011' time '1:09:36.555 am' author 'laza' ancestors ((name 'Kernel-eem.648' message 'First part of changes to restore protection against infiniterecursion on printing circular array literals.' id 'c3ee000c-6816-4eff-9f24-4ddc497c4171' date '2 November 2011' time '12:58:59.757 pm' author 'eem' ancestors ((name 'Kernel-nice.647' message 'Optimize #ln and #log as in Pharo.1) SmallInteger just inherits from super (^self asFloat log)2) LargePositiveInteger can avoid self > ÃÂÃÂ  guard3) LargeNegativeInteger can goto Error (no raise, just kidding)4) Fraction can avoid arithmetic because (a/b) log = (a log - b log) and because a log or b log are unlikely to overflow - (10 raisedTo: (10 raisedTo: 308)) is likely to exhaust your memory before any overflow occurs ;).' id '68374059-00c3-4605-bfb3-615f3793071a' date '2 November 2011' time '7:50:14.247 pm' author 'nice' ancestors ((name 'Kernel-nice.646' message 'There might be a best inexact square root approximation than Float infinity to some LargePositiveInteger in the range (1<<54-1<<970 to: 1<<54-1<<1994)' id 'cd46101c-40a4-49fd-b358-a8d0c555810f' date '29 October 2011' time '3:25:43.994 pm' author 'nice' ancestors ((name 'Kernel-nice.645' message 'Yet another version of #nthRoot: from Cuis1) Receivers too big for Float arithmetic but without exact answer, and a better float than infinity is possible.2) Besides, a small performance tweak: don''t call ''selfAsFloat nthRoot: aPositiveInteger'' if the result will be infinity, i.e. if the receiver is infinity.' id '6c7fe149-d362-481d-803f-eecbec00619c' date '29 October 2011' time '11:42:54.825 am' author 'nice' ancestors ((name 'Kernel-ael.643' message 'Proposed change for enabling both Yellow and Blue buttons from a two-button mouse in Cog VM' id '1fb9163b-7fc4-7946-a812-27626936cc50' date '19 October 2011' time '4:09:37.67 pm' author 'ael' ancestors ((name 'Kernel-nice.642' message 'Correct my own bugs, (-3/2) log should raise a DomainError, not an infinite loop...' id '26bbac76-79b8-4600-ac86-f60a02ad6da3' date '19 October 2011' time '10:11:56.9 pm' author 'nice' ancestors ((name 'Kernel-nice.641' message 'Correct #nthRootTruncated: (it did call #nthRootFloor:)Let #nthRoot: retry in exact arithmetic if ever Float overflows.' id 'e31730ef-2db4-42e3-aa0e-299e45c955ac' date '19 October 2011' time '8:44:12.297 pm' author 'nice' ancestors ((name 'Kernel-nice.640' message 'Add Integer>>#nthRootTruncated:Simplify Integer>>#sqrtFloorA pity this last one was not named sqrtTruncated for consistency...(I think I saw sqrtTruncated in st80 v2.5, or was it in Smalltalk V ?)' id '34b1c868-c862-4f76-ab25-28e24f840384' date '17 October 2011' time '11:02:36.274 pm' author 'nice' ancestors ((name 'Kernel-nice.639' message 'Complex>>asComplex was missingThanks Werner Kassens.' id 'b64cb4d7-96d6-4210-8973-433a1fcbdeb6' date '16 October 2011' time '6:56:06.917 pm' author 'nice' ancestors ((name 'Kernel-nice.638' message 'Cheaper #mightBeASquare (only test expensive lowBit where necessary).Remove powers of 2 before performing sqrtFloor on a large integer.' id '83cd4ee4-8be1-410e-9663-dcbd2e6f07b9' date '15 October 2011' time '12:01:04.127 am' author 'nice' ancestors ((name 'Kernel-nice.637' message 'Implement ScaledDecimal>>nthRoot:#mightBeASquare now verifies whether the receiver is an even power of two.' id '90981f89-5348-4bf9-8981-4cc51da6bc29' date '14 October 2011' time '10:28:53.269 pm' author 'nice' ancestors ((name 'Kernel-nice.636' message 'Fix ScaledDecimal which didn''t work anymore, and let it be exact when possible.' id '87b3aaea-65b6-4ebf-8855-ef8f27bcb0c3' date '14 October 2011' time '10:05:36.672 pm' author 'nice' ancestors ((name 'Kernel-nice.635' message 'Integrate great changes Juan made in Cuis:- make #sqrt exact when possible.- compute #nthRoot:' id 'b27ad01f-a82e-460f-8cc5-578ea8a77972' date '14 October 2011' time '9:48:14.9 pm' author 'nice' ancestors ((name 'Kernel-nice.634' message 'Move Complex conversion (#asComplex #adaptToComplex:andSend:) one level upper in Number.Use squared where possible in Complex.' id 'ec28e2e7-ee3e-41a9-9eed-dd75acc1a7cf' date '14 October 2011' time '12:34:15.894 am' author 'nice' ancestors ((name 'Kernel-eem.633' message 'Pragmas need to be #=, not just #==.MethodPragmaTests now all pass.' id 'b7fedf5b-2cb3-4420-8f0d-c66ac6715c53' date '4 October 2011' time '12:28:38.308 pm' author 'eem' ancestors ((name 'Kernel-eem.632' message 'Avoid work in common case of setting method''s sourcepointer to zero when already zero.' id '807c955e-061f-4006-b9c2-981ffd241b4c' date '29 September 2011' time '2:09:31.751 pm' author 'eem' ancestors ((name 'Kernel-ul.631' message 'Merged.' id '7793f80d-42dc-2a45-afc1-67ce003aba45' date '27 September 2011' time '6:47:40.645 pm' author 'ul' ancestors ((name 'Kernel-eem.630' message 'Provide a hook for subclasses to substitute an alteredmethod when deocmpiling.  This aoids an infinite recursiondecompiling installed MwMethodWrapper methods.' id '71012e54-3304-4e32-9ab0-46fa56f149c5' date '27 September 2011' time '8:45:29.372 am' author 'eem' ancestors ((name 'Kernel-nice.629' message 'Define and use #highBitOfByte when we know we operate on byte boundary.And, oups, remove ===> which crept in trunk (was solely for testing speed).' id 'efcd1a80-4b32-4ccf-bdb7-8548ec1f040b' date '26 September 2011' time '9:26:30.229 pm' author 'nice' ancestors ((name 'Kernel-nice.628' message 'Boolean subclasses know better how to behave, so if we delegate ==> , we can implement a branch-less implication. Though I wonder if this is really an optimization in case of a JIT VM...{[true ==> [1 > 2]] bench.[false ==> [1 > 2]] bench.}#( ''6,440,000 per second.'' ''6,690,000 per second.'') "BEFORE"#( ''6,410,000 per second.'' ''7,030,000 per second.'') "AFTER"' id '9c77ee63-103f-4577-b987-5ee0f539d582' date '26 September 2011' time '9:10:09.363 pm' author 'nice' ancestors ((name 'Kernel-nice.627' message 'Improve Fraction and Integer asFloat by:- removing unreachable branch- removing un-needed arithmetic- renaming temps- using Float precision explicitly rather than hardcoded magical numbers- clarifying commentsThe resulting code shall be clearer and a bit faster than previously.' id 'c09ead19-3aa6-482b-b2cc-f6549bc67eb6' date '25 September 2011' time '12:55:51.623 pm' author 'nice' ancestors ((name 'Kernel-ul.626' message 'MethodDictionary changes:- fix: #compact shouldn''t increase the load factor above 75% (see #sizeFor: on the class side)- speed up #compact and #compactAllInstances by using #copyFrom: instead of #becomeForward: if the capacity of the dictionaries can''t be reduced- recategorized some class side methods- use cascade in #at:put:' id 'c917ec7b-b1ed-1849-bfb3-292cb3898035' date '18 September 2011' time '3:18:04.315 pm' author 'ul' ancestors ((name 'Kernel-ul.625' message 'Use #copyFrom: and #becomeForward: instead of #become: during changes of MethodDictionaries. These changes assume that #copyFrom: is atomic (just like #become: and #becomeForward:), so the MethodDictionaries never get into an inconsistent state.These changes speed up #rehash, #removeAll, #removeKey:ifAbsent and also #compact if the dictionary already has the smallest possible capacity. This means that #rehashAllInstances and #rehashWithoutBecome is not necessary anymore, so those were removed.' id '14b3a206-0a64-6049-83f2-fa4a151207cf' date '18 September 2011' time '11:54:02.722 am' author 'ul' ancestors ((name 'Kernel-ul.624' message '- merged Kernel-ul.613 and Kernel-ul.619- ProcessLocalVariable class >> value: returns it''s argument just like assignments' id '540746a6-bd79-7543-bcad-ea7f1973d6c5' date '17 September 2011' time '5:42:53.901 pm' author 'ul' ancestors ((name 'Kernel-eem.623' message 'Get use of new: and basicNew: in AdditionalMethiodStatecorrect (for convenience of subclasses).' id 'b73bf0f2-ed5e-4081-953c-05e68c29cd89' date '16 September 2011' time '11:28:02.425 am' author 'eem' ancestors ((name 'Kernel-eem.622' message 'Remove the noyYetImplemented flag now that subclassingAdditionalMethodState is implemented.' id '1a202985-ef6c-439b-bd93-0c59ccd9e9b7' date '16 September 2011' time '11:12:59.097 am' author 'eem' ancestors ((name 'Kernel-eem.621' message 'Make AdditionalMethodState>copyWith:/copyWithout: subclass-friendly, copying all inst vars.Also make then shallowCopy pragmas and associations toproduce distinct copies.' id '7946debc-5642-4f36-8cce-927c855d3e9e' date '16 September 2011' time '10:43:29.034 am' author 'eem' ancestors ((name 'Kernel-eem.620' message 'Kernel half of second part of changes to revive ability tocreate subclasses of CompiledMethod.  Other half isCompiler-eem.215.Fix nasty bug with AdditionalMethodState copying.  It wasn''tcopying the associations so properties would end upshared between copies sicne the associations ended upshared.Add id hash to printing of AdditionalMethodState to makereasoning about sharing easier.' id 'fca45b03-707d-49a7-a9e6-e5e73dbb31d2' date '15 September 2011' time '5:14:46.105 pm' author 'eem' ancestors ((name 'Kernel-eem.619' message 'Kernel half of first part of changes to revive ability tocreate subclasses of CompiledMethod.  Other half isCompiler-eem.213.Bug fix to Compiledmethod class>new so that it creates adummy method that has a penultimateLiteral.' id 'a213fef5-96b3-421c-a1ca-db9ec0ef8876' date '15 September 2011' time '4:40:07.103 pm' author 'eem' ancestors ((name 'Kernel-nice.618' message 'Simplify Integer>>printTruncatedOn:showingDecimalPlaces: as suggested by Levente' id '5c9061ca-b336-460a-bd15-2dfb6ecd2d0c' date '8 September 2011' time '10:26:12.614 pm' author 'nice' ancestors ((name 'Kernel-nice.617' message 'Consider an Integer as a special kind of Fraction (from behavioral POV, not from hierarchical POV), ans as such answer true to #isFraction and answer self to #asFraction.This is a logical consequence of having Fraction with a unit denominator automatically reduced to Integer.Two pre-requisites to this change are:- letting Integer be polymorphic with Fraction by responding to #numerator and #denominator- and don''t letting senders of #asFraction rely on the class of the result being a Fraction (which was the case of some coercion message only).These requirements should be fullfiled by update-nice.196.mcm.A side effect of this change is to speed up a bit mixed arithmetic like (1/2)+1, but not 1+(1/2).A second side effect is that (1@2) asNonFractionalPoint will now convert coordinates to floating point.There is no other sender of #isFraction or #asFraction affected by the change in the trunk image.' id '709886c8-65a6-4ca8-8c60-96002f0cc739' date '7 September 2011' time '10:36:43.543 pm' author 'nice' ancestors ((name 'Kernel-nice.616' message 'Form a Fraction explicitely rather than sending asFraction when coercing an Integer is required.This way, Integer>>#isFraction and Integer>>#asFraction can be modified.' id '7aedbc4c-8362-48cb-bfbe-7b28ef66837c' date '7 September 2011' time '10:07:42.842 pm' author 'nice' ancestors ((name 'Kernel-nice.615' message 'Integer shall understand #numerator and #denominator to be polymorphic to Fraction.Integer shall be polymorphic to Fraction because Fraction with denominator = 1 don''t preserve their class across arithmetic operations.' id '4e49e25c-85dc-444c-bdd5-5e4bb9d05b6e' date '7 September 2011' time '9:54:15.365 pm' author 'nice' ancestors ((name 'Kernel-nice.614' message 'Let (ScaledDecimal newFromNumber: 0.0 scale: 2) print itself.While at it, review ScaledDecimal comment and indicate that the fraction inst var can be an Integer eventually.' id '8b421fd9-75f4-2e44-bef4-9bbf5cd3b57a' date '7 September 2011' time '7:10:52.779 pm' author 'nice' ancestors ((name 'Kernel-nice.613' message 'Don''t provide separate setters for Complex #real: and #imaginary: parts.Instead, provide a single #real:imaginary: initializer, that''s faster and safer (like Magnitude, Complex numbers might be shared and it would be dangerous to modify a Complex in place).' id 'c5ac2f0a-3419-41d9-a4e5-0331ff55467d' date '29 August 2011' time '12:20:33.523 am' author 'nice' ancestors ((name 'Kernel-cmm.612' message 'Merged cmm.607 and cmm.608.' id '4d1d5cde-63c0-4b82-ba0c-912fc1b880bd' date '15 August 2011' time '9:21:36.435 pm' author 'cmm' ancestors ((name 'Kernel-cmm.608' message 'Allow creation of ContextParts with #basicNew: as long as a valid frame-size is specified.' id '35c1e76a-833d-4959-8b99-cfcd8d31df3f' date '5 August 2011' time '1:03:00.088 pm' author 'cmm' ancestors ((name 'Kernel-cmm.607' message '- Size and speed optimization for DateAndTime, Date, and other Timespans.  By sending them the new #makeUTC message, Dates can now share a canonicalized #zero ''offset'' Duration.  Hashing Dates created in offset zero is many times faster than those with other offsets.- Since there are typically many Dates in the system, their 1-day ''duration'' is also shared.' id '707fff1e-e5d5-46e9-9c87-75010916820b' date '17 July 2011' time '3:19:27.832 pm' author 'cmm' ancestors ((name 'Kernel-nice.605' message 'Fix: a negative fraction asFloat should answer negativeZero when it underflows' id '59831937-c6b3-4a5a-9f2a-a14f898e6fd7' date '15 July 2011' time '11:21:58.548 pm' author 'nice' ancestors ((name 'Kernel-ul.604' message 'Optimized Integer >> #= for integer-integer comparisons. Return false for integers from different classes without further checking.' id 'f758876f-a507-404b-aa2f-2c1038504b48' date '10 July 2011' time '4:36:20.467 pm' author 'ul' ancestors ((name 'Kernel-bf.603' message 'merge "Button for it" feature' id 'f3bbcccb-40c4-4d2c-a4f1-1bf957306c42' date '1 July 2011' time '12:01:00.19 am' author 'bf' ancestors ((name 'Kernel-nice.602' message 'Minor tweaks:Use a better approximation for counting digits in base 10Use raisedToInteger: since we now the argument ''base'' is IntegerChange arTanh error message because (between -1 and 1) is more inline with Smalltalk message #between:and: than (between 1 and -1).Simplify ulp since #abs matches #ulp return value for any non finite number.' id '5466a1ae-e947-4881-b71f-e83278dc1e33' date '27 June 2011' time '8:27:00.479 pm' author 'nice' ancestors ((name 'Kernel-bf.601' message 'revert Float>>/ to restore proper ZeroDivide handling (see testZeroDivideHandler)' id 'f3acd77d-7721-4775-90d7-a4aa00a90670' date '23 June 2011' time '3:37:18.629 pm' author 'bf' ancestors ((name 'Kernel-cmm.600' message 'merged Kernel-nice.569.' id 'ce9a0eba-082b-48c3-873d-d824b8898571' date '21 June 2011' time '4:20:30.074 pm' author 'cmm' ancestors ((name 'Kernel-nice.569' message 'A bit faster bitReverse: for LargePositiveInteger' id '6fde25b5-ec3e-3146-94b5-d9e228e02776' date '12 April 2011' time '9:22:32.787 am' author 'nice' ancestors ((name 'Kernel-cmm.568' message 'Added Integer>>bitReverse:.' id '340ecdd9-40de-42e4-8388-09abc07cdedf' date '11 April 2011' time '9:01:09.858 pm' author 'cmm' ancestors ((name 'Kernel-nice.567' message 'Use #repeat instead of  [true] whileTrue' id 'c28babcd-2f07-0f47-a7ae-9e9dfe2ed29b' date '11 April 2011' time '3:57:48.516 pm' author 'nice' ancestors ((name 'Kernel-ar.566' message 'Fixes a potential delay roll-over problem discovered by Gary Chambers.' id '0001d1a2-dc2b-1c44-b858-10e52be67b9f' date '11 April 2011' time '12:12:58.781 pm' author 'ar' ancestors ((name 'Kernel-bf.565' message '- make ObjectTracer/ObjectViewer work again (try the example in ObjectViewer class comment). BEWARE however, sending xxxUnTrace still sometimes locks up the image- not sure why sentTo: doesn''t work, had to switch to sendTo:- optionally allow accessing the caught message, e.g.:	object evaluate: [:msg | Transcript cr; show: msg]		wheneverChangeIn: [x := x = false].' id 'f5b1f9f1-3c3b-4dac-bec9-88df9a90cd0e' date '7 April 2011' time '12:08:35.536 pm' author 'bf' ancestors ((name 'Kernel-ar.564' message 'Fix computation of Time>>milliseconds:since: which would compute incorrect deltas upon clock overflow.' id '32ecb9c9-177a-ce45-9c1c-a3714c801929' date '7 April 2011' time '11:04:21.248 am' author 'ar' ancestors ((name 'Kernel-nice.563' message 'As previously discussed in squeak-dev, implement two utilities: #newCompiler #newParser(self newCompiler) is a replacement for (self compilerClass new), except it arranges to have the compiler initialized with proper Parser.Advantage 1:This way, you can define only parserClass rather than a pair compilerClass/parserClass for experimenting alternate syntax.Also, this may later simplify Compiler initialization of parser inst. var.Advantage 2:If any special initialization is required for YourOwnCompiler/parser instance, then just refine #newCompiler/Parser rather than hacking each and every #compilerClass/parserClass sender.Disadvantage 1:Encouraging experimentations of alternate Parser might show the limits of some tools (MC RB etc...).Bet we wouldn''t put such experimentations in trunk, would we ?Disadvantage 2:none foreseen, but you tell me.' id '8550c4d6-b22a-409a-91d7-68a3c9ad6a7b' date '30 March 2011' time '9:20:36.797 pm' author 'nice' ancestors ((name 'Kernel-nice.562' message 'Restore old behaviour:  -0.001 printShowingDecimalPlaces: 2gives:   ''0.00''rather than  ''-0.00''What do you prefer ?' id '3fe28801-7a81-7848-b0af-3d246cf09488' date '29 March 2011' time '11:04:41.473 pm' author 'nice' ancestors ((name 'Kernel-nice.561' message 'Oops, correct    (-1999/1000) printShowingDecimalPlaces: 2before someone see my bugs' id '5565b8cf-af97-b84a-98d3-d7743983f140' date '29 March 2011' time '10:48:02.38 pm' author 'nice' ancestors ((name 'Kernel-nice.560' message 'Provides faster printShowingDecimalPlaces: Also accelerate ScaledDecimal printing a bit more.' id '0115aa6d-4357-864e-9984-a1a9a3a2c062' date '29 March 2011' time '10:01:57.74 pm' author 'nice' ancestors ((name 'Kernel-ul.559' message '- use primitive 189 in Object >> (with:)*executeMethod: methods' id 'c77223de-0299-9646-bbf7-c68ba5f839e6' date '29 March 2011' time '3:07:23.429 am' author 'ul' ancestors ((name 'Kernel-ul.558' message '- avoid recompiling class side methods twice during #compileAll' id '1c46cfeb-407c-a445-bdb5-2f3242137f2f' date '28 March 2011' time '5:35:38.058 pm' author 'ul' ancestors ((name 'Kernel-ul.557' message '- removed methods from ProtoObject and CompiledMethod related to the old BlockClosure implementation. No deprecation, because they were broken and dangerous to use, besides they had no senders.- renamed CompiledMethod >> #embeddedBlockMethods to CompiledMethod >> #embeddedBlockClosures' id '0a3d2d6f-e06c-8a40-af11-63cdc731a4ee' date '28 March 2011' time '4:21:17.292 am' author 'ul' ancestors ((name 'Kernel-mha.556' message 'revamped closures protocol in CompiledMethod and supplemental code/classes' id '335384b3-adba-4f4f-b8aa-4cef81efebcc' date '24 March 2011' time '8:23:23.16 pm' author 'mha' ancestors ((name 'Kernel-ul.555' message '- added support for threaded VMs- removed the unused errorHandler variable and it''s accessors from Process. It was used before Squeak 3.6 as a process local error handler. If this feature is still required then it should be implemented by using the ProcessLocalStorage package from squeaksource.' id '27353a94-f122-aa4b-982e-5d98b8659837' date '22 March 2011' time '5:48:20.517 am' author 'ul' ancestors ((name 'Kernel-ul.554' message 'Merged.' id 'b7c88f26-3fb5-dd4a-8914-11b00fe16498' date '17 March 2011' time '2:10:28.436 am' author 'ul' ancestors ((name 'Kernel-mtf.553' message 'Imported changes from cobalt- added Magnitude >> clampLow:high:- exposed the Float constants ln2 and ln10' id 'b8e42373-42ef-440e-a253-508b7661cd5f' date '16 March 2011' time '7:02:49.782 pm' author 'mtf' ancestors ((name 'Kernel-ul.552' message '- make sure that blocks and MessageSends are exchangable in more situations, by implementing #cull:* #value:* and #valueWithPossibleArgs: in MessageSend- refactored Object >> #perform:withEnoughArguments:' id '9200081a-9eb0-7042-b9b5-3a792061f53d' date '15 March 2011' time '1:57:10.411 am' author 'ul' ancestors ((name 'Kernel-ul.551' message '- implemented Behavior >> #instVarIndexFor:ifAbsent:, so it can be used from other methods in Behavior- refactored Behavior >> #whichSelectorsAccess:' id '45b96cce-d479-4b43-a043-2b9620f47a98' date '14 March 2011' time '11:47:55.756 pm' author 'ul' ancestors ((name 'Kernel-ul.550' message '- moved MethodReference >> #actualClass to the System package- CompiledMethod >> #getPreambleFrom:at: allocates a non-empty buffer- added Behavior >> #whichSelectorsReferTo:special:byte:thorough: which unifies#whichSelectorsReferTo:special:byte: and #thoroughWhichSelectorsReferTo:special:byte:' id '0fbe4def-75cd-a747-9d26-44e6a9daaa04' date '13 March 2011' time '8:55:41.533 pm' author 'ul' ancestors ((name 'Kernel-ul.549' message 'Merged.' id '63637401-6781-ce44-99e2-d3ac7f032112' date '28 February 2011' time '12:23:58.143 pm' author 'ul' ancestors ((name 'Kernel-dtl.548' message 'Fix bug in Float>>printPaddedWith:To: by treating the format specifier as a string value, not as a float subject to numeric precision issues.' id '3640676f-cde9-42ac-924b-f585949efb60' date '27 February 2011' time '9:51:00.787 pm' author 'dtl' ancestors ((name 'Kernel-cmm.547' message 'Merged cmm.541.' id '31a5eb93-bfb3-45c7-950a-a92b5860d0fa' date '16 February 2011' time '11:17:16.084 am' author 'cmm' ancestors ((name 'Kernel-fbs.546' message 'Allow one to declare a new class when one refers to the as-yet-undeclared class in a class-side method.(http://bugs.squeak.org/view.php?id=7606)' id '89f8153f-e938-c742-9f8b-002d8e55612c' date '15 February 2011' time '4:04:05.286 pm' author 'fbs' ancestors ((name 'Kernel-nice.545' message 'Merge Kernel-spd.444 to allow shadowing of a global namespace variable by a local class variable or shared pool variable.RATIONALE: forbiding this shadowing works against encapsulation. It prevents packages with a local class var from loading when a concurrent package defined a global. Forbiding is thus like reserving every class var name. Non sense.Kernel-spd.444 did also remove some methods, but I did not replay those changes as they are unrelated and undocumented.* fixed Class>>canFindWithoutEnvironment: (it was actually checking the environment, making the behavior like bindingOf:) and added test to KernelTests* changed Class>>declare: and Class>>addClassVarName:	- no longer check the environment for conflicts	- conflict error message clarified* made conflict error in #addClassVarName: resumable to match the behavior of #declare:' id 'e5d876d4-c609-4776-b5e6-7266e46f842e' date '13 February 2011' time '9:25:27.036 pm' author 'nice' ancestors ((name 'Kernel-nice.544' message 'Merge nice.533 (deepCopy clean-up)' id 'fb9a4157-1703-412a-86d2-1d54975b3e5f' date '13 February 2011' time '8:51:31.641 pm' author 'nice' ancestors ((name 'Kernel-nice.543' message 'Cherry pick some changes from Pharo:avoid inlining #selectors #classVarNamesuse #cull:cull: instead of #valueWithPossibleArgs:patch needsFrameSize: for the case of perform:withArguments: (required by old VM, not Cog)better comment for Fraction hash' id '3643fbe2-52ce-4d82-80d9-1399706937f3' date '13 February 2011' time '8:46:54.829 pm' author 'nice' ancestors ((name 'Kernel-nice.542' message 'thu shalt not invoke super in vain' id 'ea1d8beb-aa2d-4cf3-8389-2072df48f6e3' date '4 February 2011' time '1:00:46.508 am' author 'nice' ancestors ((name 'Kernel-ul.541' message 'Removed MethodDictionary''s #cleanUp: because HashedCollection''s #cleanUp: does this too.' id '71325767-a1b6-9b48-beb4-1e760c6b576f' date '31 January 2011' time '12:09:23.308 am' author 'ul' ancestors ((name 'Kernel-ul.540' message '- updated CompiledMethod''s comment as suggested by http://bugs.squeak.org/view.php?id=7570' id 'a66e5204-4090-2149-8c6a-d65fa1cc4dd3' date '29 January 2011' time '1:21:18.82 pm' author 'ul' ancestors ((name 'Kernel-cmm.539' message 'Revert Kernel-mtf.527 Kernel-ar.528 Kernel-ar.529 Kernel-ul.530 Kernel-ar.531until compatible VM''s are released.' id '7f10543e-ecae-4c34-81d7-45deda9c409c' date '4 January 2011' time '2:09:42.741 pm' author 'cmm' ancestors ((name 'Kernel-mtf.538' message 'added Object >> isPrimitiveCostume from tweak. Needed by an override in DisplayScanner that I''m committing to trunk for maintainability reasons' id 'f5d1b960-81d7-3848-9018-b09bea5fb643' date '31 December 2010' time '12:22:28.306 am' author 'mtf' ancestors ((name 'Kernel-nice.537' message 'Add a few spaces in order to avoid Transcript warnings about @- ambiguity when recompiling.' id 'e06ac3d0-0ae3-433e-9530-8663459c4a15' date '29 December 2010' time '4:08:14.914 pm' author 'nice' ancestors ((name 'Kernel-nice.536' message 'redo last change after an update' id '4a558059-d69d-48b6-a118-0930c12d98b9' date '29 December 2010' time '1:46:35.807 pm' author 'nice' ancestors ((name 'Kernel-nice.535' message 'revert last change because MC load order will create an infinite loop.' id '779b35c6-c256-407f-96f0-17420be3d5e6' date '29 December 2010' time '1:23:53.998 pm' author 'nice' ancestors ((name 'Kernel-nice.534' message 'Remove redundant methods.' id '21447744-bd08-42bd-a376-456564424dc5' date '29 December 2010' time '12:35:17.044 pm' author 'nice' ancestors ((name 'Kernel-nice.532' message 'A] Clean-up Behavior and Metaclass copy by using postCopy paradigm.Advantage 1:This cleans up the false comment of Behavior>>copy (no, it does not copy without a list of subclasses).This cleans up the false comment of Metaclass>>copy (no, it does share the reference to the sole instance).Advantage 2:The new code is shorter, simpler and avoids niling thisClass temporarily (this was dangerous).B] Fix Class>>copy : the sharedPool shall not be shared(if you #addSharedPool: to the copy and the original already has a sharedPool, then you #addSharedPool: to the original too...).Move the comments "Answer a copy of the receiver without a list of subclasses." where it belongs, in Class>>copy.' id '30e481ee-c2ee-4d10-8484-ec8da55ae54a' date '29 December 2010' time '10:59:42.464 am' author 'nice' ancestors ((name 'Kernel-ar.531' message 'Merge FloatMathPlugin primitives for bit-identical floating point behavior. Added two more tweaks to the prior version ensuring that Float infinity sin/cos will be treated correctly depending on whether signaling NaN''s are enabled.' id '851dfec9-327d-3d4d-95f4-a74f250fd228' date '26 December 2010' time '8:07:24.394 am' author 'ar' ancestors ((name 'Kernel-ul.530' message '- fix: reverted Float >> #arcTan: and added the primitive to that version, because it contained a bugfix. See FloatTest >> #testArcTan.- use #isInfinite for infinity checking in Float >> #sin and Float >> #cos' id 'aa46581d-c74f-7a48-b604-6371b5b21730' date '25 December 2010' time '4:55:27.167 am' author 'ul' ancestors ((name 'Kernel-ar.529' message 'Put the infinity check back (copy and paste error).' id '004c9337-cbbe-de4f-abe2-1b7b79d6849b' date '14 December 2010' time '7:59:55.466 am' author 'ar' ancestors ((name 'Kernel-ar.528' message 'Experimental. Provide support for both signaling and quiet NaNs in various Float operations. Covered by the preference Float>>signalNaN.' id 'b083f6fc-3978-ce48-8cfd-5aa8634845de' date '14 December 2010' time '12:13:09.254 am' author 'ar' ancestors ((name 'Kernel-mtf.527' message 'Use FloatMathPlugin for bit-identical floating point operations across machines. Needed by Croquet.Cherrypicked from Croquet:Name: Kernel-ar.16Author: arTime: 26 March 2006, 7:01:20 pmUUID: 99b21c76-119e-5440-aff8-02dfe0ecf377Ancestors: Kernel-tmp.15- use FloatMathPlugin primitives for Float' id 'eee5f8ce-e738-4da7-bd87-64f50998fd53' date '13 December 2010' time '5:03:32.48 pm' author 'mtf' ancestors ((name 'Kernel-mtf.526' message 'make stack dumps more verbose by printing more stack frames in more detailCherrypicked from Cobalt:Name: Kernel-mtf.40Author: mtfTime: 26 June 2009, 6:00:06 pmUUID: b516a7b4-629c-11de-9e86-001124e29fe6Ancestors: Kernel-mtf.39made SqueakDebug* files show much more detail in the stack trace' id '200bb553-0fe3-48d1-bcf1-c7878f09a00f' date '13 December 2010' time '1:58:51.198 pm' author 'mtf' ancestors ((name 'Kernel-mtf.525' message 'Be more verbose when doing error stack dumps: print more of the local variablesCherrypicked from Cobalt:Name: Kernel-jrd.42Author: jrdTime: 30 June 2010, 12:45:19 amUUID: a08cd094-eab0-40ef-b1c3-d04c7c06ce81Ancestors: Kernel-mtf.41Changed:- Minor fix to widen the columns available in a Context partStack dump' id 'd687c458-7ad5-409f-aa44-111faf463c13' date '13 December 2010' time '1:52:49.412 pm' author 'mtf' ancestors ((name 'Kernel-ul.524' message 'merged' id '33c7fe94-ba2a-2549-af73-f6929e730009' date '12 December 2010' time '4:32:24.221 pm' author 'ul' ancestors ((name 'Kernel-ul.523' message '- added Semaphore >> #waitIfLocked:' id '809ca265-c5de-ac47-b6d6-226f80cf9245' date '8 December 2010' time '4:45:41.467 am' author 'ul' ancestors ((name 'Kernel-ul.522' message '- implemented Fraction >> #negative and ScaledDecimal >> #negative for better performance. These methods don''t allocate new objects.- reimplemented SmallInteger printing methods (printOn:base:*) without String allocation. They are as fast as the previous versions were for base 10.- reimplemented ScaledDecimal printing. It avoids object allocations and has better performance than the previous version. ScaledDecimals can also be printed without the scale part by using #printFractionAsDecimalOn:.' id '6927b03c-21df-1746-9a0d-115b717a5e40' date '8 December 2010' time '4:08:19.384 am' author 'ul' ancestors ((name 'Kernel-ul.521' message 'Implemented CompiledMethod >> #asString the same way Object does.Why?Because it raised an error, which it shouldn''t.Why doesn''t it return a string with the bytes as characters like ByteArray does it?Because it''s not very useful to get an unreadable string with random looking characters. Also CompiledMethod is a subclass of ByteArray only to avoid code duplication, it could be a variableByteSubclass of Object.Why doesn''t it return the source code like Pharo does it?Because that requires several changes in the way the sources and changes files are used (concurrency issues). And it''s a lot slower.The related mantis issue is http://bugs.squeak.org/view.php?id=7570 .' id '3b6f8cce-0310-2d4d-91aa-deab6d13bde9' date '8 December 2010' time '3:42:40.757 am' author 'ul' ancestors ((name 'Kernel-ul.520' message 'A few changes to Semaphore:- save a block creation + activation + a possible context switch in #critical:ifCurtailed:- save a block creation + activation in #critical:ifError:, this changes the behavior when mutuallyExcludedBlock doesn''t understand #ifError:- #critical:ifLocked: is guaranteed to not get locked. The earlier implementation sent #critical: which could cause a context switch, so another process could enter the critical section before the current. Also fixed the comments of this method.' id 'da185163-27f6-6a47-8ecb-e00f9fd8dd3a' date '8 December 2010' time '3:19:51.682 am' author 'ul' ancestors ((name 'Kernel-ul.519' message '- copied another two methods from BlockContext to BlockClosure. One of them fixes http://bugs.squeak.org/view.php?id=7579 .' id '630c1710-46b8-5248-bdb8-e08d99d6d9c0' date '8 December 2010' time '2:52:41.144 am' author 'ul' ancestors ((name 'Kernel-ul.518' message '- introduced Object >> #shouldBePrintedAsLiteral as a replacement for #isLiteral during printing and storing' id 'b098496d-94bb-f943-9cf9-bd07ab3b0b71' date '23 November 2010' time '1:54:49.317 pm' author 'ul' ancestors ((name 'Kernel-dtl.517' message 'Revert last change to Semaphore>>critical:ifLocked: using latest version from Cuis, which adds a method comment to explain the reason for use of #== rather than #=' id '2c83e064-fa7d-4fc0-8e81-140b88e48a49' date '15 November 2010' time '12:49:28.804 pm' author 'dtl' ancestors ((name 'Kernel-ul.516' message '- reverted Object >> #inboundPointersExcluding: and added a comment with some explanation about the use of #==.' id '6faf4568-4121-8543-897b-a4aef9f01454' date '15 November 2010' time '11:23:57.645 am' author 'ul' ancestors ((name 'Kernel-ul.515' message '- use #= for integer comparison instead of #== (http://bugs.squeak.org/view.php?id=2788 )' id '2254c085-e86b-ef4e-916c-4e2008a6e9dc' date '15 November 2010' time '10:32:19.849 am' author 'ul' ancestors ((name 'Kernel-ul.513' message '- DateAndTime startup enhancement from Cuis part 2' id '887f4907-c347-2e45-8d2e-dd7814ac4248' date '7 November 2010' time '12:08:10.875 am' author 'ul' ancestors ((name 'Kernel-ul.512' message '- DateAndTime startup enhancement from Cuis part 1' id 'f35cd221-68a5-f04b-b6bc-d07df326b3d3' date '7 November 2010' time '12:05:13.149 am' author 'ul' ancestors ((name 'Kernel-nice.511' message 'Correct the confusion radiansToDegrees/degreesToRadiansThanks Bert' id '4f6eaafc-6665-4092-ac07-d87ecb2b5d30' date '1 November 2010' time '11:59:51.145 am' author 'nice' ancestors ((name 'Kernel-nice.510' message 'Provide an implementation of #degreeCos and #degreeSin such that results are exact for any multiple of 90.Care is also taken to evaluate the sine between -90ÃÂÃÂ° and 90ÃÂÃÂ°, this will avoid #degreesToRadians and i386 FPU sine fonction to accumulate round off errors due to approximate representation of pi.We can thus evaluate 240 degreeCos with at most 1 ulp error. It''s not perfect, but better than previous implementation.For cosine, we know that:	cosd(x)=cosd(abs(x))	cosd(x)=sind(90-x)thus the trick is to evaluate:	cosd(x)=sind(90-abs(x)) after appropriate modulo in [-180,180[This way, we are sure to evaluate the sine between -90ÃÂÃÂ° and 90ÃÂÃÂ°The #degreesToRadians and #sin are used rather than #degreeSin to avoid cycles.For sine, it would be necessary to evaluate eithersind(x) if abs(x) <=90or sind(180-x) if abs(x) >= 90A possible implementation would be:	| x |	x := 90 + self \\ 360 - 90.	x >= 180 ifTrue: [x := 180 - x].	^x degreesToRadians sinWe prefer evaluating cosd(90-x) thus providing a branch free implementation.' id '80b9fa44-3abc-4414-adae-10f3f03b0420' date '31 October 2010' time '10:25:03.794 pm' author 'nice' ancestors ((name 'Kernel-ul.509' message '- merged' id '63432d21-351a-624f-b52d-3181148441bd' date '28 October 2010' time '2:40:18.61 am' author 'ul' ancestors ((name 'Kernel-nice.508' message 'Correct #isWords comment. There is no such thing as 16-bit variables.Don''t know what would be the answer in a 64 bit image...' id 'f75f55d1-4fc4-4ba7-8790-248dea6d3136' date '26 October 2010' time '9:17:01.308 pm' author 'nice' ancestors ((name 'Kernel-ul.507' message '- use blocks instead of symbols- minor Monitor tweaks' id 'f2a1ac34-c8a3-ae48-b38c-271043354faa' date '17 October 2010' time '3:44:06.845 am' author 'ul' ancestors ((name 'Kernel-nice.506' message 'Don''t feed the exception handler with #valueWithPossibleArgument:, but rather with #cull:Rationale:No exception handler expects more than 1 argument, and feeding any over argument with nil is useless anyway.' id '814203df-d349-4dfa-9534-37093ec7b0d9' date '11 October 2010' time '11:35:57.51 pm' author 'nice' ancestors ((name 'Kernel-dtl.505' message 'Remove Object>>inline: and Object>>var:declareC:These are part of the VMMaker package and are no longer required in trunk.(Note - replaces Kernel-dtl.504, which was posted in error)' id 'e1cfd897-c49f-4133-b46f-89c041db1706' date '10 October 2010' time '4:00:44.638 pm' author 'dtl' ancestors ((name 'Kernel-nice.503' message 'Remove #hashMappedBy: and #identityHashMappedBy:' id '23d5be4d-c5ff-4b77-97f7-fb925e59be1f' date '1 October 2010' time '10:41:05.264 pm' author 'nice' ancestors ((name 'Kernel-eem.502' message 'include ContextPart>>objectSize: amongst the mirror primitives' id '2cf495fb-5958-4ba2-afdc-18caf380caef' date '25 September 2010' time '8:31:12.094 pm' author 'eem' ancestors ((name 'Kernel-eem.501' message 'Add mirror primitives which can be used for accurateexecution simulation (a.k.a. debugging) of proxies.' id '5b55eae3-594b-4416-9d47-5a4ebaabb238' date '25 September 2010' time '7:55:34.708 pm' author 'eem' ancestors ((name 'Kernel-ul.500' message 'Finalization enhancements.' id '3a530acf-ede2-6141-9d3e-604d16abea08' date '26 September 2010' time '2:35:30.752 am' author 'ul' ancestors ((name 'Kernel-nice.499' message 'Fix the tricky cases of the copy sign function (#sign:) in case of Float negativeZero' id 'a30fc6fb-96fb-427a-af36-cf4594848eee' date '22 September 2010' time '12:09:25.27 am' author 'nice' ancestors ((name 'Kernel-nice.498' message 'Remove the garbage category that was created by running the tests.' id '16fe2ac5-1c59-d847-acf6-97f931fb187a' date '21 September 2010' time '12:30:10.283 pm' author 'nice' ancestors ((name 'Kernel-nice.497' message 'Patch for http://bugs.squeak.org/view.php?id=7352 in Kernel-nice.482 broke previously possible usage of BlockClosure as actions (see #when:evaluate:).Implement required events-support message in BlockClosure to restore this feature.' id 'bfd5c6a8-85ba-9345-a68a-ebb6bc31fefc' date '21 September 2010' time '10:30:22.684 am' author 'nice' ancestors ((name 'Kernel-cmm.496' message 'Changed nomenclature of "signature" to "reference".' id '8ff68b10-188a-442a-9cb9-a382bd653600' date '20 September 2010' time '5:27:33.945 pm' author 'cmm' ancestors ((name 'Kernel-mtf.495' message 'added useful pointer tracing tools to the base classes. The core of the fix for http://bugs.squeak.org/view.php?id=7158' id '06402399-42b9-465b-b695-a86471b12533' date '19 September 2010' time '8:01:13.128 pm' author 'mtf' ancestors ((name 'Kernel-mtf.422' message 'Part 2 of 4 of the fix for http://bugs.squeak.org/view.php?id=7158' id 'bb1aff65-38e1-42fd-9d01-ab7c2c577757' date '10 March 2010' time '7:27:15.815 pm' author 'mtf' ancestors ((name 'Kernel-mtf.421' message 'Preload a critical method just in case of load order issues. Part 1 of 4 of the fix for http://bugs.squeak.org/view.php?id=7158' id '0d47896c-fa27-4804-b345-ea3c8a17c1d1' date '10 March 2010' time '7:24:06.105 pm' author 'mtf' ancestors ((name 'Kernel-ar.420' message 'Avoid dictionary protocol in Smalltalk.' id 'a8de6a84-8494-b34e-bfaa-eef854ed79e6' date '5 March 2010' time '8:55:49.922 pm' author 'ar' ancestors ((name 'Kernel-ar.419' message 'Use Smalltalk globals instead of Smalltalk as default environment.' id '2253493e-ff97-274a-92af-bc026259d12d' date '5 March 2010' time '7:55:34.977 pm' author 'ar' ancestors ((name 'Kernel-ar.418' message 'Fix some questionable messages sent to the environment of classes, including #garbageCollect, #compactClassesArray and more. All of these belong sent to Smalltalk not the local environment.' id '3e6da606-e78d-1b45-adaf-af57902b8b4a' date '5 March 2010' time '7:34:04.564 pm' author 'ar' ancestors ((name 'Kernel-cmm.417' message 'Imcorporated fix for Year>>#previous, for leap years.' id '1b67ae14-7a37-4ca8-ae8c-74371af5f3b5' date '5 March 2010' time '4:00:52.211 pm' author 'cmm' ancestors ((name 'Kernel-ar.416' message 'Remove last remaining uses of SyntaxError to indicate non-interactive compile.' id 'fb8636b8-5285-5a41-a94a-c698a256552f' date '4 March 2010' time '11:41:31.743 pm' author 'ar' ancestors ((name 'Kernel-ar.415' message 'Attempt to complete ensure blocks that are currently under execution when terminating a process.' id 'dc49d9cd-b446-8747-8337-1712a9d0258f' date '3 March 2010' time '9:42:13.86 pm' author 'ar' ancestors ((name 'Kernel-dtl.414' message 'Eliminate the "special menu..." pick from StringHolder class>>shiftedYellowBottonMenuItems for Morphic Retain a hook for it in MVC.Rationale: The special menu items selection is currently broken, but never did anything useful in Morphic AFICT. Best to just remove the option when not in MVC, but leave the MVC hook in hopes of fixing the original MVC implementation later (other MVC issues prevent this now).This changes adds another #isMorphic send, which is undesirable. However, a number of menu construction methods already have this issue, so a general solution is needed for tailoring these menus to different project types.' id 'bca26e8e-d0b7-4ee0-a8f9-c27994a165e6' date '28 February 2010' time '1:30:32.921 pm' author 'dtl' ancestors ((name 'Kernel-dtl.413' message 'Remove need for #isMorphic in Object>>primitiveError:' id '4caf42d6-8202-4818-b86e-de4a60c4e1e3' date '27 February 2010' time '11:48:03.105 am' author 'dtl' ancestors ((name 'Kernel-ar.412' message 'Introduce a cleanUp/cleanUp: protocol based on the proposal from Mantis:http://bugs.squeak.org/view.php?id=7244The cleanUp protocol takes an optional argument to indicate whether we''re doing an aggressive cleanup (which involves deleting projects, change sets, and possibly other destructive actions) or a more gentle cleanup that''s only supposed to clean out transient caches.' id '59fae938-7c7e-714c-8299-9d6e1ae5583b' date '26 February 2010' time '11:26:03.981 pm' author 'ar' ancestors ((name 'Kernel-ar.411' message 'Add MethodDictionary class>>compactAllInstances to save space in releases. Compacting all MDs in my images saves 600k in image size which isn''t bad at all.' id 'b69a28db-8475-bc4b-89ed-285ccf3841cd' date '26 February 2010' time '7:36:40.257 pm' author 'ar' ancestors ((name 'Kernel-ul.410' message '- use the new way to create an ObjectFinalizer' id 'd5442399-f708-f940-9ef6-17ebccd4a654' date '26 February 2010' time '3:13:26.593 pm' author 'ul' ancestors ((name 'Kernel-nice.409' message 'Cuis 2.2 Semaphore comments' id 'b2b17afb-4018-414e-9deb-0ed629e8c9db' date '25 February 2010' time '11:53:34.677 pm' author 'nice' ancestors ((name 'Kernel-nice.408' message 'Let NumberParser failBlock take 2 optional arguments (errorString and source position) thanks to new cull: protocol.This will help Parser inserting error message inline.' id 'fbd33dfc-72c8-f84f-ae5d-bc0cdec1ca9f' date '25 February 2010' time '2:48:03.13 am' author 'nice' ancestors ((name 'Kernel-ar.407' message 'Merging Kernel-ar.404 and Kernel-ul.406' id '7a8e9c26-6571-2e48-88b9-a31af15e914d' date '24 February 2010' time '3:03:06.161 pm' author 'ar' ancestors ((name 'Kernel-ar.404' message 'Merging Kernel-nice2.403 and Kernel-nice403.' id 'b5a3e58a-c67c-7a42-8ab9-9fcf8121cfdb' date '24 February 2010' time '2:59:13.45 pm' author 'ar' ancestors ((name 'Kernel-nice2.403' message '1) Introduce a Number class>>#readSqueakSyntaxFrom:  for Compiler/Scanner. This will later enable introduction of extended for #readFrom:2) Connect the hook for allowing leading + sign in Integer reading.This is a correction of Kernel-nice.403' id '49e07394-1a62-5e4f-a326-9dbdf0513919' date '24 February 2010' time '11:59:00.675 am' author 'nice' ancestors ((name 'Kernel-nice.402' message 'Naive implementation of Integer>>bitAt:put:' id '804739fb-f633-4d4d-9717-2b69cea9c2cb' date '16 February 2010' time '10:08:26.271 am' author 'nice' ancestors ((name 'Kernel-ar.401' message 'Raise DuplicateVariableError in ClassBuilder.' id 'a3240363-adee-4943-ba9b-a4e36a98b628' date '13 February 2010' time '3:13:52.934 pm' author 'ar' ancestors ((name 'Kernel-nice.400' message 'Change the policy for conversions to ScaledDecimalAlways honour the number of decimal places (scale) passed as argument to asScaledDecimal:When no scale is passed, uses strictly necessary number of decimal places if the number is exact (not Float) and if a finite decimal representation exists.Otherwise uses the default of 8 decimal places.This makes more sense IMO than previous implementation. Integer version was screwing the user by not fulfiling the requested number of decimal places, I can''t believe it was the right interpretation of the ANSI standard.... Or someone gives me a good rationale.' id '20e6c813-25cb-7548-9ba7-63a83f3b5193' date '13 February 2010' time '11:31:43.4 pm' author 'nice' ancestors ((name 'Kernel-nice.399' message 'Merge minor changes from Pharo.Correct a bug (concatenating aString , aCharacter)' id '426cc492-dbd7-ac48-9efb-d32c46007a76' date '13 February 2010' time '5:14:04.309 pm' author 'nice' ancestors ((name 'Kernel-nice.398' message 'Fixhttp://bugs.squeak.org/view.php?id=3360http://bugs.squeak.org/view.php?id=3374http://bugs.squeak.org/view.php?id=6601hash and = are now reconciled for numbers.= is now transitive for numbers.WARNING: now, tests like (1/10 = 0.1) will answer false.This is expected, and more than expected, this is wanted.Float are inexact and testing for strict equality is not a clever thing to do.All this has been longly debated at http://permalink.gmane.org/gmane.comp.lang.smalltalk.pharo.devel/10642http://thread.gmane.org/gmane.comp.lang.smalltalk.sapphire.devel/10223/focus=10228Please, read carefully this thread to make an opinion before raising your voice.It can break code eventually,  so I''m all ears to real case, and willing to help fixing. But please, real examples, not theoretical (after 8 month change in Pharo, I''m not aware of further complaints).' id 'f1525362-d01a-214c-94fe-2bb3a5fffa89' date '13 February 2010' time '4:31:00.389 am' author 'nice' ancestors ((name 'Kernel-nice.397' message 'Change coercion policy: a Fraction is now converted to ScaledDecimal when involved with ScaledDecimal arithmetic as would an Integer do.Rationale: (1/1) is a Fraction represented as an Integer, so we cannot really dissociate the two behaviors.' id 'a195f8dc-bc5f-b645-986c-0dfa32fc17c8' date '13 February 2010' time '3:53:50.555 am' author 'nice' ancestors ((name 'Kernel-nice.396' message 'Now read Float "exactly" (answer nearest Float) by using SqNumberParser.This solves http://bugs.squeak.org/view.php?id=6982This requires a fix of Float initialize, otherwise the old max float literal would overflow.As mentionned by John McIntosh, this change has side effects and makes a few tests fail:1) reading an invalid number raise an Error rather than answering 02) undocumented syntax .1e2 and 1.e2 are no more acceptedIMO, we should not fix 1), we should fix the users. For this we provide a #readFrom:ifFail:We can fix 2) later by using ExtendedNumberParser where due.' id 'b435f6ab-8347-cc45-b850-ef0aa041a44d' date '13 February 2010' time '2:58:57.708 am' author 'nice' ancestors ((name 'Kernel-nice.395' message 'Arrange for ExtendedNumberParser to return the valid leading number instead of failing because of invalid radixExample:''1r'' -> 1''2r3'' -> 2' id '1f313115-2fff-1a4c-93f1-d6bbfecb3ad5' date '13 February 2010' time '2:29:51.4 am' author 'nice' ancestors ((name 'Kernel-nice.394' message 'Comment the NumberParser classes and subclasses.Add an ExtendedNumberParser that can read all Squeak numbers plus numbers like these:+1+1.+1.e-21.e+2.1-.1e33r.023r-1.e-2.1s2+1.s3Cerise sur le gÃÂÃÂ¢teau:   +10r+1.e+2(use only if you really feel positive)Now we just have to decide where to connect this ExtendedNumberParser.It cannot be used in Parser because it would currently gobble the sentence period separator after a digit....Either we connect it directly in String>>#asNumberOr we change Parser to use a #smalltalkReadFrom: or SqNumberParser instead of Number>>#readFrom:.' id '9e50f78e-d3dd-6245-853f-549a3e120d59' date '13 February 2010' time '1:22:00.832 am' author 'nice' ancestors ((name 'Kernel-nice.393' message 'Separate NumberParser as abstract class and SqNumberParser as Squeak syntax special case.Provide a hook for allowing plus sign before number and plus sign in exponent.Provide a FORTRANNumberParser example to demonstrate how simple it is to subclass.My goal is to not let this class in Kernel, but to replace it with an ExtendedNumberParser to handle String asNumber. We will have to agree on expectations first.More subclasses can be found in VW public store SYSEXT-NumberParser' id 'c2f2a753-02ef-7740-ae98-db5aee561a21' date '13 February 2010' time '12:22:56.113 am' author 'nice' ancestors ((name 'Kernel-dtl.392' message 'Add Object>>isTextView to support TranscriptStream>>countOpenTranscripts without #isKindOf: tests on MVC and Morphic views.' id 'd8fdf4b9-e3c1-437f-bb89-36e44e0766d3' date '10 February 2010' time '5:57:55.219 pm' author 'dtl' ancestors ((name 'Kernel-cmm.391' message 'Added BlockClosure>>#on:do:on:do: and #on:do:on:do:on:do:.' id '14cf6095-5b96-4bbb-aa1c-fa8aab77b0b8' date '7 February 2010' time '5:07:37.371 pm' author 'cmm' ancestors ((name 'Kernel-mtf.390' message 'merged 389 and 388: stream readability fix and prepping Process for Cobalt' id 'e54aaf16-579b-4912-858c-961bd18ff8ba' date '4 February 2010' time '7:50:05.434 pm' author 'mtf' ancestors ((name 'Kernel-mtf.389' message '7219: Improve Streams Usage Readabilityhttp://bugs.squeak.org/view.php?id=7219Adds << to streams to be mostly like nextPutAll, but uses putOn: so that it works with any object.' id '6a4c765f-eddf-4ff3-963b-98ca79013299' date '4 February 2010' time '7:44:03.918 pm' author 'mtf' ancestors ((name 'Kernel-nice.387' message '1) avoid a useless block non local return2) move a temp assignment outside block' id '233eca14-15af-4626-8386-a73b38f29367' date '4 February 2010' time '8:50:09.339 pm' author 'nice' ancestors ((name 'Kernel-ar.386' message 'Merging Date class>>#readFrom:pattern: one more time (got accidentally replaced by a newer version without being merged).' id '72d71775-3ee2-bb41-b1db-2a527b7cc25c' date '2 February 2010' time '10:52:47.731 am' author 'ar' ancestors ((name 'Kernel-ar.385' message 'Fix handling of Class>>binding:- Verify that the registered class in the environment is the receiver- Install a common binding after recompilation - Add an accessor for installing the binding in CompiledMethod' id 'ca133c5e-fb58-834d-aab1-1a61b83d6c3d' date '2 February 2010' time '10:03:42.112 am' author 'ar' ancestors ((name 'Kernel-ar.384' message 'Sets with nil: Merge code from http://bugs.squeak.org/view.php?id=7413 before it rots even more.' id '312bc627-1351-5943-a531-7f75e003e29b' date '1 February 2010' time '8:22:34.594 pm' author 'ar' ancestors ((name 'Kernel-tfel.383' message 'Seems that (according to ISO8601) reading a Time from a stream without explicit UTC offset should not assume the local timezone, but rather UTC. This fixes DateAndTimeTest>>#testReadFrom' id '7b9f7929-2ba0-4997-bac3-23868341cb31' date '28 January 2010' time '2:37:15.04 am' author 'tfel' ancestors ((name 'Kernel-ul.382' message 'In MethodDictionary- cosmetic changes: use #ifNotNil: if possible- ensure that #rehashWithoutBecome doesn''t send #become:, making #rehashAllInstances a lot faster- ensure that #removeAll preserves the capacity- deprecated #methodArray, it''s the same as #array- new comment for #new' id '0741847a-6bd5-c145-aa63-3c5e598d1742' date '25 January 2010' time '10:40:19.44 pm' author 'ul' ancestors ((name 'Kernel-dtl.381' message 'Use probabilistic algorithm (Knuth) for testing primality of large integers, and add method comments for explanation.Rationale for use of probabilistic algorithm provided by Enrico Spinielli:  http://lists.squeakfoundation.org/pipermail/squeak-dev/2009-December/142372.html' id '70c5d3fd-a468-4289-b9b5-101cdaea72b8' date '23 January 2010' time '2:56:10.622 pm' author 'dtl' ancestors ((name 'Kernel-nice.380' message 'Fast-up linesOfCode' id '06edff56-56d3-4b50-baf5-34cdd716ca88' date '19 January 2010' time '12:38:51.701 am' author 'nice' ancestors ((name 'Kernel-nice.379' message 'Correct a small bug in SqNumberParser #expected: does not expect a block argument.The bug was never reached because requestor is never set. The idea of requestor was st80 compiler based: insert the error message in source text, but it''s not active yet.' id 'ac207c0c-7d27-4f71-ac89-83342ab1a41a' date '17 January 2010' time '6:49:12.215 pm' author 'nice' ancestors ((name 'Kernel-nice.378' message 'Fix so that (Float class>>#nan) = (Float class>>#nan)' id 'f26ee484-db82-4298-9c58-02504061ec96' date '16 January 2010' time '6:35:14.553 pm' author 'nice' ancestors ((name 'Kernel-nice.377' message 'add #selectorsAndMethodsDo: and use it to fast up some operationsThis is 4x faster than class selectorsDo: [:s | class compiledMethodAt: s]' id '9795d8b5-764d-4087-934b-5f540004008b' date '15 January 2010' time '11:15:25.576999999 pm' author 'nice' ancestors ((name 'Kernel-bf.376' message '- add DateAndTime>>asUnixTime' id '0c8eee97-6a0c-4e7a-ad21-990fc5adbd35' date '15 January 2010' time '12:57:41.202 pm' author 'bf' ancestors ((name 'Kernel-ar.375' message 'Promote isScriptEditorMorph to Object.' id '5ee824c1-c5cc-e54e-96a0-b7a710bfb9a4' date '11 January 2010' time '8:03:55.312 pm' author 'ar' ancestors ((name 'Kernel-ul.374' message '- code critics' id '7e31dbcf-2831-884b-af07-f7969ebd5ef5' date '11 January 2010' time '8:58:21.133 am' author 'ul' ancestors ((name 'Kernel-ar.373' message 'Move belongsToUniClass back to Kernel package.' id '865d4429-ff44-9649-a771-df1bc1125630' date '6 January 2010' time '11:55:08 am' author 'ar' ancestors ((name 'Kernel-nice.372' message 'move a temp assignment to outer scope' id 'a87b1281-a402-4f55-b8e8-bb9b0f209125' date '5 January 2010' time '9:25:23 am' author 'nice' ancestors ((name 'Kernel-nice.371' message 'Let allSubclasses and withAllSubclasses answer an OrderedCollection rather than a Set.PORTABILITY ISSUES:: application that would need a Set should use an explicit asSet.' id 'daad1ac4-4dd9-40ac-a271-79b28c02fde3' date '5 January 2010' time '2:34:57 am' author 'nice' ancestors ((name 'Kernel-dtl.370' message 'Update CompiledMethod>>initialPC to use #wordSize. This is the method as implemented in the original 64-bit image (author di).Reference Mantis 7430: CompiledMethod>> initialPC calculation is wrong for 64bit images' id 'e0308f0f-c9ab-41a3-b016-838ddac89d75' date '4 January 2010' time '9:45:19 am' author 'dtl' ancestors ((name 'Kernel-ar.369' message 'Make Protocols unloadable: Classify various extension methods in Protocols.' id '1060cec2-3a71-d443-9056-c247c66ab98f' date '4 January 2010' time '2:43:40 am' author 'ar' ancestors ((name 'Kernel-ar.368' message 'Make Etoys unloadable: Move lots of methods to Etoys package. Remove installTilesAsSelection support.' id 'ecc189b7-7be8-e343-ba67-3eb7c3278c95' date '4 January 2010' time '12:39:10 pm' author 'ar' ancestors ((name 'Kernel-nice.365' message 'move #basicType to EToysremove some #or:or: #and:and: sendschange categorizer duplicate strategy' id '75d88db0-4bfc-4c43-9b99-9f82b770d85d' date '3 January 2010' time '3:40:17 am' author 'nice' ancestors ((name 'Kernel-ar.364' message 'Add Behavior>>allTraits as another backstop for traits unloading.' id 'f6172dc5-a959-eb46-b8da-6ce5ba6d9742' date '3 January 2010' time '1:13:39 am' author 'ar' ancestors ((name 'Kernel-ar.363' message 'Making traits unloadable: We need three backstop methods in Behavior.' id 'bb277eb0-1fa6-ef4f-94d3-e29d4ebfc9ee' date '1 January 2010' time '7:18:12 am' author 'ar' ancestors ((name 'Kernel-ul.362' message '- speed up method trailer creation- speed up source fetching from source files' id '96615f68-2456-7745-9ecb-335973913252' date '31 December 2009' time '7:04:23 am' author 'ul' ancestors ((name 'Kernel-ul.361' message '- speed up method trailer creation- speed up source fetching from source files' id '8b6f0a12-2da7-eb4a-a8ab-907e6b9385f2' date '31 December 2009' time '6:31:53 am' author 'ul' ancestors ((name 'Kernel-ar.360' message 'Fix small typo in obsoletion - removeTraitUser: should be sent to the elements of the composition.' id '64a98687-3714-f34f-abf5-0eef057762aa' date '31 December 2009' time '3:42:08 am' author 'ar' ancestors ((name 'Kernel-ar.359' message 'Final cleanup touches: Avoid unused protocol, remove reclassification.' id '7337f125-8970-c049-abdd-31f1fcad7eca' date '31 December 2009' time '2:47:51 am' author 'ar' ancestors ((name 'Kernel-ar.358' message 'Some recategorization and removal of empty categories.' id '64524f19-7ed5-c447-b0e7-87b498e927c2' date '30 December 2009' time '3:25:44 am' author 'ar' ancestors ((name 'Kernel-ar.357' message 'Remove obsolete iVars.' id '48332a10-366b-6546-822e-c1f76c682cb0' date '30 December 2009' time '2:37:27 am' author 'ar' ancestors ((name 'Kernel-ar.356' message 'Temporarily disable warning about class redefinition to remove unused ivars from traits.' id 'b39efe07-b842-5d4f-813e-47f315bd4fdf' date '30 December 2009' time '2:12:47 am' author 'ar' ancestors ((name 'Kernel-ar.355' message 'Remove the egregious hack to rewrite selectors in source code due to sharing compiled methods.' id 'b1e48547-ee40-b64a-9563-42b944955c99' date '30 December 2009' time '3:27:54 am' author 'ar' ancestors ((name 'Kernel-ar.354' message 'Remove traitComposition accessors.' id 'c6632104-c317-9147-88c3-fe024debc35b' date '30 December 2009' time '3:25:09 am' author 'ar' ancestors ((name 'Kernel-ar.353' message 'Prepare to push the trait composition into TraitOrganizer to avoid duplication in three places (Class, Metaclass, TraitDescription).' id '6854a358-f04b-c04c-9584-10181b0c5523' date '30 December 2009' time '2:59:15 am' author 'ar' ancestors ((name 'Kernel-ar.352' message 'Shipping NanoTraits part 4: Here comes the big clean up. Let''s see if it''s loadable :-)' id '090c5c02-8b1a-d34f-a88d-1c203c1ddcfa' date '29 December 2009' time '5:41:30 am' author 'ar' ancestors ((name 'Kernel-ar.351' message 'Shipping NanoTraits part 3: A hand ful of small changes that pave the way for the (major) follow-on cleanup.' id 'adffc800-4eb7-2f43-a55d-f827d0627605' date '29 December 2009' time '4:53:50 am' author 'ar' ancestors ((name 'Kernel-ar.350' message 'Shipping NanoTraits part 2: Commit Kernel package back after NanoTraits install.' id 'd0cb0117-72d6-384e-8065-adcb9229b9ea' date '29 December 2009' time '4:35:59 am' author 'ar' ancestors ((name 'Kernel-ar.349' message 'Strange, somehow a class var was dropped during last check-in. Put it back.' id '3228e52d-3bba-ce4d-9175-db4e535283f8' date '28 December 2009' time '2:15:28 am' author 'ar' ancestors ((name 'Kernel-ar.348' message 'NanoTrait preparations: Vector all traits dependencies through a protocol in ClassDescription so that we can have alternative trait versions be the default. Provide CompiledMethod>>methodHome to ask for the original place a particular method was defined (methodHome == methodClass for all ''normal'' methods). Additional guards for Berne trait idiosynchracies (updateOrganizationSelector: etc) that simply do not apply for alternative traits.' id '9537d1a1-5ef5-c941-b4a6-601d0aa6ad76' date '28 December 2009' time '1:35:01 am' author 'ar' ancestors ((name 'Kernel-dtl.347' message 'CompiledMethod>>checkOKToAdd:at: defers to SourceFiles instance because no end of changes check is needed for ExpandedSourceFileArray.' id 'f6caca0d-1ea4-422c-a891-5bf948673406' date '27 December 2009' time '11:33:42 am' author 'dtl' ancestors ((name 'Kernel-nice.346' message 'Cosmetic: move or remove a few temps inside closures' id 'b6d92933-9056-4bb8-a54d-ffd1bbcc74b6' date '27 December 2009' time '5:10:43 am' author 'nice' ancestors ((name 'Kernel-nice.345' message 'Revert #formalParametersAt: it was traitified' id '87afe7e1-4d46-4e1f-b308-115fac49c41f' date '25 December 2009' time '8:58:24 am' author 'nice' ancestors ((name 'Kernel-nice.344' message 'fix #formalParametersAt: with new support method in ParserNote: this method has no senders in trunk.I suspect it does not have much value...I presume it could have been used by refactoring tools, but RB must be using its own parser...Anyone knows of a package using #formalParametersAt: ?' id '5e5f0f23-ff9c-4f2c-b175-21cc8a639d6d' date '25 December 2009' time '7:23:49 am' author 'nice' ancestors ((name 'Kernel-nice.343' message 'Smalltalk commandments #7:''Thu shalt not invoke super when self could do the job''' id '155bf515-f41c-bc40-9dad-f98c01dfce8d' date '24 December 2009' time '10:22:02 am' author 'nice' ancestors ((name 'Kernel-nice.342' message 'Use scaledIdentityHash for hashing' id '18953e6e-7722-49c9-9247-4606de701531' date '24 December 2009' time '3:09:11 am' author 'nice' ancestors ((name 'Kernel-Igor.Stasenko.341' message '- adding support of embedding source code in trailer' id '164fdcb7-0f83-ce49-8e4d-db607a365d78' date '22 December 2009' time '10:57:21 am' author 'Igor.Stasenko' ancestors ((name 'Kernel-ul.340' message '- fix CompiledMethodTrailer >> #decodeZip (by Igor)' id 'd012b8cc-226a-6a48-b920-543e38da2e2f' date '22 December 2009' time '8:11:40 am' author 'ul' ancestors ((name 'Kernel-ar.339' message 'Merge Kernel-ar.338 which contains the remaining cleanup code. This brings everything back in sync.' id 'b7dccff4-4784-a648-9772-c2002ee8184c' date '22 December 2009' time '7:05:22 am' author 'ar' ancestors ((name 'Kernel-ar.338' message 'Remove *just* CompiledMethodTrailer>>new to fix the load issue encountered earlier.' id '01e676cd-bb48-ce4b-9229-2f3ea6a3bf4c' date '22 December 2009' time '6:38:37 am' author 'ar' ancestors ((name 'Kernel-ar.336' message 'Once more: Convert those trailers!(but this time the method is idempotent so calling initialize twice should have no effect).' id '3bc94ec9-ab5f-544f-9525-4f11e357ec43' date '22 December 2009' time '1:30:34 am' author 'ar' ancestors ((name 'Kernel-ar.334' message 'CompiledMethodTrailer phase 3.' id '0ba0630e-fd40-c748-a7ef-7ed81c29ff94' date '22 December 2009' time '1:00:12 am' author 'ar' ancestors ((name 'Kernel-ar.333' message 'CompiledMethodTrailer phase 2.' id 'c8dddbe1-8097-114b-bed9-c8053064e62d' date '22 December 2009' time '12:49:25 pm' author 'ar' ancestors ((name 'Kernel-ar.332' message 'CompiledMethodTrailer phase 1: Main classes' id '417d4df8-ccf7-484a-8c19-63b0402d4921' date '22 December 2009' time '12:39:41 pm' author 'ar' ancestors ((name 'Kernel-dtl.331' message 'Add BlockClosure>>sender required for MessageTally class>>tallySends:Harvested from Pharo (nice 4/14/2009 19:09).' id '20ffffda-86bc-47a7-8eae-cd11b55aa65e' date '18 December 2009' time '11:32:44 am' author 'dtl' ancestors ((name 'Kernel-bs.330' message 'fixed AdditionalMethodState >> #at:put to make newly added test green' id 'bdbd182a-85fc-4e00-a1e0-7924f4a171cd' date '18 December 2009' time '1:42:28 am' author 'bs' ancestors ((name 'Kernel-jcg.329' message 'Support for using #future and #future: keywords to conveniently send asynchronous messages.Core support is in the Kernel package, and the default behavior is defined by Project, in the System package.' id '9ff6251d-dc4f-4f49-a1ed-476c4b0ba2f9' date '17 December 2009' time '11:59:29 am' author 'jcg' ancestors ((name 'Kernel-ul.328' message '- added a mirror primitive' id 'a4bc72d5-25ee-5a44-8cf9-03286a9fd2dc' date '15 December 2009' time '8:24:33 am' author 'ul' ancestors ((name 'Kernel-ul.327' message '- MethodDictionary >> #at:put: doesn''t use #fullCheck anymore' id 'd87966ba-a11b-4d45-817f-5bdd4447476f' date '14 December 2009' time '6:17:10 am' author 'ul' ancestors ((name 'Kernel-ar.326' message 'Processor anyProcessesAbove: should consult allSubInstances of Process.' id 'a3bced30-2678-534f-a9cc-dc8328748a76' date '10 December 2009' time '12:36:28 pm' author 'ar' ancestors ((name 'Kernel-ul.325' message '- don''t parse the method if the selector is not an alias selector in CompiledMethod >> #getSourceFor:in:. This improves source fetching performance.' id '4f783a4d-1f0d-4248-8e31-6bf866b519ad' date '8 December 2009' time '7:03:36 am' author 'ul' ancestors ((name 'Kernel-ar.324' message 'Faster #ensure: handling: Instead of having the default path use thisContext>>tempAt:put: (which is very slow for the JIT) use a temp assignment and let only the termination handling actually do #tempAt:put:.Part 4 updates #ifCurtailed:.' id 'f04afe5f-4573-5b43-9dc4-0504003e2e34' date '4 December 2009' time '6:43:05 am' author 'ar' ancestors ((name 'Kernel-ar.323' message 'Faster #ensure: handling: Instead of having the default path use thisContext>>tempAt:put: (which is very slow for the JIT) use a temp assignment and let only the termination handling actually do #tempAt:put:.Part 3 updates #ensure: to only use the fast version.' id '4b183b83-103d-a046-b240-8696b955d800' date '4 December 2009' time '6:32:01 am' author 'ar' ancestors ((name 'Kernel-ar.322' message 'Faster #ensure: handling: Instead of having the default path use thisContext>>tempAt:put: (which is very slow for the JIT) use a temp assignment and let only the termination handling actually do #tempAt:put:.Part 2 updates termination handling to the new scheme.' id '58a79c17-4e44-3d4a-bdd0-3be9630020ea' date '4 December 2009' time '6:28:49 am' author 'ar' ancestors ((name 'Kernel-ar.321' message 'Faster #ensure: handling: Instead of having the default path use thisContext>>tempAt:put: (which is very slow for the JIT) use a temp assignment and let only the termination handling actually do #tempAt:put:.Part 1 introduces a version of #ensure: which is compatible with both versions of termination handling.' id '113aabe8-0043-514f-99e1-979ea0f8f647' date '4 December 2009' time '6:26:38 am' author 'ar' ancestors ((name 'Kernel-ar.320' message 'Signal OutOfMemory instead of calling signalLowSpace.' id '3be1d86a-629f-ef4a-ab4c-7b7643c2aab0' date '4 December 2009' time '2:14:06 am' author 'ar' ancestors ((name 'Kernel-ul.319' message 'From: http://bugs.squeak.org/view.php?id=7166- improved preformance for Behavior >> #allSelectors- added Behavior >> #allSelectorsBelow:' id 'b8275b69-ee08-9f45-b8c2-7e020776e941' date '3 December 2009' time '5:12:50 am' author 'ul' ancestors ((name 'Kernel-dtl.318' message 'Remove Object>>couldOpenInMorphic and eliminate "world hacking" method category.' id '0153a88f-b3b4-48e6-9dfa-a6acd42915c3' date '2 December 2009' time '9:22:36 am' author 'dtl' ancestors ((name 'Kernel-nice.317' message 'A faster successor/predecessor implementation thanks to suggestions of Paolo Bonzini and the help of #ulp (unit of least precision - that is the least significant bit of a Float).It works well with default IEEE754 rounding mode (round to nearest even). Don''t know about alternate modes, but we don''t use them right now.' id '07b501b4-4f30-564e-9645-1322d5aafa09' date '2 December 2009' time '5:38:45 am' author 'nice' ancestors ((name 'Kernel-nice.316' message 'Add the ANSI float characterization methods every other Smalltalk has but Squeak.Also add #predecessor and #successor.These changes are already in Pharo.' id 'b108354a-6b8e-8b48-8c9c-fc6c8b47b84c' date '2 December 2009' time '5:34:34 am' author 'nice' ancestors ((name 'Kernel-ar.315' message 'Future proofing: For speed and simplicity, Cog requires LargeNegativeInteger to be compact at 4 (replacing PseudoContext). Integer>>initialize now takes care of that and documents (via LPITest and LNITest) the compact class requirements of LPI and LNI.There  is no actual impact except that LNIs will shave off a header word which in typical images makes no difference whatsover (LargeNegativeInteger instanceCount < 100 in a typical trunk image).' id 'b39007e6-1381-184d-a2c8-58052fd71231' date '30 November 2009' time '10:08:08 am' author 'ar' ancestors ((name 'Kernel-ul.314' message 'Removed preamble.' id 'e293d76b-d182-a44c-b21f-1819da8fa9ec' date '1 December 2009' time '4:23:11 am' author 'ul' ancestors ((name 'Kernel-ul.313' message 'Part 2 of updating Object >> #hash.' id '46ec2793-b46f-fa4c-9149-63e980f5625f' date '1 December 2009' time '4:22:35 am' author 'ul' ancestors ((name 'Kernel-ul.312' message 'Added #scaledIdentityHash.Part 1 of updating Object >> hash.' id '5b9007f4-b0f3-1e42-bf32-5a0efbeaae0f' date '1 December 2009' time '4:19:45 am' author 'ul' ancestors ((name 'Kernel-nice.307' message 'http://bugs.squeak.org/view.php?id=7218ClassOrganizer categories breaks if given an empty array because categoryStops gets set to #() when it should be at least #(0) ' id '32793c3c-4bcd-4323-9c9a-277b9345634e' date '29 November 2009' time '9:53:32 am' author 'nice' ancestors ((name 'Kernel-nice.306' message 'Speed up highBit and lowBit according to http://bugs.squeak.org/view.php?id=7113This is usefull for algorithms like DSA.This version has a cache of known result for bytes.Prerequisite: ByteArray literals #[]{[100000 timesRepeat: [123456798 highBit]] timeToRun.[100000 timesRepeat: [122 highBit]] timeToRun.[100000 timesRepeat: [12 highBit]] timeToRun.[100000 timesRepeat: [3950591 lowBit]] timeToRun.[100000 timesRepeat: [3950592 lowBit]] timeToRun.[100000 timesRepeat: [8 lowBit]] timeToRun.[100000 timesRepeat: [(-1073741824) lowBit]] timeToRun.}"OLD" #(186 139 138 92 165 134 1965) /"NEW" #(115 96 96 83 97 79 743)"SPEED UP FACTOR" collect: [:e | e roundTo: 0.1]-> #(1.6 1.4 1.4 1.1 1.7 1.7 2.6)' id 'a1d781cc-fce8-6d4d-b7a5-149285a38851' date '27 November 2009' time '8:23:42 am' author 'nice' ancestors ((name 'Kernel-ul.305' message '- added Integer >> #sqrtFloor, which returns the floor of the square root of the receiver.- renamed Integer >> #isPrime to #isProbablyPrime.- added Integer >> #isPrime which is implemented as a deterministic primality test- both #isPrime and #isProbablyPrime return false for receivers <= 1 instead of raising an error' id 'a95be01c-d87c-154b-bdc6-c582dafad80b' date '25 November 2009' time '2:55:43 am' author 'ul' ancestors ((name 'Kernel-nice.304' message 'cosmetic clean up of allInstancesDo: do not test == UndefinedObject, but rather override where due.remove Metaclass>>#allInstances.We could also remove Metaclass>>#allInstancesDo:' id 'f7223e31-bebd-4ce9-a68d-ce87258ec6ff' date '22 November 2009' time '9:56:22 am' author 'nice' ancestors ((name 'Kernel-ul.303' message '- removed MethodDictionary >> #do: because it should be the same as Dictionary >> #do:Load Collections-ul.200 before this package!' id 'e49dad60-4c62-f54a-9242-21a1843b4ee6' date '21 November 2009' time '12:32:53 pm' author 'ul' ancestors ((name 'Kernel-nice.300' message 'Fix evaluation of Block copy in case of local return' id 'cf34e502-1f47-c643-9e3b-c86188c6b61c' date '16 November 2009' time '6:02:20 am' author 'nice' ancestors ((name 'Kernel-nice.299' message 'move DependentsArrayTest from Kernel to KernelTests' id '2c6f60a5-26ac-44e1-8227-c6ec1ce99b7b' date '14 November 2009' time '10:20:34 am' author 'nice' ancestors ((name 'Kernel-nice.298' message 'cosmetic clean-up from pharoavoid a useless copy, and avoid inlining anySatisfy:Note that we reject: anySatisfy: references notEmptyWe could as well select: allSatisfy: references isEmptyAffirmations are generally better understood than double negations :)' id '3a192ea2-e091-4b55-8e73-a5283c30deb7' date '14 November 2009' time '9:40:03 am' author 'nice' ancestors ((name 'Kernel-ul.297' message 'In MethodDictionary- implemented #fixCollisionsFrom:- removed #keyAt: (nobody sends it)- removed super send from #swap:with: ' id 'a9d016dd-2b26-414d-aad4-08a732599dee' date '13 November 2009' time '2:39:10 am' author 'ul' ancestors ((name 'Kernel-ar.294' message 'Merging Kernel-ul.293:- moved #hasContentsInExplorer and #explorerContents to Morphic-Explorer' id '5023d4fb-a9d6-9c49-9e35-1b4cd724d298' date '12 November 2009' time '8:25:50 am' author 'ar' ancestors ((name 'Kernel-ul.293' message '- moved #hasContentsInExplorer and #explorerContents to Morphic-Explorer' id '291dbd4b-1393-1849-8574-3b8d7c23d89a' date '11 November 2009' time '8:35:56 am' author 'ul' ancestors ((name 'Kernel-ul.292' message 'moved #hasContentsInExplorer and #explorerContents to Morphic-Extras' id 'd9398983-e223-e441-bd91-22ad6b105ce2' date '11 November 2009' time '8:14:39 am' author 'ul' ancestors ((name 'Kernel-nice.291' message 'Finish fixing comparison of MethodProperties and AdditionalMethodState for debug purposeMethodProperties is candidate for being removed.But it still has a few instances.After fixing comparison, I can remove some with:(MethodContext allInstances select: [:e | e method notNil    and: [ e method isInstalled not    and: [(e method methodClass notNil)    and: [(e method methodClass includesSelector: e method selector)    and: [e method = (e method methodClass >> e method selector)]]]]])  do: [:mc | mc instVarNamed: #method put:    (mc method methodClass >> mc method selector)]A more efficient weapon for eliminating MethodProperties is Utilities postRecompileCleanup.MethodProperties allInstances size -> 0' id '3e5cd2e5-3e74-4398-a409-8e02189e9cec' date '10 November 2009' time '9:53:23 am' author 'nice' ancestors ((name 'Kernel-nice.290' message 'clean-up isSelfEvaluating' id '4cff06dd-bd14-4b39-8867-ff5f1331f558' date '9 November 2009' time '12:25:05 pm' author 'nice' ancestors ((name 'Kernel-nice.289' message 'Fix from http://code.google.com/p/pharo/issues/detail?id=1424This will allow comparing a MethodProperties analogousCodeTo: an AdditionalMethodStateet vice et versa' id '1a0c4764-9a36-4944-a87c-dfe5299dcc32' date '8 November 2009' time '1:03:07 am' author 'nice' ancestors ((name 'Kernel-tbn.288' message 'categorize and format ChronologyConstants>>initialize as a first commit test' id 'aad7e55c-fd95-f744-8a85-e7b176c70810' date '6 November 2009' time '11:34:20 am' author 'tbn' ancestors ((name 'Kernel-ul.287' message '- simplified ClassDescription >> #organization' id '8dcd7ba0-4578-4d4b-836f-b5050896431a' date '4 November 2009' time '12:18:09 pm' author 'ul' ancestors ((name 'Kernel-nice.286' message 'My last fix conflicted with http://bugs.squeak.org/view.php?id=6695Float storeStringBase: does not store the radix Merge the two fixes' id '8990ba20-7244-49e7-b79e-12e397b4a962' date '31 October 2009' time '11:49:19 am' author 'nice' ancestors ((name 'Kernel-nice.285' message 'store a Float exactly so it can be interpreted back unchanged - according to my solution proposed at http://bugs.squeak.org/view.php?id=1631Note that SqNumberParser SHOULD be used for interpreting the Number exactly.Previous Number>>readFrom: accumulate roundoff errors' id 'a71e2eb9-aade-4ec1-8c30-77e6c9eaf9c8' date '31 October 2009' time '5:21:55 am' author 'nice' ancestors ((name 'Kernel-ar.284' message 'Merging Kernel-ul.283:Updated MethodDictionary- added MethodDictionary class >> #rehashAllInstances which rehashes all instances and changes the identities in one shot. Much faster than single #become: sends.- removed	- #add: - same implementation in superclass	- #at:putNoBecome:, #fullCheckNoBecome, #growNoBecome, #removeKeyNoBecome: - old methods with no senders (not even in 3.8 full), no comment stating their usefulness- modified several methods which have cleaner code and/or better performance assuming the following invariant: (self basicAt: index) isNil = (array at: index) isNil- added a line about the invariant to the class comment' id 'f00d24a4-e752-9c4a-b7cc-6a5052f49b9b' date '30 October 2009' time '11:22:18 am' author 'ar' ancestors ((name 'Kernel-nice.283' message 'Make #arcTan: behave as libm atan2 near zero and negativeZero' id '5180827b-8f52-4516-af31-271e133a385a' date '30 October 2009' time '10:32:03 am' author 'nice' ancestors ((name 'Kernel-nice.282' message 'Just a comment about #isSelfEvaluating' id '3b6a0c35-dcc6-4cf8-8490-38aa99e31307' date '30 October 2009' time '8:47:15 am' author 'nice' ancestors ((name 'Kernel-nice.281' message 'Pick in Pharo one forgotten changes of Eliot closure...That makes more ClosureCompilerTest green' id 'c2f3dbc8-83f0-47ad-95e4-195f18f09f30' date '23 October 2009' time '11:08:25 am' author 'nice' ancestors ((name 'Kernel-nice.280' message 'Refactor #whichClassDefinesClassVar:The class var name is a Symbol, so- first test if such a Symbol exists- second test directly = aSymbol rather than converting asString' id 'fb4786ea-1e65-6449-88c5-b6d62f89657e' date '22 October 2009' time '2:31:58 am' author 'nice' ancestors ((name 'Kernel-jcg.279' message '#notYetImplemented now raises a NotYetImplemented error, instead of popping up a notifier. (The NYI class was introduced in Exceptions-jcg.14).' id '7e01a4af-65e0-495c-8b9b-c38a13220660' date '21 October 2009' time '1:11:25 am' author 'jcg' ancestors ((name 'Kernel-nice.278' message 'Use #keys rather than #fasterKeysNote that pattern (x keys asArray sort) could as well be written (x keys sort) now that keys returns an Array...This #asArray is here solely for cross-dialect/fork compatibility.' id '86933c27-4f26-4bf0-a9b9-a2a5afbbbaac' date '21 October 2009' time '12:26:28 am' author 'nice' ancestors ((name 'Kernel-nice.277' message 'remove #keys and let super return an Array rather than an IdentitySet' id 'd887faef-c132-4cfc-98e2-259162e0cd01' date '20 October 2009' time '11:28:51 am' author 'nice' ancestors ((name 'Kernel-nice.276' message 'Track keys and selectors usage, use #includesSelector: #selectorsDo: and #asSet where due+ make #classVarNames a sorted Array' id '76a252f2-4063-451a-86d2-e063dc8be599' date '20 October 2009' time '10:19:32 am' author 'nice' ancestors ((name 'Kernel-nice.275' message 'use #fasterKeys bisclassVariablesString was not traitified' id '9d60c14b-5160-4046-9e7f-3a79c91ca775' date '20 October 2009' time '12:00:39 pm' author 'nice' ancestors ((name 'Kernel-nice.274' message 'use #fasterKeysMy guess is that ClassDescription >> #organization and #classVariablesString should be traitified, so I did not publish my changes.Though I got no warning, no indication of trait, no nothing...I wonder how to work in a traitified image without trait aware tools...' id 'e0d13094-6ba6-9a48-8499-d9506f2b1d29' date '19 October 2009' time '11:43:28 am' author 'nice' ancestors ((name 'Kernel-nice.273' message 'remove uncessary sends of #valuesbecause (aDictionary values do:) is same as (aDictionary do:)except when self modified in the do loop.' id '61ab2bcb-21a7-7145-ba01-19ce66e0ad5f' date '19 October 2009' time '9:18:29 am' author 'nice' ancestors ((name 'Kernel-nice.272' message 'How to gain a factor x2 on speed of String streamContents: [:strm | Float pi absPrintExactlyOn: strm base: 10]1) do not use d := r // s.  r := r \\ s. This will evaluate the quotient twice.2) s generally has a lot of trailing bits = 0, so it is faster to evaluate:d := (r >> (s lowBit - 1)) // (s >> (s lowBit - 1)).especially s lowBit - 1 and (s >> (s lowBit - 1)) can go outside the while loop3) revert the tests in tc1 and tc2: these tests are false but for the last digit.Since Float usually have more than 2 digits, it is statistically faster to test for the false condition first.4) use and: or: when due instead of & |' id '6ad59bb1-c97b-ad4f-aa05-ae19f0921ca5' date '19 October 2009' time '2:39:18 am' author 'nice' ancestors ((name 'Kernel-ar.271' message 'Merging Kernel-ul.270:- faster DateAndTime and Date creation with #year:month:day: and friends- minor formatting fixes' id 'a603d2fe-dccf-894f-95db-ef577480b03c' date '14 October 2009' time '8:49:48 am' author 'ar' ancestors ((name 'Kernel-nice.270' message 'Fix MNU #empty while Debugging' id '310ac212-23d7-4972-b7be-532e95d861e9' date '15 October 2009' time '12:37:52 pm' author 'nice' ancestors ((name 'Kernel-nice.269' message 'The so-called Eliot solution to the xor: problem' id '4df9fa19-cf20-4723-9f11-aefc85fe3c51' date '14 October 2009' time '11:11:06 am' author 'nice' ancestors ((name 'Kernel-ar.268' message 'Demote ParagraphEditor from Kernel to ST80.' id '586b9e85-bea0-f849-9284-0a31fa7e88a7' date '13 October 2009' time '8:21:16 am' author 'ar' ancestors ((name 'Kernel-ar.267' message 'Create Kernel-Models category and promote ValueHolder and StringHolder to be a Kernel (instead of an ST80) entity. Enables support for Model-based Tools without having MVC loaded.' id 'a066b2fe-34d3-c241-8341-d490787d70a7' date '13 October 2009' time '8:11:45 am' author 'ar' ancestors ((name 'Kernel-ar.266' message 'Merging Kernel-ul.264,  Kernel-ul.265:- removed unnecessary #fixTemps send- removed Float >> #shallowCopy. Primitive 148 seems to handle this correcly.' id 'f651d6ae-0be3-a54b-9166-43f4b0abaa88' date '13 October 2009' time '7:41 am' author 'ar' ancestors ((name 'Kernel-ul.264' message '- removed unnecessary #fixTemps send' id '3366ec21-f858-2f4f-b395-b1508250af0f' date '9 October 2009' time '1:00:07 am' author 'ul' ancestors ((name 'Kernel-nice.263' message 'Modify this:(Object>>#printOn:) printStringbefore -> ''a CompiledMethod(1947: Object>>printOn:)''after -> ''(Object>>#printOn: "a CompiledMethod(1947)")''This way, a CompiledMethod printString can be interpreted back.This follows http://bugs.squeak.org/view.php?id=6726A variant has been implemented in trunk previously, but in a non interpretable manner.This one close the report.' id '2ca1dd7b-3aaf-ef40-a65d-9470d31bf6b6' date '7 October 2009' time '8:58:27 am' author 'nice' ancestors ((name 'Kernel-nice.262' message 'Add ANSI required feature #bitAt:from http://bugs.squeak.org/view.php?id=6985' id 'fbaaa422-359f-3b40-9182-658a0e781350' date '6 October 2009' time '12:21:19 pm' author 'nice' ancestors ((name 'Kernel-ar.261' message 'Vector ParagraphEditor''s [shifted]yellowButtonMenu through StringHolder''s menu item definition.' id 'fa1375f2-f6e4-dd4b-a7b2-6d12fc2cb4cf' date '5 October 2009' time '11:33:44 am' author 'ar' ancestors ((name 'Kernel-ar.260' message 'Implement ParagraphEditor>>abandonChangeText so that we don''t need to refer to class ParagraphEditor for that purpose.' id '00c6e0ef-93db-7f47-905a-9065f3a114f7' date '5 October 2009' time '9:52:09 am' author 'ar' ancestors ((name 'Kernel-nice.259' message 'Fix http://bugs.squeak.org/view.php?id=7101asSmallPositiveDegrees uselessly complex and can loop infinitely ' id 'b697f955-c5f6-4e39-8fc2-5456580a73db' date '5 October 2009' time '9:30:30 am' author 'nice' ancestors ((name 'Kernel-nice.258' message 'Patch for http://bugs.squeak.org/view.php?id=7401Float negativeZero shallowCopy loose its negative sign.self assert: Float negativeZero copy hex = Float negativeZero hex.' id '0a436e14-7e47-4bbd-a5fd-1bc9f8b405c0' date '4 October 2009' time '11:38:54 am' author 'nice' ancestors ((name 'Kernel-nice.257' message 'Fix red tests related to ScaledDecimal raisedToInteger:' id '8c32510e-ff6a-4c4c-a134-d2885ca2f4d4' date '4 October 2009' time '10:29:43 am' author 'nice' ancestors ((name 'Kernel-nice.256' message 'Fix for http://bugs.squeak.org/view.php?id=6781self should: [0.0 raisedTo: -1.0] raise: ZeroDivide.I used the license clean fix from Pharo here and also introduce license clean #raisedToInteger: #/ #reciprocal #one by GabrielOmarCotelliThis code is MIT as Gabriel signed the pharo agreement.' id 'a9171183-4c69-4fea-9279-058519685204' date '4 October 2009' time '9:50:10 am' author 'nice' ancestors ((name 'Kernel-nice.255' message 'Fix from http://bugs.squeak.org/view.php?id=6697Number>>storeOn:base: default implementation is wrong: It calls printOn:base:But printOn:Base: does not print the radix, when storeOn:Base: should.As every subclass (except ScaledDecimal) does implement storeOn:Base: the best thing to do is to defer subclassResponsibility.' id '847ee695-85a9-45dd-ae76-ad42a23fb2fd' date '4 October 2009' time '7:54:12 am' author 'nice' ancestors ((name 'Kernel-ul.254' message '- replaced #whileFalse: with #whileFalse in MethodDictionary  >> #scanFor:' id 'e908dda7-2b3b-3d4b-b301-08b2a4d289bf' date '30 September 2009' time '3:04:30 am' author 'ul' ancestors ((name 'Kernel-ar.253' message 'Merging Kernel-ul.251:- replaced uses of #findElementOrNil: with #scanFor:- new #scanFor: implementation for MethodDictionary- Added BlockClosue >> #timeToRunWithoutGC which returns the number of milliseconds taken to the block without GC time.' id '5108df62-e98b-c049-90f5-ca1546d6810d' date '29 September 2009' time '10:19:32 am' author 'ar' ancestors ((name 'Kernel-ar.252' message 'Merging Kernel-ul.250:- removed unnecessary #copy from MethodDictionary' id '53948bd4-f611-da40-aebd-2e26a44d43da' date '29 September 2009' time '10:10:31 am' author 'ar' ancestors ((name 'Kernel-ar.251' message 'Merging Kernel-ul.249:- added MethodDictionary >> #postCopy to replace #copy' id '2c77e627-036d-2b46-b6ab-d6b9b6c2fb22' date '29 September 2009' time '10:06:55 am' author 'ar' ancestors ((name 'Kernel-nice.250' message 'Fix nan comparison from http://bugs.squeak.org/view.php?id=6719Note: the fix does use adpatToXXX:andSend:instead of proposed adpatToXXX:andCompare:This way, it is independant of  http://bugs.squeak.org/view.php?id=3374(I don''t want to fight now with lengthy argumentation)' id 'ae2ecb83-4bd9-fd4d-abf8-2b02d30ba0a9' date '25 September 2009' time '10:47:10 am' author 'nice' ancestors ((name 'Kernel-ar.249' message 'Put the delay guard back which prevented scheduling the same delay multiple times. It got accidentally removed in a recent cleanup.' id 'e21b2985-4367-5342-8fa3-87a10df7a4d1' date '21 September 2009' time '10:20:18 am' author 'ar' ancestors ((name 'Kernel-nice.248' message 'Fix for http://bugs.squeak.org/view.php?id=6695Float storeStringBase: does not store the radixSince Integer and Fraction do store the radix, no reason to differ...' id '89aa20e5-8219-d040-84bc-b10594ff152e' date '19 September 2009' time '9:37:42 am' author 'nice' ancestors ((name 'Kernel-nice.247' message 'Fix for #printShowingDecimalPlaces: The fix comes from http://bugs.squeak.org/view.php?id=5640 with an additional test for printing exceptional values (Inf/NaN).The implementation relies on exact arithmetic (Fraction/LargeInteger) and thus avoid inexact Float rounding operations.' id '7773d01a-b08f-ea41-9e0e-ab68531c4829' date '19 September 2009' time '8:21:42 am' author 'nice' ancestors ((name 'Kernel-nice.246' message 'Another #removeAll for hackers.Don''t know if anyone would use this (unless attacking some squeak services).' id '36a9d04a-8c90-44a2-bb85-056633ab29d6' date '16 September 2009' time '10:06:06 am' author 'nice' ancestors ((name 'Kernel-nice.245' message 'Part of fix for http://bugs.squeak.org/view.php?id=6797Implement #literalEqual: in ScaledDecimal so as to be able to differentiate 0.5s1 and 0.50s2.' id '537341dc-ff1c-44a7-8e3a-264f17f071ca' date '12 September 2009' time '9:10:28 am' author 'nice' ancestors ((name 'Kernel-ar.244' message 'Restore ContextPart>>isBottomContext which for some reason got dropped in latest changes.' id 'eb85be7b-6342-3f41-b69f-b28e30372520' date '6 September 2009' time '11:10:25 am' author 'ar' ancestors ((name 'Kernel-eem.243' message 'Fifth package of eight in closure compiler fixes 9/5/2009.Change kernel to use closure compiler fixes:- Replace old temp names compression scheme with the new one.- restore strange selector replacement in CompiledMethod>>getSourceFor:in:- remove unused CompiledMethod>>primitiveNode (and thence PrimitiveNode)' id '951890ea-0d23-473a-b538-f518d9ba5331' date '5 September 2009' time '5:01:43 am' author 'eem' ancestors ((name 'Kernel-eem.242' message 'Second package of eight in closure compiler fixes 9/5/2009.AdditionalMethodState replaces MethodProperties.  Kernel support for Compiler-eem.78 & Compiler-eem.79.Add ProtoObject>>withArgs:executeMethod: for compiler''suse indtead of adding a method under #DoIt.Make doesNotUnderstand: support resume:.  RequiresExceptions-eem.12.Speed up instVarNamed: et al using ClassDescription>>instVarIndexFor:ifAbsent:Speed up Object>>species by using class prim directly.' id '4732bd13-57f5-4cf0-90fb-0f951ea37509' date '5 September 2009' time '4:15:59 am' author 'eem' ancestors ((name 'Kernel-laza.241' message 'Removes the warning of too long delays from the Delay class comment' id 'bb272481-19dd-ca4d-9f2d-283443900cf5' date '5 September 2009' time '8:51:42 am' author 'laza' ancestors ((name 'Kernel-ar.240' message 'http://bugs.squeak.org/view.php?id=7321(three more change sets at once since I can''t wait three hours for the commits to complete)Change Set:		SignalExceptionFixDate:			23 March 2009Author:			Andreas RaabA fix for Process>>signalException: which would not work properly for Process subclasses and should use atomic suspend if at all available.Change Set:		ProcessTerminateFixDate:			23 March 2009Author:			Andreas RaabFixes a problem in Process>>isTerminated which can cause severe problems if the process which is being asked runs at a higher priority than the process asking. In this situation the answer may be incorrect if an external signal occurs while the code is trying to find the bottom context of an executing process.Change Set:		DelayWaitTimeoutDate:			23 March 2009Author:			Andreas RaabProvides a light-weight, correct implementation of waitTimeoutMSecs:' id '099cbd0d-a7eb-0d49-952d-85f7b8391795' date '4 September 2009' time '12:01:07 pm' author 'ar' ancestors ((name 'Kernel-ar.239' message 'Ah, yes. Our version of Monticello removes methods before installing the new ones and that doesn''t play very well when it comes to Delay. Silly, silly Monticello. Restore the methods so people can load the update and leave in the cruft for now.' id '8e35a7c8-a3cc-ab46-bd6c-ad7f04321f77' date '3 September 2009' time '10:59:24 am' author 'ar' ancestors ((name 'Kernel-ar.238' message 'http://bugs.squeak.org/view.php?id=7321Change Set:		AtomicProcessSuspendDate:			23 March 2009Author:			Andreas RaabIn-image support for atomic process suspend.' id '9896c3f8-760f-e942-ac84-5f6c9127150c' date '3 September 2009' time '9:50:51 am' author 'ar' ancestors ((name 'Kernel-ar.237' message 'http://bugs.squeak.org/view.php?id=7321Change Set:		DelayCleanupDate:			23 March 2009Author:			Andreas RaabCleans up Delay by removing many of the no longer used methods (timerInterruptWatcher etc). It also provides some fixes for methods that got mysteriously broken even though their original versions were perfectly fine, including Delay class>>timeoutSemaphore:after:.' id '0ce8d553-42c8-2d42-add2-fbadccdbfe28' date '3 September 2009' time '9:48:09 am' author 'ar' ancestors ((name 'Kernel-tfel.236' message 'This fixes Bug #0006764 where Duration couldn''t deal with trailing spaces properly.' id 'c52f7e22-0347-48b2-b827-77855c248e2d' date '2 September 2009' time '11:07 am' author 'tfel' ancestors ((name 'Kernel-tfel.235' message 'Changed the parsing from Stream in Date and Time classes to be more forgiving and esp. in the Date class to allow the ISO8601 format. Also changed the DateAndTime parsing to use the methods of Date and Time to parse their parts of the Stream making the whole method more forgiving if they don''t properly keep to the standard.' id 'd2e0bf54-4389-4074-8d85-d98707f39ef1' date '1 September 2009' time '11:37:20 am' author 'tfel' ancestors ((name 'Kernel-ar.234' message 'BlockClosure>>argumentCount for ansi compatibility.' id '24194d03-8c8c-324f-b6bb-34c7caf7011e' date '1 September 2009' time '1:19:59 am' author 'ar' ancestors ((name 'Kernel-ar.233' message 'Restore traits composition when printing class definitions.' id '3041bac3-13dd-d841-99a7-79e006ddf675' date '1 September 2009' time '1:00 am' author 'ar' ancestors ((name 'Kernel-dtl.232' message 'Update #oopString comment' id 'd3863eef-2d76-454e-97d2-7070ea1ac7d1' date '29 August 2009' time '3:10:31 am' author 'dtl' ancestors ((name 'Kernel-ar.231' message 'BlockClosure>>asMinimalRepresentation needs to return self, just like the comment says.' id '0fa0cc93-b060-8546-b78f-afa7b8429e80' date '26 August 2009' time '9:44:33 am' author 'ar' ancestors ((name 'Kernel-ar.230' message 'Implementations for BlockClosure>>isValid and asMinimalRepresentation for compatibility of BlockClosure with the when:evaluate: protocol.' id 'd0759469-14fd-2c40-a5bd-90aab36cd9a5' date '26 August 2009' time '9:01:37 am' author 'ar' ancestors ((name 'Kernel-ar.229' message 'Merging Kernel-djr.228:CompiledMethod>>= seems to be broken. Attempt to fix it.MethodProperties>>analogousCodeTo: calls Pragma>>analogousCodeTo: which does not exist.Further assume when both properties are nil and both pragmas are empty, its equal.' id 'fad5617c-3a41-4c4e-80af-d8b2234cca10' date '26 August 2009' time '8:42:37 am' author 'ar' ancestors ((name 'Kernel-dtl.226' message 'Reference Mantis 7221: Remove some leftover VMMaker methods from base images.Remove several C code generation methods that have previously been recategorized to the VMMaker package.' id 'fbd0e6cd-91b7-4a1a-bee7-5f776d32e4d1' date '25 August 2009' time '9:45:30 am' author 'dtl' ancestors ((name 'Kernel-bf.225' message 'Clarify the meaning of #asOop in Squeak.' id 'f47aa5b7-b450-4ed2-8237-26841337ce18' date '22 August 2009' time '5:25:40 am' author 'bf' ancestors ((name 'Kernel-ar.217' message 'Styling hooks:- Add ParagraphEditor>>blinkParen and fix issue in ParagraphEditor>>clearParens for syntax highlighting compatibility.' id 'dd955a09-e540-8e42-a96f-190001d14800' date '18 August 2009' time '12:21:31 pm' author 'ar' ancestors ((name 'Kernel-ar.216' message 'Another round of reducing MVC/Morphic dependencies:- Introduce the #isWindowForModel: protocol which avoids the use of patterns like "(d isKindOf: SystemWindow orOf: StandardSystemView) and:[d model == self]"- Simply Object>>currentWorld to neither look at MVC embedded worlds nor create new MVC-based morphic worlds' id '6460bb2f-a080-c844-b792-d90dbdf7d40f' date '15 August 2009' time '3:21:22 am' author 'ar' ancestors ((name 'Kernel-mha.215' message 'removed obsolete method from CompiledMethod' id '56942fac-4cf8-4683-9150-7fc609ac4967' date '14 August 2009' time '8:45:23 am' author 'mha' ancestors ((name 'Kernel-mha.214' message 'fixed problem in MethodProperties>>#analogousCodeTo: that would cause an error in TraitTest' id '11f330dc-4448-4602-aece-922a2b8ca389' date '11 August 2009' time '9:18:30 am' author 'mha' ancestors ((name 'Kernel-mha.213' message 'implemented isMethodContext to avoid an error in MethodContextTest' id '33923d84-e551-435e-bba3-8595c25d01c0' date '10 August 2009' time '9:04:41 am' author 'mha' ancestors ((name 'Kernel-nice.212' message 'Patch for http://bugs.squeak.org/view.php?id=7373-2.0 isInf -> true ' id 'bff91e35-b63c-4d30-bfbe-4a20254e99b9' date '9 August 2009' time '10:20:40 am' author 'nice' ancestors ((name 'Kernel-ar.211' message 'Allow CompiledMethod to provide a suitable drag label. Used by DnD in browsers.' id 'd2094614-095a-f94f-80b3-f58bf25d4534' date '8 August 2009' time '12:06:31 pm' author 'ar' ancestors ((name 'Kernel-ar.210' message 'Closure fallout: With closures, all object enumeration must have a definitive end marker since enumeration will almost always create new contexts from block activations.' id '4cccf698-4f26-0845-96d5-b5242a7182bd' date '6 August 2009' time '11:30:25 am' author 'ar' ancestors ((name 'Kernel-ar.209' message 'UIManagerization. Replaces all the trivial references to PopUpMenu, SelectionMenu, CustomMenu, and FillInTheBlank.' id 'aaf16b53-7d85-de41-9c41-e4b344a12b96' date '6 August 2009' time '8:57:12 am' author 'ar' ancestors ((name 'Kernel-ar.208' message 'Fixes debugging of FFI methods.' id 'f304322e-b838-f145-b163-f1c59d5e0eb9' date '2 August 2009' time '10:51:42 am' author 'ar' ancestors ((name 'Kernel-nice.207' message 'Fix forhttp://bugs.squeak.org/view.php?id=6983Float nan isLiteral. It should not. ' id '09318e77-fbbc-47db-9df6-f6ee867f3b24' date '28 July 2009' time '2:46:30 am' author 'nice' ancestors ((name 'Kernel-nice.204' message 'Fix forhttp://bugs.squeak.org/view.php?id=4378ScaledDecimal storeString incorrectly use printOn: and loose exactness ' id '7797ccd7-5fa4-4302-9007-24889dfc6ded' date '28 July 2009' time '2:17:12 am' author 'nice' ancestors ((name 'Kernel-nice.203' message 'Speed up number parsing by refactoring SqNumberParserhttp://bugs.squeak.org/view.php?id=6976http://bugs.squeak.org/view.php?id=7174+ some refactoring applied in PharoMain speed up come from:- not using Character>>#digitValue- avoid creating ifFail: [] blocks, but rather return nil- compose and conquer algorithm for parsing large integers (so as to make as many computations with SmallInteger as possible, in the spirit of divide and conquer printing)' id '6a236a07-be89-4628-a98d-c5d70e08240c' date '26 July 2009' time '1:22:40 am' author 'nice' ancestors ((name 'Kernel-nice.202' message 'Fix forhttp://bugs.squeak.org/view.php?id=6779ScaledDecimal readFrom: ''5.3''.did not answer a ScaledDecimal ' id '5717de3a-9344-4dee-bbe5-48717e9b7709' date '25 July 2009' time '11:05:30 am' author 'nice' ancestors ((name 'Kernel-nice.201' message 'Fix for http://bugs.squeak.org/view.php?id=7169self assert: (SqNumberParser parse: ''0.50s2'') = (1/2).' id '381decf3-a3e2-4167-bf7d-012a5aa355de' date '25 July 2009' time '11:00:36 am' author 'nice' ancestors ((name 'Kernel-nice.200' message 'Faster printString for LargeIntegerhttp://bugs.squeak.org/view.php?id=6887Basic idea is to use divide and conquer algorithm:split the LargeInteger in two halves and recursively so as to fallback to faster SmallInteger arithmetic as soon as possible.This change improves[:n | [n printString] bench] value: 100 factorial.by roughly a factor 4' id '1ae51ff8-f5b2-4972-9075-4e9320fdb666' date '25 July 2009' time '10:50:30 am' author 'nice' ancestors ((name 'Kernel-nice.199' message 'Fix for http://bugs.squeak.org/view.php?id=6874(2 raisedTo: 31) negated bitAnd: (2 raisedTo: 31) negated - 1.' id '92be1844-0ccc-49af-babb-99ae4db2879b' date '22 July 2009' time '9:21:39 am' author 'nice' ancestors ((name 'Kernel-nice.198' message 'Fix for http://bugs.squeak.org/view.php?id=7114SmallInteger minVal highBitOfMagnitude.' id '8ce08ebc-4963-4d78-8af6-794b51ee2363' date '22 July 2009' time '9:01:38 am' author 'nice' ancestors ((name 'Kernel-ar.197' message 'The valueSuppressing/SupplyingAnswers protocol was missing from BlockClosure which caused several tests to fail.' id '43d5bc3e-4ebd-a04a-8613-bfce6ab3bb20' date '20 July 2009' time '12:28:03 pm' author 'ar' ancestors ((name 'Kernel-nice.196' message 'remove #asFloatSimplyhttp://bugs.squeak.org/view.php?id=7040#asFloatSimply was introduced temporarily by me for fixinghttp://bugs.squeak.org/view.php?id=3564However, it was soon superseded, and I doubt it were ever used.I propose to not even deprecate it, but simply remove it.' id 'b51aaae8-eab7-4c01-9eaa-22bf9db31399' date '19 July 2009' time '9:56:33 am' author 'nice' ancestors ((name 'Kernel-nice.195' message 'Fix forhttp://bugs.squeak.org/view.php?id=69900.0 significandAsInteger' id 'e3ad6b64-9516-48d2-9c3d-b9b6e5c5cb96' date '19 July 2009' time '9:43:31 am' author 'nice' ancestors ((name 'Kernel-nice.194' message 'Fix forhttp://bugs.squeak.org/view.php?id=7134Float rounded is inexact' id 'b25350c0-5d0e-4e49-aaa3-999136eb60cf' date '19 July 2009' time '9:05:25 am' author 'nice' ancestors ((name 'Kernel-nice.193' message 'Fixes for both:http://bugs.squeak.org/view.php?id=6729Float infinity closeTo: Float infinity negated.http://bugs.squeak.org/view.php?id=73681.0 closeTo: 200 factorial.' id '58a1d853-346e-4e33-b6c9-ff807158e20b' date '19 July 2009' time '7:37:27 am' author 'nice' ancestors ((name 'Kernel-ar.192' message 'Post-closure cleanup and underscore removal.' id 'd33d968e-3948-2c46-b0ae-5421aa727146' date '18 July 2009' time '8:28:47 am' author 'ar' ancestors ((name 'Kernel-ar.189' message 'Closure compiler, main part.' id '2062a7e3-30b2-7a4d-89ee-72910323b08d' date '15 July 2009' time '10:36:24 am' author 'ar' ancestors ((name 'Kernel-ar.188' message 'Prerequiste changes for Closure installation.' id 'f9b32a15-1f2e-534e-915e-38e153b3b2a0' date '15 July 2009' time '10:11:05 am' author 'ar' ancestors ((name 'Kernel-dtl.187' message 'Reference Mantis 7353: Float>>printPaddedWith:to: doesn''t meet its specificationFix provided by Eliot Miranda:The comment for Float>>printPaddedWith:to: is    "Answer the string containing the ASCII representation of the receiver    padded on the left with aCharacter to be at least on aNumber    integerPart characters and padded the right with aCharacter to be at    least anInteger fractionPart characters."but the number of fractional characters printed is not respected, at least not obviously.e.g. IMO ((1000 / 3) roundTo: 0.001) printPaddedWith: $: to: 4.5should answer '':333.333::'' but answers '':333.333:::::::''.The bug is in the computation of fLen:    fLen := (aNumber fractionPart * (aNumber asFloat exponent * 10)) asInteger.for a natural interpretation of the fractionPart this can read e.g.    fLen := aNumber fractionPart.    [fLen fractionPart > 1e-6] whileTrue:        [fLen := fLen * 10.0].    fLen := fLen asInteger.' id 'a1ce9228-448a-45a2-b93f-4fd68b493650' date '14 July 2009' time '10:43:24 am' author 'dtl' ancestors ((name 'Kernel-dtl.186' message 'Reference Mantis 7357: DateAndTime class>>localOffset broken since Mantis 474, and Mantis 7273: DateAndTime class>>localTimeZone: does not workRestore original implementation of DateAndTime class>>localOffset (including original author initials and time stamp, but with <lf> characters removed from source). Eliminate class variable LocalOffset.This restores the original correct implementation, with no performance penalty.' id 'd240f600-2075-4d02-b570-3c75071f2826' date '14 July 2009' time '6:49:42 am' author 'dtl' ancestors ((name 'Kernel-ar.185' message 'Fixes ClassBuilder''s resistance to change a class from being a #subclass: to being a #variableSubclass: due to a test that should only be run for actual subclasses but was invoked for the superclass too. A test is provided in KernelTest-ar.67.' id 'fdd98fbc-9384-0043-a593-fb56728c03eb' date '13 July 2009' time '9:24:12 am' author 'ar' ancestors ((name 'Kernel-dtl.179' message 'Reference Mantis 7361: Float >= primitive failure code sends > instead of >=Updated Float>>>= to fix error in fallback code (typo)' id 'cada9be5-4834-4d84-a812-a42b1cf130c3' date '13 July 2009' time '9:40:18 am' author 'dtl' ancestors ((name 'Kernel-dtl.178' message 'Reference Mantis 7367: Add #asTimeStamp to TimeStamp class>>currentAdd an #asTimeStamp to implementation of TimeStamp class>>current. Ensures that #current always answers an instance of TimeStamp even if the superclass implementation is modified. Permits external package TimeZoneDatabase to avoid packaging conflicts. There is no impact on function or performance. All Chronology tests are green.' id 'c5c594c4-1a34-46cf-abf9-376914bb30bf' date '13 July 2009' time '4:13:46 am' author 'dtl' ancestors ((name 'Kernel-dtl.177' message 'Reference Mantis 0007356: DateAndTime fromSeconds: 0.5 => walkback, broken since Mantis 4669Allow #fromSeconds: to accept non-integer arguments, and update Time>>printString to display fractional seconds for better compatibility with the original Squeak implementation. The expressions ''DateAndTime fromSeconds: 0.5'' and ''Time fromSeconds: 0.5'' now behave as expected.This change set fixes a limitation of #fromSeconds: that was introduced in Mantis 4669: [ENH] TimeForSpeed. It changes the corresponding #fromSeconds: and #printString for class Time to match DateAndTime and to be more compatible with the original Squeak implementation.' id '152a8933-6259-46cc-a118-55029e8dbb5a' date '13 July 2009' time '12:08:49 pm' author 'dtl' ancestors ((name 'Kernel-dtl.176' message 'Remove temporary class variables from TimeSpan and Year. This completes removal of <lf> characters from these classes.' id '4086bce4-3850-4d74-a84f-d27f245c9d07' date '11 July 2009' time '4:40:16 pm' author 'dtl' ancestors ((name 'Kernel-dtl.175' message 'Remove <lf> characters from class comments of TimeSpan and Year. Add a bogus class veriable to each, to trick Monticello into accepting the change. The class variables will be removed in the next update.' id 'a0b860eb-7c60-4238-8597-0fac994e680c' date '11 July 2009' time '4:38 pm' author 'dtl' ancestors ((name 'Kernel-dtl.174' message 'Remove <lf> characters from a couple of methods in Kernel-Chronology missed in the last update.' id '5cd5ab8b-92f0-4fbf-9cc5-f5f377b67f67' date '11 July 2009' time '4:15:39 pm' author 'dtl' ancestors ((name 'Kernel-dtl.173' message 'Remove <lf> and fix underscores for Kernel-Chronology.Reference Mantis 5229: Linefeeds in 22 Methods in 3.9g-7061and Mantis 5675: Many method sources and class comments have been contaminated with Character lf.Removed line feed characters and converted underscores to := for assignment, added missing indentation to one method.Original author initials and timestamps have been retained.Tricked Monticello into saving methods as "changed" by one of the following: - add or remove a line terminator to the method - remove unnecessary trailing $. at end of method' id 'f28428f4-cce4-4ef8-862b-25e912365e15' date '11 July 2009' time '3:58:44 pm' author 'dtl' ancestors ((name 'Kernel-auto.172' message 'This is an automatic commit from the 3.10.2 to cover the delta between 3.10 and 3.10.2 in the repositories' id 'bbb3bc0f-0f5f-534d-9d96-dbc20961ca3b' date '2 July 2009' time '7:06:49 pm' author 'auto' ancestors ((name 'Kernel-edc.171' message 'To follow this seehttp://bugs.squeak.org/view.php?id= 5640' id 'f6d06fee-a24d-491d-887d-1f6481b5e8df' date '24 November 2007' time '7:13:04 am' author 'edc' ancestors ((name 'Kernel-edc.170' message 'To follow this seehttp://bugs.squeak.org/view.php?id= 4669' id '52c8ec6e-63b5-4366-9036-b9ab6f0c779b' date '23 November 2007' time '6:36:21 am' author 'edc' ancestors ((name 'Kernel-edc.169' message 'To follow this seehttp://bugs.squeak.org/view.php?id= 6660' id '5c37c34a-f19a-4ab5-9f19-75ef360e641e' date '4 November 2007' time '11:20:11 am' author 'edc' ancestors ((name 'Kernel-edc.168' message 'To follow this seehttp://bugs.squeak.org/view.php?id= 6588' id 'b63aa974-c898-44f3-b31f-821572a5f8b6' date '4 November 2007' time '11:00:44 am' author 'edc' ancestors ((name 'Kernel-edc.167' message 'To follow this seehttp://bugs.squeak.org/view.php?id= 6576' id '0c2d6005-c576-4d0f-9222-f800a2779f0d' date '4 November 2007' time '7:46:51 am' author 'edc' ancestors ((name 'Kernel-edc.166' message 'To follow this seehttp://bugs.squeak.org/view.php?id= 6628' id '5d05b8d5-29ab-4702-8760-e2554f590d50' date '2 November 2007' time '6:37:59 am' author 'edc' ancestors ((name 'Kernel-edc.165' message 'To follow this seehttp://bugs.squeak.org/view.php?id= 6590' id '40a67f99-d132-4cdc-a0d1-f3741bbd930d' date '8 August 2007' time '11:07:48 am' author 'edc' ancestors ((name 'Kernel-edc.164' message 'To follow this seehttp://bugs.squeak.org/view.php?id= 6599' id 'e3fb8ea5-ac54-4864-99da-b9dd866b1c52' date '8 August 2007' time '8:54:31 am' author 'edc' ancestors ((name 'Kernel-edc.163' message 'To follow this seehttp://bugs.squeak.org/view.php?id= 6576' id 'b2bd5da7-bb65-481b-be08-d569672d2589' date '28 July 2007' time '7:00:34 am' author 'edc' ancestors ((name 'Kernel-edc.162' message 'To follow this seehttp://bugs.squeak.org/view.php?id= 6475' id '9519602c-e1e7-4951-8088-fd4f62acbbee' date '21 July 2007' time '6:31:08 am' author 'edc' ancestors ((name 'Kernel-edc.161' message 'To follow this seehttp://bugs.squeak.org/view.php?id= 474' id '5ba3062a-a27d-4085-948a-949d4240328f' date '21 July 2007' time '5:53:42 am' author 'edc' ancestors ((name 'Kernel-edc.160' message 'To follow this seehttp://bugs.squeak.org/view.php?id= 6512' id '3b02b7e8-6873-478a-ad24-9d5ed8bf4c49' date '19 July 2007' time '4:55:20 pm' author 'edc' ancestors ((name 'Kernel-edc.159' message 'To follow this seehttp://bugs.squeak.org/view.php?id= 6441' id '1331e35e-d9d3-452c-9ccd-806395560b5e' date '26 June 2007' time '8:38:33 am' author 'edc' ancestors ((name 'Kernel-edc.158' message 'To follow this seehttp://bugs.squeak.org/view.php?id= 6441' id 'b20f1178-fa3b-4d99-8f0d-e935ac1710c1' date '25 June 2007' time '8:43:23 am' author 'edc' ancestors ((name 'Kernel-edc.157' message 'To follow this seehttp://bugs.squeak.org/view.php?id= 6505' id '2a68ca4e-8cde-47b0-a7ec-ad5b8833d58a' date '25 May 2007' time '5:38:05 am' author 'edc' ancestors ((name 'Kernel-edc.156' message 'To follow this seehttp://bugs.squeak.org/view.php?id= 1666' id '5d78062d-872b-4b9f-a1f7-fb3fe973802a' date '11 May 2007' time '8:05:49 am' author 'edc' ancestors ((name 'Kernel-edc.158' message 'To follow this seehttp://bugs.squeak.org/view.php?id= 1666' id '0928f6f6-f8fc-452f-b1bc-f5cb58f9a42d' date '11 May 2007' time '8:01:48 am' author 'edc' ancestors ((name 'Kernel-edc.155' message 'To follow this seehttp://bugs.squeak.org/view.php?id= 6340' id '795faf47-e171-4452-9475-66fa31dbada1' date '8 May 2007' time '6:35:35 pm' author 'edc' ancestors ((name 'Kernel-edc.154' message '"To follow this see http://bugs.squeak.org/view.php?id=1014"' id '4c3d548d-a8f1-44ff-9d30-ab06d67a88d5' date '13 April 2007' time '5:15:39 pm' author 'edc' ancestors ((name 'Kernel-edc.153' message 'To follow this seehttp://bugs.squeak.org/view.php?id= 2273' id '0adadd7a-a329-4064-91bb-bd76e30387f6' date '2 April 2007' time '8:48:03 am' author 'edc' ancestors ((name 'Kernel-edc.152' message 'To follow this seehttp://bugs.squeak.org/view.php?id= 3568' id 'a325185b-f4b2-4dce-bdf7-55488f59bdef' date '1 April 2007' time '9:02:41 am' author 'edc' ancestors ((name 'Kernel-edc.151' message 'Some of the tests in the final released 3.9 image fail. You should be able to run all tests in a fresh image and get a green bar in the TestRunner.The following patch makes that happen. Some of the bugs are fixed (thanks to Hans-Martin Mosner) and I deleted some of them and moved the rest of them to subclasses in a category FailingTests, which I then deleted. I have attached a change file that makes all the tests green in the final released image.Ralph Johnson' id '945f73dc-a20f-4d5a-90aa-105c61c5c1f0' date '31 January 2007' time '6:57:44 am' author 'edc' ancestors ((name 'Kernel-sd.150' message 'make test green' id '482019e1-6dce-11db-8b0c-001124e3ab0e' date '6 November 2006' time '8:37:47 pm' author 'sd' ancestors ((name 'Kernel-sd.149' message 'ClassRenameFix7#2006.1.cs' id 'e48b0a75-606f-11db-8261-001124e3ab0e' date '20 October 2006' time '9:19:22 pm' author 'sd' ancestors ((name 'Kernel-md.148' message 'fix condenseSources' id '019e0695-1ae4-4c2d-a683-cdccb579f3ff' date '7 September 2006' time '10:41:52 pm' author 'md' ancestors ((name 'Kernel-md.147' message '- clean up CM>>methodClass /selector- fix some direct reverences to Compiler' id '39933ad5-63fd-43c6-8cc9-93e604d26502' date '2 August 2006' time '8:43:03 pm' author 'md' ancestors ((name 'Kernel-md.146' message 'dirty' id '26dfdb9f-2c4c-4fcb-b9cc-ba5f871b40aa' date '2 August 2006' time '5:43:19 pm' author 'md' ancestors ((name 'Kernel-md.144' message '0003133: [BUG][FIX] Float>>#asIEEE32BitWord and #fromIEEE32Bit:0004312: Refactoring for behavior>>#new0004307: DependentsArray>>copyWith:' id '6bd10e3b-f3cd-4481-8491-1ec4a5ea0c3f' date '23 July 2006' time '12:34:54 pm' author 'md' ancestors ((name 'Kernel-md.143' message '0004314: CleanUpMacOptionKeyPressed-md.cs' id '71822507-efb5-445b-85c6-9468d4561747' date '23 July 2006' time '12:17:06 pm' author 'md' ancestors ((name 'Kernel-md.142' message '0002120: Remove Object>>externalCallFailed from Kernel package0004138: ScaledDecimals are parsed incorrectly in 3.9b-70360003609: Integer >> crossSumBase: aBase\0003820: Code or comment in Date>>fromString: incorrect' id 'bc06ef54-5012-4b93-805f-f0ea2a234cd7' date '15 July 2006' time '6:16:17 pm' author 'md' ancestors ((name 'Kernel-md.141' message '0002151: Max number of literals checked in MethodNode instead of CompiledMethod0003512: Number>>readFrom: does not handle error cases correctly' id '00e649d3-606d-4d42-b9e5-548e765bf1fd' date '14 July 2006' time '9:29:25 pm' author 'md' ancestors ((name 'Kernel-md.140' message '0003993: Number does not read ''1.0e-10 .txt'' from file' id 'f3d2af43-b5d8-4404-b1a8-fa2c562dee3b' date '14 July 2006' time '4:41:50 pm' author 'md' ancestors ((name 'Kernel-md.139' message 'In 3.9b-7029, WeakMessageSendTest fails for lack of class comments. I spent about a hour studying the class and provided a reasonable class comment.All KernalTests-Objects now run green.- fix for Paragrapheditor>>#prettyPrint:' id '7de16533-743b-438b-84ac-e57243b709a4' date '14 July 2006' time '12:42:52 pm' author 'md' ancestors ((name 'Kernel-sd.138' message '0003628: refactoring for hasInstVarRefDescriptionhasInstVarRef was only defined on the Context, this one moved the implementation fromMethodContext to compiledMethod (and just forwards from MethodContext).Additionally, the changeset has a small refactoring to use BlockContext>>#endPC in BlockContext>>#hasInstVarRef' id 'f1634b7e-6abe-4d12-84bb-9dd65f8f489d' date '13 July 2006' time '5:10:47 pm' author 'sd' ancestors ((name 'Kernel-sd.137' message '0003648: explicit ^self in #yourselfDescription... when it''s important to return self, write it. (from the best practice patterns). yourself wouldbe a nice example to show this in a lecture.' id '0fec124a-d6d3-42f7-aaa0-82459134d8d1' date '13 July 2006' time '3:23:12 pm' author 'sd' ancestors ((name 'Kernel-sd.136' message '0003763: simplify #linesOfCodeDescriptionmove logic from ClassDiscription#linesOfCode to CompiledMethod#linesOfCode' id '0c1fe719-6ebd-44de-90fe-49fb38269e38' date '13 July 2006' time '2:35:17 pm' author 'sd' ancestors ((name 'Kernel-md.135' message 'fix CompiledMethod>>#= to ignore the last two literals(we may want to extend it to take pragmas into accountfor equality later...)' id '61de8206-a937-4ad9-a401-c82f20946fa0' date '12 July 2006' time '10:25:06 pm' author 'md' ancestors ((name 'Kernel-sd.134' message '0003821: addMonths: does not handle leap years correctly' id 'ff18f59a-caee-4d15-aca5-3195470d09f7' date '12 July 2006' time '6:23:46 pm' author 'sd' ancestors ((name 'Kernel-sd.133' message 'Merge al 130 condenseChanges fix.' id '21835b78-34c9-4f45-8e83-b6961fa2cd63' date '12 July 2006' time '4:50:23 pm' author 'sd' ancestors ((name 'Kernel-sd.132' message '0004078: Misuse of #inject:into: in DependentsArray>>size' id '6f606fb1-7514-4507-a5b2-70c183cb2f99' date '8 July 2006' time '6:33:21 pm' author 'sd' ancestors ((name 'Kernel-sd.131' message '0003568: [FIX] Fraction>>asFloat does not answer nearest floating point number0003564: LargeInteger>>asFloat does not honour IEEE rounding mode' id '43e5c7a6-4952-419b-840f-7a9e3fc07667' date '8 July 2006' time '6:11:15 pm' author 'sd' ancestors ((name 'Kernel-pmm.130' message '- fix browsing with alt+b for globals like Smalltalk- push #isTrait to Object like #isBehavior' id 'ca825d54-f890-4bcb-be38-4a718f29459b' date '6 July 2006' time '8:59:24 pm' author 'pmm' ancestors ((name 'Kernel-al.129' message '- small fix of the ClassBuilder (when redefining a class, its class side traits were lost)' id 'ea1c48cf-2455-4fa5-ad13-75616626321b' date '3 July 2006' time '3:58:12 pm' author 'al' ancestors ((name 'Kernel-sd.128' message '	- allow for instantiating Behavior for creating anonymous classes (al fixes)' id 'fd4d1494-0b67-4ae7-8014-a61e74bd8544' date '20 June 2006' time '12:27:46 pm' author 'sd' ancestors ((name 'Kernel-pmm.127' message '- fix for browsing traits with shortcuthttp://bugs.impara.de/view.php?id=3255' id '25ac39a7-9c10-44a3-9bcf-ee8718028cdb' date '3 June 2006' time '3:18:27 pm' author 'pmm' ancestors ((name 'Kernel-al.126' message '- recategorizing methods from *Traits extensions to local packages- refactor accessing trait compositions to avoid unnecessary lazy initialization- changes from ivar-shift cs' id 'b8cd5ed6-3890-4642-8083-08af689a2cc0' date '7 May 2006' time '6:11:48 pm' author 'al' ancestors ((name 'Kernel-sd.125' message 'restore canUnderstand: + introduce canPerform:' id 'bd20f5e4-b563-4482-809f-c5d8b56c5f8e' date '7 May 2006' time '12:36:46 pm' author 'sd' ancestors ((name 'Kernel-sd.124' message '0003519: Duration isZero gets MNU in 7026;fix failed' id 'fb186e8f-724c-4157-8a8b-e56ce4ec6b4b' date '4 May 2006' time '3:57:58 pm' author 'sd' ancestors ((name 'Kernel-sd.123' message '0003527: infinite loop on locale change (Mantis 0003510 ) not fixed yet in 7027' id '0fa5b8ac-17e1-4b3d-9d61-9b847824657b' date '4 May 2006' time '3:29:43 pm' author 'sd' ancestors ((name 'Kernel-sd.122' message 'New version....because of problems	---------------------------------	0003520: Chronology Tests for hash failed in 7025; fixes included (by Tom Koenig)	---------------------------------	0003518: SkipListTests fails/errors in 7025;SkipListTestsFixes (by Tom Koenig)	---------------------------------	0003373: Float asFraction does not handle gradual underflow' id '482a31c8-1465-47ce-89ed-18fabb07f602' date '2 May 2006' time '8:50:50 pm' author 'sd' ancestors ((name 'Kernel-sd.118' message '0003504: Float asInteger conversion is inexact...' id 'af70ba1b-2cac-4ee2-a060-cad7f31fe8d9' date '29 April 2006' time '10:56:50 pm' author 'sd' ancestors ((name 'Kernel-sd.117' message 'See Mantis bug 1840 and 854.This changeset allows a too-long Delay to fail the relevant primitive and schedules a fake delay to keep the timer system going. I claim this is preferable to disallowing long delays.in 7026' id 'cdf1cb26-9695-4549-ae79-becf61d3dc25' date '29 April 2006' time '10:16:50 pm' author 'sd' ancestors ((name 'Kernel-md.116' message '- rename BlockContext>>endpc ->endPC- 0003415: Changeset is not updated when renaming a class (Noury)- 0003492: Complete the job of changing the way that arrays are printed (Andrew Black)' id 'a95ad0d2-d475-11da-92ca-000d933a223c' date '25 April 2006' time '6:07:57 pm' author 'md' ancestors ((name 'Kernel-ab.115' message 'asUTC	^ offset isZero		ifTrue: [self]		ifFalse: [self utcOffset: 0]			from avi' id '93460995-6d3e-448a-8690-3a76cf7756eb' date '22 April 2006' time '12:31:35 pm' author 'ab' ancestors ((name 'Kernel-md.114' message 'SmallLand' id 'bff2c8be-d145-11da-a5e8-000d933a223c' date '21 April 2006' time '4:47:26 pm' author 'md' ancestors ((name 'Kernel-sd.113' message 'Fix of Roel to avoid to get twice the same event when there is a reclassification.' id '79a6e886-ce77-4aff-9ac9-e7c68a1c50eb' date '9 April 2006' time '9:19:34 pm' author 'sd' ancestors ((name 'Kernel-md.112' message 'valueWithExit' id '669b2d7c-be8c-11da-a502-000d933a223c' date '28 March 2006' time '8:55:18 pm' author 'md' ancestors ((name 'Kernel-md.111' message 'Merge SqueakLand III' id 'f11c17fb-b74a-11da-8082-000d933a223c' date '19 March 2006' time '2:19:06 pm' author 'md' ancestors ((name 'Kernel-md.110' message 'merge with al' id '585b94ec-b746-11da-8082-000d933a223c' date '19 March 2006' time '1:46:11 pm' author 'md' ancestors ((name 'Kernel-md.107' message 'SqueakLand merge' id 'e423f593-b5d6-11da-b66a-000d933a223c' date '17 March 2006' time '5:55:51 pm' author 'md' ancestors ((name 'Kernel-md.106' message 'merge with SqueakLand' id '67949e61-b44f-11da-9a8d-000d933a223c' date '15 March 2006' time '7:13:29 pm' author 'md' ancestors ((name 'Kernel-md.105' message '- faster #binding' id '0bb7e5d3-af80-11da-a7a4-000d933a223c' date '9 March 2006' time '4:19:04 pm' author 'md' ancestors ((name 'Kernel-md.104' message '0003245: 7005: ProcessBrowser DNU' id 'e85e183f-ac82-11da-80b4-000d933a223c' date '5 March 2006' time '9:02 pm' author 'md' ancestors ((name 'Kernel-md.103' message '- postCopy for MethodProperties- Refactor/deprecate old environment methods in     SystemDictionary- 0001613: [ENH] truncatedChanges-ls-Change Set: dupAllCtrlAltKeysPref-dew- changes from NewCompiler package' id 'ea4f628e-aac8-11da-886d-000d933a223c' date '3 March 2006' time '4:18:06 pm' author 'md' ancestors ((name 'Kernel-md.102' message '- changed BlockContext printOn to work with decompilers that   can''t decompile blocks- num literals check in CompiledMethod (from MethodNode)' id '6093de50-a849-11da-a8bb-000d933a223c' date '28 February 2006' time '12:00:06 pm' author 'md' ancestors ((name 'Kernel-md.101' message '0001596: [BUG][FIX] lurking signals in EventSensor' id 'e4497472-f6a5-4a27-b508-2113322d3003' date '24 February 2006' time '11:13:54 pm' author 'md' ancestors ((name 'Kernel-md.100' message '- BlockContext.st from Connectors- Object.st from Connectors- MessageSend.st from Connectors- fix BlockContext>>#decompile to not reference Decompiler- add CompiledMethod#decompileWithTemps (logic was in 	Tools... sigh!)- ContextPart>>sourceCode simplified.- refactored for #autoAccessors removal' id '3d597a10-15a7-4cd9-8a55-c9280511296b' date '22 February 2006' time '10:25:42 pm' author 'md' ancestors ((name 'Kernel-md.99' message '- add some closure runtim methods- cm>>#methodNode does not prettyprint anymore- add Class class>>#rootsOfTheWorld (from RB, VW compatible)- decompileString for Blocks- cleanups' id 'bf9d4698-fb42-445b-8b6a-9cc8c7162165' date '21 February 2006' time '9:30:12 am' author 'md' ancestors ((name 'Kernel-md.98' message 'add test for new cm format, test in #selector and #methodClass' id 'ef56dd0c-99e1-4a27-9a5e-c69753d270fd' date '19 February 2006' time '11:32:49 am' author 'md' ancestors ((name 'Kernel-md.97' message 'empty log message' id '2438b916-0bd3-4d36-98db-2bf0b3a6946d' date '19 February 2006' time '8:35:20 am' author 'md' ancestors ((name 'Kernel-md.96' message '- remove CompiledMethod>>#blockNode, blockNodeIn,   - remove Message>>catcher- remove MethodContext>>methodNode (use inherited version from MethodContext)' id '4ff1ff42-b75d-46c2-893b-b245a8ca15ce' date '19 February 2006' time '12:16:36 am' author 'md' ancestors ((name 'Kernel-md.95' message '- Fast #who part 2: Selector from compiledMethod.- Forward from ContextPart to method (selector, decompile.)  no need to search anymoredeprecate behavior>>#selectorAtMethod:setClass: 	deprecate ContextPart>>#mclass (use methodClass, like in CompiledMethod)	deprecate ContextPart>>#methodSelector (use #selector, like in CompiledMethod)	deprecate MethodContext>>#answer: (comment indicates "will soon be removed' id '32ec81d2-2976-46c8-a597-e55e33aa8919' date '18 February 2006' time '1:42:05 pm' author 'md' ancestors ((name 'Kernel-md.94' message '- add Behavior hash- simplify CompiledMethod: #defaultSelector, #equivalentTo:, #methodNode- add CompiledMethod>>#selector- add iVarselector to MethodProperties, accessors' id '57880f56-2337-465e-b5cb-1e4e81da26e6' date '16 February 2006' time '7:24:40 pm' author 'md' ancestors ((name 'Kernel-md.93' message '- deprecated #who- CompiledMethod>>#methodNode now sets Class and Selector  for non-installed methods to Object/xxxUnknown- refactored ContextPart to not call #who' id 'a9374e42-8f6a-4227-b614-22d31f5b620b' date '16 February 2006' time '4:49:29 pm' author 'md' ancestors ((name 'Kernel-md.92' message '- remove MethodPropertie>>#propDict (leftover)- Pragma>>#selector fixed to no call #who- First cut at "fast #who"     - CompiledMethod>>#methodClass now gets class from       classbinging in the last literal     - cm>>#selector searches this class     - searchForClass/seachForSelector search like old #who     - who fixed to use methodClass/selector. does return       #(unkown unkown) when not installed. deprecated.     - isInstalled: tests if method is installed.     - methodRef fixed to not use #who     - #decompileTree deprecated     - #decompile now sets class / selector     - #decompileString changed to call #decompile     - Behavior>>#binding returns the association form       systemdict     - Behavior>>#basicAddSelector:withMethod sets class       in method on installation.' id '938634c4-fd4e-49ca-8921-4be99275f270' date '16 February 2006' time '2:18:22 pm' author 'md' ancestors ((name 'Kernel-md.91' message '- Changes for Properties/Pragmas- Object class>>services backstop' id '378968df-8458-4f95-81c6-7264aa62290d' date '15 February 2006' time '5:35:28 pm' author 'md' ancestors ((name 'Kernel-md.90' message 'fixes from  0001734: [ENH] remove deprecated Chronology methods in 3.9 [cd][su][sm]' id '12a5e718-c29f-4c6a-a380-488297bd2f2c' date '14 February 2006' time '8:37:58 pm' author 'md' ancestors ((name 'Kernel-md.89' message '- add CompiledMethod>>#equivalentTo:- fix for 0002513: arcTan: returns angle in strange intervale- fix for 0002118: Integer class >> #primesUpTo: - move deprecated to 3.9Deprecated' id '8a801b0d-1987-4593-ab75-48b066ebf308' date '13 February 2006' time '6:15:52 pm' author 'md' ancestors ((name 'Kernel-md.88' message 'comment change' id 'aedbd00d-d367-49eb-85f9-29fa397dee25' date '12 February 2006' time '2:42:28 pm' author 'md' ancestors ((name 'Kernel-md.87' message 'delete Undefined>>languagePrefs, broken code' id 'f2e0f76d-1625-4af6-99e1-b8d280f5a6c8' date '12 February 2006' time '1:26:58 pm' author 'md' ancestors ((name 'Kernel-md.86' message '0002154: Light-weight mutex implementation' id '01512f50-f49f-464e-855f-ba80bdd0feaa' date '11 February 2006' time '7:19:50 pm' author 'md' ancestors ((name 'Kernel-stephaneducasse.85' message 'TestPrintOnBaseShowRadix' id '212dd511-8361-48a2-b647-88ecdda72841' date '9 February 2006' time '4:07:04 pm' author 'stephaneducasse' ancestors ((name 'Kernel-sd.84' message '0002135: Cmd-. don''t work with various Mac Os X keyboard layout' id '5afd2fd7-0b77-4ef8-a02c-5e81e4c1b40c' date '25 January 2006' time '8:44:33 pm' author 'sd' ancestors ((name 'Kernel-md.83' message 'added support for haltOnce' id 'c1ab5f8a-7be1-4ed5-a648-c04be9ee5786' date '21 January 2006' time '10:59:06 am' author 'md' ancestors ((name 'Kernel-md.82' message 'Change Set:		fileinUndeclared-bf	Date:			12 January 2006	Author:			Bert Freudenberg	When filing in, do not ask whether it''s okay to moveclass var to Undeclared. Just move it.' id '3985a930-6c55-4726-a9c6-35bdfe543770' date '20 January 2006' time '11:04:46 pm' author 'md' ancestors ((name 'Kernel-md.81' message 'Changes from the ClosureCompiler package' id '8ea90bd3-239b-4a1c-a66a-ee3ec301f2aa' date '20 January 2006' time '10:49:47 pm' author 'md' ancestors ((name 'Kernel-md.80' message '0002353: Code browsers'' "inst vars" selects wrong item' id '084d4c6e-0f4f-4983-af67-8e2862ab4a28' date '19 January 2006' time '8:36:47 pm' author 'md' ancestors ((name 'Kernel-md.79' message 'ummary0002514: [FIX] condenseSources (was: Re: [Q] Removing changes file content.)DescriptionYou should have at most two versions, one in the sources file and one in the changes file. If you have more, then condenseChanges did not work properly.One particular thing that breaks when running condenseChanges is overrides, which relies on the method history in the changes file.Attached is a fix for that, it preserves method histories for methods in a "*-override" category. It''s pretty dumb, retaining each and every version of that method. An improvement would be to only keep the necessary ones, that is, those most recent after the categorization changed. But it works ;-)- Bert -' id 'f1b73a49-0f0a-40ba-8ba7-18e2eee445da' date '19 January 2006' time '10:42:26 am' author 'md' ancestors ((name 'Kernel-md.78' message 'Change Set:		selectorsWithArgs-md	Date:			2 January 2006	Author:			Marcus Denker	Make Behavior>>#selectorsWithArgs: use symbol>>#numArgs.	Much simpler: one line. And it fixes a bug.	----	Change Set:		removeUndefTest	Date:			14 January 2006	Author:			Marcus Denker	removes UndefinedObject>>#test, which was a test method for alternate syntax' id '44777df0-17cb-4e68-857b-116f91c4a587' date '19 January 2006' time '12:02:49 am' author 'md' ancestors ((name 'Kernel-md.77' message '-> Behavior>>scopeHas:ifTrue has been move to deprecated-> Object>>inspect changed to return self (which the Inspector   does, but that''s better to do early)' id 'ddc7af58-f071-4f7e-88df-2e47661f5117' date '18 January 2006' time '7:24:23 pm' author 'md' ancestors ((name 'Kernel-sd.76' message 'made dirty by the annotation cs we put in the stream6713' id '2eaf1dd7-b6a8-46d5-b936-aac3d41c0889' date '15 January 2006' time '7:19:51 pm' author 'sd' ancestors ((name 'Kernel-stephaneducasse.75' message '001 Compiler AnnotChanges without recompileAll.' id '4b355302-01fc-416f-b0a9-c6284d6a7130' date '15 January 2006' time '6:11:47 pm' author 'stephaneducasse' ancestors ((name 'Kernel-stephaneducasse.74' message 'preparation for method annotation csthat will not be able to be loaded by MC.' id '2de151d7-1597-45d4-965f-8f7698e42cc9' date '15 January 2006' time '6:05:01 pm' author 'stephaneducasse' ancestors ((name 'Kernel-stephaneducasse.73' message 'TIM VMMaker related fixes:		6669VMM38-64bit-imageUpdates.1.cs		6669VMM38-gc-instrument-image.1.cs		LocalePluginAddins.1.cs		RemoveLeftoverVMMbits-38b4.1.cs		WideStringPrimKill.1.cs' id 'd99a1a6c-b9f6-4b4c-8371-f989bb669f16' date '14 January 2006' time '12:41:55 pm' author 'stephaneducasse' ancestors ((name 'Kernel-al.72' message '- hide uses-clause in the class definition if the trait composition is empty- add menu item to the context menu on classes in the browser to add traits- changes corresponding to allClasses, allTraits interface' id 'cadc4d6a-434a-4777-9bbc-b3a04b2fd24d' date '13 January 2006' time '5:46:45 pm' author 'al' ancestors ((name 'Kernel-sd.71' message 'http://bugs.impara.de/view.php?id=2229' id 'faf0c4ce-bd9d-41b5-af85-e88a1d421d10' date '19 December 2005' time '4:59:06 pm' author 'sd' ancestors ((name 'Kernel-al.70' message '- restored class comment of Behavior that got lost' id '8074e742-b45b-4e50-8c47-58ed4c8c532e' date '8 December 2005' time '8:45:13 pm' author 'al' ancestors ((name 'Kernel-al.69' message '- moved method from Behavior into TPureBehavior' id '64bed1be-d26a-4491-9c58-29fe3e3b6e1b' date '7 December 2005' time '9:54:01 pm' author 'al' ancestors ((name 'Kernel-al.66' message '- moved modifications and additions in CompiledMethod from Traits to Kernel package' id 'efe11b97-9602-4489-b603-2f679acc6acf' date '2 December 2005' time '9:36:19 pm' author 'al' ancestors ((name 'Kernel-al.64' message '- moved a method to kernel package for bootstrapping reasons' id '05d7d8ca-5b33-45f2-83ee-14a0ac33142e' date '2 December 2005' time '4:31:28 pm' author 'al' ancestors ((name 'Kernel-al.63' message 'This package has the last 3.9a Kernel package as ancestor, and contains all changes of the sub-package Kernel-Classes of the Traits development branch (Kernel-al.62).' id 'ecd5cd8d-30fb-47b2-bead-f3c89957b3e3' date '2 December 2005' time '3:52:01 pm' author 'al' ancestors ((name 'Kernel-stephaneducasse.50' message 'include the changes that where giving a problem when loading PlusTools. So the package may not load alone.' id '3da343ab-836b-4817-a5ea-ea99a0c58b48' date '5 November 2005' time '3:24:15 pm' author 'stephaneducasse' ancestors ((name 'Kernel-CdG.49' message 'merged sd-44 in preparation for move to 39a' id '2c006814-9e82-6645-afd5-6bc256998ea3' date '31 October 2005' time '11:34:17 pm' author 'CdG' ancestors ((name 'Kernel-CdG.48' message 'backed out some problematic plustools changes' id 'f170e151-aad1-e64d-97ea-10a8a882fcff' date '31 October 2005' time '9:53:55 pm' author 'CdG' ancestors ((name 'Kernel-CdG.45' message 'Integrated PlusTools.zip (Mantis #1915)' id '7230b2c7-1c87-0846-abea-e1367dd30bfe' date '17 October 2005' time '11:06:13 pm' author 'CdG' ancestors ((name 'Kernel-CdG.44' message 'Integrated ToolBuilder-UI-Refactor-FillInTheBlank-1.cs from Mantis #1828' id '0fab7f13-620b-ab49-8964-1c741fff7f39' date '17 October 2005' time '9:06:56 pm' author 'CdG' ancestors ((name 'Kernel-CdG.43' message 'Integrated ToolBuilder-UI-Refactor-PopUpMenu-1.cs from Mantis #1828 ' id '23a832ea-240c-c84c-9431-be8ffd950709' date '17 October 2005' time '8:04:13 pm' author 'CdG' ancestors ((name 'Kernel-md.42' message '- Object isRectangle- MethodDict scanFor: small refactoring' id 'e2cfeda8-06ac-4333-b88c-58c862114a7b' date '7 October 2005' time '4:09:26 pm' author 'md' ancestors ((name 'Kernel-md.41' message 'Change Set:		Complex-ln-bug-1815-v1Date:			26 September 2005Author:			Alexander@Lazarevic.deThis was reported on Mantis by snelgar:The definition of Complex #ln produces the wrong real part, using arg where it should use abs. It should sayln    ""Answer the natural log of the receiver.""    ^ self abs ln + (1 i * self arg)but the abs is arg.To convince yourself of the correct definition, try, in the distributed version:(Complex real:2.71828 imaginary:0.0) ln. -> -Infinity + 0.0 iBUT 2.71828 ln. -> 0.999999327347282ln of a real number and of a complex number that happens to be real better be the same thing...after the correction proposed above we get the proper(Complex real:2.71828 imaginary:0.0) ln. -> 0.999999327347282 + 0.0 i' id '16f3676f-8761-4935-aee5-11e8c315e01a' date '7 October 2005' time '3:51:41 pm' author 'md' ancestors ((name 'Kernel-stephaneducasse.40' message '0000854: Long Delay schedules a deferred image crash' id '030a4781-cc1c-4486-954c-4672b3dd57cf' date '2 October 2005' time '5:42:24 pm' author 'stephaneducasse' ancestors ((name 'Kernel-stephaneducasse.39' message 'update class comment' id 'ed60e98c-8876-49e2-a5a1-3179fde5f61f' date '1 October 2005' time '9:09:20 pm' author 'stephaneducasse' ancestors ((name 'Kernel-stephaneducasse.38' message 'Fix a problem with Number>>printShowingDecimalPlaces:, where it would get confused by scientific notation (for example, 100000000 printShowingDecimalPlaces: 1 returned ''1.0'').  This is a new implementation that uses Integer>>asString instead of Float>>asString to avoid that problem.' id '5ec1635d-e36f-4ab7-9247-664eacee41a7' date '17 September 2005' time '10:18:16 pm' author 'stephaneducasse' ancestors ((name 'Kernel-stephaneducasse.37' message '0001577 added exploreWithLabel:' id 'be52ca06-313c-4408-abdb-c7f6858d1acd' date '17 September 2005' time '9:55:13 pm' author 'stephaneducasse' ancestors ((name 'Kernel-stephaneducasse.36' message 'merged Kernel-md35 and morphicsplitters loaded on Kernel-md.33so to check.' id '95b04e6e-3026-4bf1-b09e-7b5063edaeae' date '10 September 2005' time '3:32:48 pm' author 'stephaneducasse' ancestors ((name 'Kernel-md.35' message 'remove some more deprecated methods' id 'b85a0eed-f373-458c-990a-6aaf7cccb1c3' date '6 September 2005' time '11:12:01 pm' author 'md' ancestors ((name 'Kernel-md.34' message 'removed TempNameCache from CompiledMethod' id 'bf23c955-7df5-48e9-879b-b06dd98f4c46' date '6 September 2005' time '8:27:15 pm' author 'md' ancestors ((name 'Kernel-md.33' message 'remove deprected methods' id 'cb9e90c9-43e4-4eab-a8a4-95cc138ad4d8' date '6 September 2005' time '3:24:39 pm' author 'md' ancestors ((name 'Kernel-md.32' message 'Change Set:		CategorizerFixDate:			13 May 2005Author:			Alexandre BergelWhen recategoring a class, the SystemCategorizer removed the category ''as yet unclassified'', which does not make any sense.This fix just check if the category ''as yet unclassified'' exists before to remove it.' id '12f4161d-13a5-4bab-b9bc-ad4a5afcb845' date '6 September 2005' time '1:14:05 pm' author 'md' ancestors ((name 'Kernel-md.31' message 'Change Set:		ClassRenameFix6#2004Date:			23 August 2004Author:			Karl Rambergmd: removed the test, it was already in the image under another name.Note: This changet now makes both tests of ClassRenameFix fail, this needs to be fixed (The tests or this code, don''t know)Subject:		[BUG][FIX] Class>>rename fix 6/2004 (needs approval)Author:		Chris MullerDate Posted: 29 June 2004Archive ID: 23079Comments:	In using the SystemChangeNotifier to detect class renames, I noticed that thelisteners are called in the middle of the rename, while the system is in aninconsistent state.The inconsistency is that the new name of the class is not set by thetime the handler methods run.  The Smalltalk global dictionary has beenupdated, so (Smalltalk at: #RenamedClass) name ~= #RenamedClass.  Thisis an inconsistent state of the Smalltalk dictionary.The handler methods should operate as a true post-op, this fix makes it so.Please ignore my first post about this, it was late and I accidently hit sendbefore I was done.Thanks,  Chris' id 'bd6d3372-a0bf-4fee-bd41-be581e3175fc' date '6 September 2005' time '9:11 am' author 'md' ancestors ((name 'Kernel-md.30' message 'Change Set:		RemoveUnusedTempNameCache-bvsDate:			6 January 2005Author:			Benjamin SchroederCompiledMethod keeps a cache of temporary names for a single CompiledMethod instance. The cache is set after compilation and during certain debugger operations. However, it is never read.Keeping the cache creates an extra reference to the most recently compiled method. This can be a problem in certain obscure situations, such as including the method in an image segment.This changeset removes the cache.' id '270a16e6-1ab5-47ba-b27e-da86d640146c' date '5 September 2005' time '4:15:09 pm' author 'md' ancestors ((name 'Kernel-sd.29' message 'improved Magnitude comment' id '97ec7fab-f031-412e-8150-0b1f7cbfcb5a' date '4 September 2005' time '10:15:17 am' author 'sd' ancestors ((name 'Kernel-sd.28' message 'Improve Magnitude comment' id '7ca071e0-314e-445e-a74d-0729c0d379a9' date '4 September 2005' time '10:13:07 am' author 'sd' ancestors ((name 'Kernel-md.27' message 'integrated method from ToolBuilder-Spec' id 'e46b9301-2543-4c12-acc0-e3dcc5be1343' date '29 August 2005' time '5:03:09 pm' author 'md' ancestors ((name 'Kernel-md.26' message 'use #isDoIt' id '8e2b77ee-ad1c-47cd-b381-aa542289ce65' date '27 August 2005' time '9:17:51 pm' author 'md' ancestors ((name 'Kernel-md.25' message 'Change Set:		DecompileTreeDate:			30 January 2005Author:			Dean Tribble, Alexandre BergelAllow a single method to be properly decompiled.' id '24024282-6eaa-41bc-bc64-2bbbeaf08a45' date '27 August 2005' time '12:49:10 pm' author 'md' ancestors ((name 'Kernel-md.24' message 'Change Set:		JonClassCommentBlankDate:			9 January 2005Author:			Jon HylandsThis is a simple fix to provide a more context-sensitive class comment template.' id '33a58350-4a60-45eb-888a-67d79ce93145' date '24 August 2005' time '10:53:06 am' author 'md' ancestors ((name 'Kernel-md.23' message 'Change Set:		fasterDayOfYear-brpDate:			29 January 2005Author:			Brent PinkneyThis enhancement was contributed by Dan Ingalls.It replaces the implementation of DateAndTime>>dayOfYear to speed it up by a factor of 80.All 394 test cases in the Kernel-Chronology Tests category succeed in a 3.9a-6531 image.' id '269494e5-1784-4048-92e1-9b5bf8fa2292' date '20 August 2005' time '7:10:41 pm' author 'md' ancestors ((name 'Kernel-md.22' message 'Removed RuleDate, RuleIndexDate and RuleSelectionCodeDate.(ANSI, yes, but only for backward compatibility... Chronologyprovides better meachnisms for those)RuleDate will be availble over SqueakMap soon.' id 'df308359-08d5-4201-afb3-bbc319085800' date '20 August 2005' time '6:22:38 pm' author 'md' ancestors ((name 'Kernel-md.21' message 'remove support for #SQ00 alternate Syntax' id '894059a5-09a9-44c9-bb29-7c65f46582f3' date '14 August 2005' time '6:04:47 pm' author 'md' ancestors ((name 'Kernel-md.20' message 'Change Set:		SemaphoreWaitAndWaitTimeoutFix-jfDate:			2 December 2003Author:			Julian FitzellWhen using #wait and #waitTimeoutMSecs: together there is what appears to me to be a bug (both based on what the comment in #waitTimeoutMSecs: says and what seems intuitive.#waitTimeoutMSecs: uses a Delay to signal the semaphore.  So, if there is already a process waiting on the semaphore, that process is resumed rather than the one that specified the timeout.I''m note sure if there''s a better solution than the one here.  I enclosed a test as a separate attachment so other can implement a better one if they see fit.  The fix here creates an awful lot of short lived processes - I don''t see any obvious performance slow-down but I''m not really sure how best to benchmark it.' id '538cb112-a494-4b0d-b715-32d5f1367f57' date '13 August 2005' time '12:03 am' author 'md' ancestors ((name 'Kernel-md.19' message 'add isDictionary' id '4aec6e21-f581-4eff-b7d5-ef3cbe1c57d5' date '11 August 2005' time '4:46:12 pm' author 'md' ancestors ((name 'Kernel-md.18' message '-> comment for CompiledMethod>>methodClass-> add BlockContext>>endpc: the end of the block bytecodes' id '38f4bba6-fbae-4bb9-872f-d11c8493992d' date '9 August 2005' time '8:06:47 pm' author 'md' ancestors ((name 'Kernel-md.17' message 'Change Set:		6603CleaningUtilitiesDate:			30 March 2005Author:			stephane ducasseMove some utilities close to the class they use, i.e. Scanner' id '1cbc68de-04d9-44aa-b013-e1134d13031e' date '6 August 2005' time '12:02:25 pm' author 'md' ancestors ((name 'Kernel-md.16' message 'Change Set:		HexFixesDate:			16 March 2005Author:			Boris Gaertnerwith changes set #6217 the method Integer>>hex was deprecated. This change set is an attempt to replace the remaining senders of hex with either storeStringHex or printStringHex"Change Set:		ObjectExplorerIntegerBases-v2-lazaDate:			18 March 2005Author:			Alexander@Lazarevic.deThis is a hack to make the ObjectExplorer display integers in hexadecimal, octal and binary form too. This also the changes the ObjectExplorer to open with expanded roots' id '09621b1d-5e3f-425a-8ee3-a8e1985918e6' date '4 August 2005' time '11:45:39 pm' author 'md' ancestors ((name 'Kernel-md.15' message '- adds Behavior>>formatterClass and Behavior>>prettyPrinterclass- query methods for Behavior (which*)- change ClassDescription>>reformatMethodAt: to use prettyPringerClass- added to CM: allLiterals, getSource, literalsDo:, messagesDo:, methodClass, refersToLiteral, sendsSelector:- changes CM>>methodNodeFormatted... to use prettyPrinterClass- Added to Object: error, needwork' id 'b82226a9-de52-481c-a4d4-2d5c375132e4' date '3 August 2005' time '12:20:21 am' author 'md' ancestors ((name 'Kernel-md.14' message '- delete RenamedClassSourceFileRead (which has no comment   and was not referenced anywhere)Change Set:		commentsInDate:			28 March 2005Author:			Markus GaelliIntroduces the ability to read all comments of a method and not only the first one.Not smart enough to bypass quotes in string constants, but does map doubled quote into a single quote.' id 'b469c941-9361-4796-9767-b15759fbd779' date '1 August 2005' time '4:03:52 pm' author 'md' ancestors ((name 'Kernel-sd.13' message 'introduce self evaluation for printing' id 'bced0436-01fe-11da-9134-001451041ea6' date '31 July 2005' time '10:07:36 pm' author 'sd' ancestors ((name 'Kernel-md.12' message 'fix for 0001423: [BUG] BlockContext>>valueWithArguments issues misleading error when sent non-Arrays0001033: Inconsistency in naming of the formal parameters in certain methods of the True and False classes.add Object>>isArray move newTileMorphRepresentative into Morphic package' id '2eee9073-65c7-48d8-908c-8f9bc72194cf' date '31 July 2005' time '2:23:34 pm' author 'md' ancestors ((name 'Kernel-md.11' message 'Change Set:		IntegerReadFromBaseFix-369-v2-lazaDate:			14 November 2004Author:			Alexander@Lazarevic.deMantis-Bug:		369This changes the method Integer readFrom:base: to do what the method comment says. That is to return 0 if there are no digits in the string (instead of raising an error).v2: Corrected method comment.' id 'ef8189cb-76d2-40b4-869c-9a34470af085' date '30 July 2005' time '11:44:41 am' author 'md' ancestors ((name 'Kernel-md.10' message 'Change Set:		deprecate-isKindOThenDoDate:			27 November 2004Author:			Marcus DenkerDeprecates Object>>#isKindOf:thenDo:, fixes the sender.a bit of cleanup of the Object categories' id '93c94806-cf96-46f6-bb68-a5c16f73c22d' date '29 July 2005' time '8:06:23 pm' author 'md' ancestors ((name 'Kernel-md.9' message 'Change Set:		KCP-0112-FixCanUnderstandDate:			12 December 2003Author:			Nathanael SchaerliFixes canUnderstand so that it deals with abstract methods (i.e., subclassResponsibility and shouldNotImplement) in the right way' id '7e66a34f-72ea-4682-8d4c-73b2e8b795f5' date '29 July 2005' time '4:03:47 pm' author 'md' ancestors ((name 'Kernel-md.8' message 'Change Set:		IntegerByteEncodeFix-850-v1-lazaDate:			30 January 2005Author:			Alexander@Lazarevic.deMantis-Bug:		850This fixes a problem I introduced in update 6217 with ByteEncoder in general and PostscriptEncoder in particular.' id '5e24dabc-871e-4a93-a4c5-30d64ccd4ca6' date '28 July 2005' time '7:54:11 am' author 'md' ancestors ((name 'Kernel-md.7' message '0001532: Remove some VMMaker methods to packageDescriptionWhen I packaged up the VMMaker stuff I left out a few methods and left them in the image. We ought to drop them fro mthe image now that I finally caught up with them.Ought to go into 3.8 update stream as well as 3.9, ASAP.' id '1d98538e-e48b-4f2d-96c6-b81468e803fb' date '23 July 2005' time '6:22:48 am' author 'md' ancestors ((name 'Kernel-md.6' message '-> make Object>>-> to call Association basicNew, not new   to save call to initialize.added:Change Set:		MethodReferenceEnhDate:			6 February 2005Author:			Alexandre BergelAdd a utility method on the classside of MethodReference. ' id 'fd11509e-e78c-4062-849d-903a738596a4' date '22 July 2005' time '4:07:56 pm' author 'md' ancestors ((name 'Kernel-md.5' message '-----an additional translated string from esther-----a small refactoring for isPrime------Change Set:		EasterDateDate:			16 March 2005Author:			Boris Gaertnerroutines to compute the easter dateExample of use:Date easterDateFor: 2004  Date orthodoxEasterDateFor: 2004 ' id '47f37064-f2f9-11d9-ba4b-000d933a223c' date '12 July 2005' time '7:20:45 pm' author 'md' ancestors ((name 'Kernel-md.4' message 'Change Set:		TimespanEqualityFixDate:			18 April 2005Author:			Lukas RenggliComparing a Timespan instance or one of its subclasses with an object from a different hierarchy raises an error. This changeset adds a check for the class in the beginning, all equality methods should have this anyway. After loading this changeset all tests of the chronology framework pass.' id 'd4ee1b12-f2b6-11d9-853d-000d933a223c' date '12 July 2005' time '11:25:05 am' author 'md' ancestors ((name 'Kernel-md.3' message 'Change Set:		CategorizerFixDate:			22 June 2005Author:			Lukas RenggliFixes a very annoying problem where it is impossible to recategorize the system category list due to the default use of a limited print stream. All Squeak tools display an incompete printout of the categories what makes it impossible to edit and accept.To reproduce this bug create a few more class categories, open the standard browser and hit reorganize in the system category list. This changeset fixes the problem.' id 'fcf3a2fd-f2b5-11d9-853d-000d933a223c' date '12 July 2005' time '11:19:03 am' author 'md' ancestors ((name 'Kernel-md.2' message '0001287: [ENH] Integer primality testingDescriptionSPINIELLI Enrico <enrico.spinielli@eurocontrol.int>:"please find attached a changeset which adds primalitytesting to Integer.(I wanted to solve Google puzzleÃÂÃÂ ÃÂÃÂ ÃÂÃÂ ÃÂÃÂ ÃÂÃÂ ÃÂÃÂ ÃÂÃÂ ÃÂÃÂ {first 10-digit prime found in consecutive digits of e}.comso I needed a test for primality)I have implemented Algorithm P, probabilistic primality test,from Knuth, Donald E. ''The Art of Computer Programming'', Vol 2,Third Edition, section 4.5.4, page 395"md/ab: we added a test for <= 1 that raises an error for now.(to be changed later... we''l ask him)' id '02f6572e-f2b3-11d9-9516-000d933a223c' date '12 July 2005' time '10:57:44 am' author 'md' ancestors ((name 'Kernel-dew.1' message 'Initial version from 3.8 partitioning.' id '8c652f29-ebd2-11d9-869f-000d93572e0e' date '3 July 2005' time '10:55:51 am' author 'dew' ancestors () stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())(name 'Kernel-avi.28' message 'Fix a problem with Number>>printShowingDecimalPlaces:, where it would get confused by scientific notation (for example, 100000000 printShowingDecimalPlaces: 1 returned ''1.0'').  This is a new implementation that uses Integer>>asString instead of Float>>asString to avoid that problem.' id '865f4f04-1f5d-11da-a506-000a95db7844' date '6 September 2005' time '10:09:10 pm' author 'avi' ancestors ((id 'e46b9301-2543-4c12-acc0-e3dcc5be1343')) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())(name 'Kernel-stephaneducasse.43' message 'tooDangerous for trait introduction' id 'a64b031a-d4ee-4210-aa86-89744ecc48aa' date '19 October 2005' time '9:26:40 am' author 'stephaneducasse' ancestors ((id 'e2cfeda8-06ac-4333-b88c-58c862114a7b')) stepChildren ())) stepChildren ())(name 'Kernel-stephaneducasse.44' message 'fix the fix of daniel for the class builder (inbox dvf-35)The problem with those fixes is that the error was not propagated and the classBuilderFormatTestBrokeName: Kernel-dvf.35Author: dvfTime: 22 September 2005, 3:24:37 pmUUID: 39d61acc-9a2d-4785-b006-18bb10fee763Ancestors: Kernel-md.34Fixes for ClassBuilder, preventing the creation of bogus classes when a class redefinition aborts.Fixes for ClassBuilder, preventing the creation of bogus classes when a class redefinition aborts.Name: Kernel-dvf.23Author: dvfTime: 25 August 2005, 5:40:52 pmUUID: 77ba3275-0545-46c3-a13d-26a3b4578e94Ancestors: Kernel-dvf.21Just Adrian''s fix, and Andrew and my fix to that. Adrian makes the old class copy be added as a subclass of the old classes super class.Andrew and I wrap the removal of this link in an ensure section, since CB uses exceptions to signal some abnormal situations, and we want to clean up even then.' id '6a34744b-e563-4305-af0f-48b40cc23800' date '28 October 2005' time '3:35:47 pm' author 'stephaneducasse' ancestors ((id 'a64b031a-d4ee-4210-aa86-89744ecc48aa')) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())(name 'Kernel-al.71' message '- made traits understand withAllSuperclasses for compatibility reason (used in requires code)' id 'ef0f6260-f906-480a-8b92-a4a4e0f477a2' date '31 December 2005' time '1:51:59 pm' author 'al' ancestors ((id '8074e742-b45b-4e50-8c47-58ed4c8c532e')) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())(name 'Kernel-CdG.52' message 'combination of changes w.r.t. version 50 that were present in 6705 and patch for Mantis 2358/2353' id '5e0fb1b5-bdf2-bf46-bde7-839393650421' date '13 December 2005' time '10:56:41 pm' author 'CdG' ancestors ((id '3da343ab-836b-4817-a5ea-ea99a0c58b48')) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())(name 'Kernel-al.89' message '- fixed marker methods that were broken because of new default literals in CompiledMethod' id '3b77bd99-96c8-4aa3-8ff6-cc5262397aa3' date '13 February 2006' time '10:36:33 pm' author 'al' ancestors ((id 'aedbd00d-d367-49eb-85f9-29fa397dee25')) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())(name 'Kernel-al.109' message '- Refactoring of Class|Trait>>category lookup. Improves category lookup by a factor of 10 and for example loading of a Monticello package by a factor of 2.' id '26ae46f5-1170-4acc-b17b-64f5e97f3759' date '18 March 2006' time '4:16:18 pm' author 'al' ancestors ((name 'Kernel-al.108' message '- Refactoring of Class|Trait>>category lookup. Improves category lookup by a factor of 10 and for example loading of a Monticello package by a factor of 2.' id '07b77571-7e77-46c5-8339-71b2de12a0f4' date '18 March 2006' time '2:13:09 pm' author 'al' ancestors ((name 'Kernel-al.107' message 'Improve performance of Class|Trait>>category by saving the current category name in an ivar. Improves category lookup by a factor of 10 and loading of a Monticello package by a factor of 2.' id 'e6d2bb99-eefe-4e15-b1f0-057d904807d4' date '18 March 2006' time '1:54:35 pm' author 'al' ancestors ((id '67949e61-b44f-11da-9a8d-000d933a223c')) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())(name 'Kernel-al.115' message '- recategorizing methods from *Traits extensions to local packages' id '740980fa-1883-4e40-b1e0-b2c5637f705d' date '27 March 2006' time '12:34:47 pm' author 'al' ancestors ((name 'Kernel-al.114' message '- refactor accessing trait compositions to avoid unnecessary lazy initialization' id 'e3852315-e6d9-4c86-99a2-dee4591fa93a' date '26 March 2006' time '10:16:43 pm' author 'al' ancestors ((name 'Kernel-al.113' message '- shifting ivars traitComposition and localSelectors (because of hardcoding of an ivar in Class in the VM) by moving them from Behavior to Class and Metaclass. Needs to run the changeset first.' id '3ff9186a-2deb-443e-a821-c6fea0ba1b6d' date '26 March 2006' time '7:22:43 pm' author 'al' ancestors ((id 'f11c17fb-b74a-11da-8082-000d933a223c')) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())(name 'Kernel-al.127' message '- allow for instantiating Behavior for creating anonymous classes' id '39bb43a6-1980-4041-8a56-f52c2b1b1e38' date '12 June 2006' time '10:49:23 am' author 'al' ancestors ((id 'b8cd5ed6-3890-4642-8083-08af689a2cc0')) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())(name 'Kernel-al.130' message '- remove two methods in Behavior and ClassDescription which were identical to methods defined by one of their traits.' id '4caedfa1-dbc2-4568-82f5-7598064d0f47' date '7 July 2006' time '12:59:51 pm' author 'al' ancestors ((id 'fd4d1494-0b67-4ae7-8014-a61e74bd8544')) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())(name 'Kernel-ar.190' message 'Semaphore>>wait accidentally went into Scripting-Override. Put it back into Kernel.' id '70aea0d9-628f-0f4d-bdb8-a04571aae974' date '17 July 2009' time '3:02:11 am' author 'ar' ancestors ((id 'a1ce9228-448a-45a2-b93f-4fd68b493650')) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())(name 'Kernel-djr.228' message 'CompiledMethod>>= seems to be broken. Attempt to fix it.MethodProperties>>analogousCodeTo: calls Pragma>>analogousCodeTo: which does not exist.Further assume when both properties are nil and both pragmas are empty, its equal.' id '64134c3b-4a17-49a5-8c8e-bf604e2b53bc' date '27 August 2009' time '12:29:15 pm' author 'djr' ancestors ((id 'f47aa5b7-b450-4ed2-8237-26841337ce18')) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())(name 'Kernel-ul.249' message '- added MethodDictionary >> #postCopy to replace #copy' id 'cd3a0f94-bfdc-8e4a-9053-cc86b3fd21e1' date '22 September 2009' time '5:05:35 am' author 'ul' ancestors ((id '89aa20e5-8219-d040-84bc-b10594ff152e')) stepChildren ())) stepChildren ())(name 'Kernel-ul.250' message '- removed unnecessary #copy from MethodDictionary' id '8562c0a7-ab42-7841-8efa-5f91c1123cb0' date '22 September 2009' time '5:08:10 am' author 'ul' ancestors ((id 'cd3a0f94-bfdc-8e4a-9053-cc86b3fd21e1')) stepChildren ())) stepChildren ())(name 'Kernel-ul.251' message '- replaced uses of #findElementOrNil: with #scanFor:- new #scanFor: implementation for MethodDictionary- Added BlockClosue >> #timeToRunWithoutGC which returns the number of milliseconds taken to the block without GC time.' id '0926180d-3ca0-0d41-9a06-d3a1d210b2bd' date '26 September 2009' time '3:01:51 am' author 'ul' ancestors ((id 'e21b2985-4367-5342-8fa3-87a10df7a4d1')(id '8562c0a7-ab42-7841-8efa-5f91c1123cb0')) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())(name 'Kernel-ul.265' message '- removed Float >> #shallowCopy. Primitive 148 seems to handle this correcly.' id '2bd42673-8acc-4d4f-8833-33440e7a80ab' date '9 October 2009' time '5:03:25 am' author 'ul' ancestors ((id '2ca1dd7b-3aaf-ef40-a65d-9470d31bf6b6')) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())(name 'Kernel-ul.270' message '- faster DateAndTime and Date creation with #year:month:day: and friends- minor formatting fixes' id 'bc5f947a-5957-084c-8e47-25dde79031f5' date '15 October 2009' time '1:33:02 am' author 'ul' ancestors ((id '4df9fa19-cf20-4723-9f11-aefc85fe3c51')) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())(name 'Kernel-ul.283' message 'Updated MethodDictionary- added MethodDictionary class >> #rehashAllInstances which rehashes all instances and changes the identities in one shot. Much faster than single #become: sends.- removed	- #add: - same implementation in superclass	- #at:putNoBecome:, #fullCheckNoBecome, #growNoBecome, #removeKeyNoBecome: - old methods with no senders (not even in 3.8 full), no comment stating their usefulness- modified several methods which have cleaner code and/or better performance assuming the following invariant: (self basicAt: index) isNil = (array at: index) isNil- added a line about the invariant to the class comment' id 'b127e801-1e1d-c143-8076-dba46a715d74' date '30 October 2009' time '4:48:05 am' author 'ul' ancestors ((id 'c2f3dbc8-83f0-47ad-95e4-195f18f09f30')) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())(name 'Kernel-ar.337' message 'CompiledMethodTrailer: Cleanup.' id '357ce99e-9fe1-f548-9540-060ed21b7479' date '22 December 2009' time '1:54:20 am' author 'ar' ancestors ((id '3bc94ec9-ab5f-544f-9525-4f11e357ec43')) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())(name 'Kernel-ar.381' message 'Merging Kernel-Igor.Stasenko.377:- Date class>>#readFrom:pattern:(cross-fork compatibility)' id '334b9670-3205-1442-846a-04eaacc81774' date '23 January 2010' time '2:18:00.652 pm' author 'ar' ancestors ((id '06edff56-56d3-4b50-baf5-34cdd716ca88')(name 'Kernel-Igor.Stasenko.377' message '- Date class>>#readFrom:pattern:(cross-fork compatibility)' id '828e9087-f180-4f56-b597-3bd3e325ff05' date '15 January 2010' time '2:30:42.198 pm' author 'Igor.Stasenko' ancestors ((id '0c8eee97-6a0c-4e7a-ad21-990fc5adbd35')) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())(name 'Kernel-mtf.388' message 'Made a note about the island and env instance variables in the Process class comment' id '97896701-ce97-4a36-a281-71ae723ce7e8' date '4 February 2010' time '5:23:44.746 pm' author 'mtf' ancestors ((name 'Kernel-mtf.387' message 'added two unused instance variables to Process. These are used by Cobalt; adding them here prevents loading cobalt from marking Kernel as dirtyisland: used by the Tweak scripting system. very foundational to the entire Croquet infrastructureenv: part of ProcessSpecific, which adds process-specific variables to the image. Used by Logging, which Cobalt uses' id 'f761f4c5-3213-4c7d-af60-9bb5d1d78dec' date '4 February 2010' time '2:19:19.931 pm' author 'mtf' ancestors ((id '72d71775-3ee2-bb41-b1db-2a527b7cc25c')) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())(name 'Kernel-nice.403' message '1) Introduce a Number class>>#readSqueakSyntaxFrom:  for Compiler/Scanner. This will later enable introduction of extended for #readFrom:2) Connect the hook for allowing leading + sign in Integer reading.' id 'b3db5f5a-bd5e-ce46-965a-f108c7608d2a' date '23 February 2010' time '2:39:40.246 pm' author 'nice' ancestors ((id '804739fb-f633-4d4d-9717-2b69cea9c2cb')) stepChildren ())) stepChildren ())(name 'Kernel-ul.406' message '- an implementation of the #cull: protocol' id 'c35323f5-b49d-6a45-8b3f-aab75d51c382' date '23 February 2010' time '4:32:14.835 pm' author 'ul' ancestors ((name 'Kernel-nice.405' message 'Oops, correct my very recent bug for + sign hook' id 'f3db6507-5501-8b41-a85a-1d9f34e759c3' date '23 February 2010' time '3:22:30.592 pm' author 'nice' ancestors ((name 'Kernel-nice.404' message 'Connect ExtendedNumberParser in Number class>>#readFrom: and some variantsCurrent behavior is:'''' asNumber -> Error (used to be 0)''1.'' asNumber -> 1.0 (used to be 1)''1.e2'' asNumber -> 100.0''1.e+2'' asNumber -> 100.0 (NEW)''+1'' asNumber -> 1 (NEW)OLD weird squeak behaviour preserved for sign position:''-16rFF'' asNumber ->-255''16r-FF'' asNumber ->-255-16r-FF'' asNumber -> 255(NOW has same with +)These ones used to fail:''1r0'' asNumber -> 1 (ignore the rest from $r to end)''2r3'' asNumber -> 2 (ignore the rest from $r to end)Changes due to 16rff from Andreas''16r1.e2'' asNumber  -> 1.8828125 (used to be 4096.0)Now time to raise your voice...' id '602205a3-29f5-9240-9436-c42070a48cea' date '23 February 2010' time '3:14:34.835 pm' author 'nice' ancestors ((id 'b3db5f5a-bd5e-ce46-965a-f108c7608d2a')) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())(name 'Kernel-cmm.494' message 'Factored common CompiledMethod signature printing behavior.' id '4cf3f377-153b-440b-a59b-5474949b3069' date '19 September 2010' time '4:47:17.67 pm' author 'cmm' ancestors ((name 'Kernel-klc.493' message 'This makes two significant changes to DateAndTime/TimeStamp either of which fixes a number of TimeStamp tests.1.  Ensure that when the date is extracted from either DateAndTime or TimeStamp that the date is defined in terms of a DateAndTime.2.  If a TimeStamp and a DateAndTime represent equivalent instances in time then allow #= to return true when comparing them.These changes may be controversial.  As mentioned when I discussed this on the #squeak IRC channel there are conceptual differences between TimeStamps and DateAndTimes.  I don''t disagree with this notion, however that is not how TimeStamp is implemented currently in Squeak.  I admit I''m taking the easier approach since I would have to give some serious thought and research into a ''proper'' redesign of TimeStamp.For now these changes make TimeStamp/DateAndTime at least work like they seem to be expected to based on the tests.' id '2160992d-b8c1-a246-8dfe-751abbb9f685' date '12 September 2010' time '4:37:22.016 pm' author 'klc' ancestors ((name 'Kernel-nice.492' message 'Second revision of bench to display:The rules are:- display 10,400,000 rather than 1.04e7- display 24 rather than 24.0- display a fractional part only if significativeIn any case, only first 3 digits are displayed, the rest are rounded to zero because considered un-meaningfull.Above 100, every digit after the decimal point is at least in fourth position, so the decimal part won''t be displayed.' id '29865715-9a8e-c448-8d96-34eee97b5a37' date '10 September 2010' time '9:11:24.786 pm' author 'nice' ancestors ((name 'Kernel-nice.491' message 'Prevent bench to display 14 digits or so.3 significative digits should be enough for a human brain (at least mine).' id '00d7b4ff-5219-aa44-b82d-be4c7f18c761' date '10 September 2010' time '2:33:29.294 pm' author 'nice' ancestors ((name 'Kernel-ar.490' message 'Restructurings to reduce package depencencies.' id '421b78d6-e95b-af49-affd-34ef3fa166ae' date '5 September 2010' time '11:28:07.137 am' author 'ar' ancestors ((name 'Kernel-ar.489' message 'Merging Kernel-spd.476:Fixed issue 7553 - DateAndTime now uses the local offset when creating an instance via readFrom: or fromString: if none is specified.  This is consistent with the behavior of year:day:hour:minute:second:' id '23754a5a-4269-4a4c-8151-36159992728b' date '2 September 2010' time '7:55:47.302 pm' author 'ar' ancestors ((name 'Kernel-ar.488' message 'Merging Kernel-cbr.475:New comments for Month, Year, Week. This time without additional cruft from my image (whoops.)' id 'e6aaf57a-8657-8f42-b0de-eec4c9489a7d' date '2 September 2010' time '7:54:27.337 pm' author 'ar' ancestors ((name 'Kernel-nice.487' message 'provide a modular inversion much faster than the binary extended euclidean algorithm found in DigitalSignatureAlgorithm.As raisedTo:modulo: belongs to Integer, reciprocalModulo: belongs to Integer too. These algorithms have value outside DSA.' id '283f7f22-eafa-42f9-a04d-6919febb4471' date '2 September 2010' time '9:42:36.971 pm' author 'nice' ancestors ((name 'Kernel-dtl.486' message 'Normalize new Duration instance if signs of seconds and nanoSeconds do not match. Fixes invalid printString for Duration in this case. DurationTest>>testNormalizeNanoSeconds passes now.' id '4779fe02-9375-421c-8753-c7db6d686b03' date '29 August 2010' time '12:18:28.667 pm' author 'dtl' ancestors ((name 'Kernel-ul.485' message '- fix LargeInteger printing' id 'fce08992-f821-ed46-a863-9935d6a7fe2e' date '23 August 2010' time '2:13:52.357 pm' author 'ul' ancestors ((name 'Kernel-dtl.484' message 'Remove Time class>>primUtcWithOffset (introduced in Kernel-dtl.476). The underlying mechanism for representing UTC and offset remains under discussion on the vm-dev list, so this method should not be introduced in trunk without an agreed approach.' id '54ee9807-a918-47fb-b619-b54b49c816e0' date '22 August 2010' time '11:01:16.199 pm' author 'dtl' ancestors ((name 'Kernel-nice.483' message 'Fix WeakMessageSends Part 3.Thanks to Juan, see http://bugs.squeak.org/view.php?id=7352Clean-up, but preserve WeakMessageSend>>valueWithEnoughArguments: though it is not used with such receiver (who knows a package might need it).' id '3fb5df26-bcfa-4958-8ee6-79cf603bb3fa' date '22 August 2010' time '9:41:03.176 pm' author 'nice' ancestors ((name 'Kernel-nice.482' message 'Fix WeakMessageSends Part 1.Thanks to Juan, see http://bugs.squeak.org/view.php?id=7352I could nor resist and added my own simplificationsThere will be a second part for this fix.' id '0cda1747-d4ad-4e81-b7f9-a085602e5344' date '22 August 2010' time '9:12:15.834 pm' author 'nice' ancestors ((name 'Kernel-nice.481' message 'minor change: avoid creating a SortedCollection when not necessary...asSortedCollection asArray -> asArray sort' id '70b04d4e-153d-4c0f-bb0d-92b3dce1cd88' date '22 August 2010' time '8:36:19.342 pm' author 'nice' ancestors ((name 'Kernel-nice.479' message 'Fix for http://bugs.squeak.org/view.php?id=7555The sign of (Float negativeZero abs) was negative, which was surprising...' id '05a9ec90-5060-4f09-8808-608d5b6cb657' date '21 August 2010' time '10:42:50.198 pm' author 'nice' ancestors ((name 'Kernel-ul.478' message '- use #cull:, #cull:cull: and #valueWithPossibleArgument: instead of #valueWithPossibleArgs: to avoid array creation' id 'ce807f45-d3ef-0a41-8094-245579694724' date '21 August 2010' time '7:33:03.969999999 pm' author 'ul' ancestors ((name 'Kernel-eem.477' message 'Add a followingBytecode to InstructionStream, e.g.SystemNavigation default browseAllSelect:	[:m| | is |	m isQuick not	and: [is := InstructionStream on: m.		is scanFor: [:b| b = 16r8F						and: [is secondByte ~= 0						and: [is followingBytecode = 115]]]]]' id '56dc3c2a-e134-4477-98c4-653096627951' date '14 August 2010' time '7:05:27.885 pm' author 'eem' ancestors ((name 'Kernel-dtl.476' message 'Add Time class>>primMicrosecondClock and Time class>>primUtcWithOffset for access to microsecond clock primitives available in newer Squeak VMs.primMicrosecondClock provides a system clock with nominal microsecond precision.primUtcWithOffset answers UTC time as microseconds since the Posix epoch and offset as seconds offset from GMT. The Squeak clock is traditionally implemented in terms of platform local time. Use of UTC time and offset is advantageous if time zones and daylight saving time offsets are to be considered.Example:{ Time primMillisecondClock .   Time primMicrosecondClock .   Time primUtcWithOffset } ==> #(6932757 6932757830 #(1281815075538304 -14400))' id 'ac94bcb6-d6bc-4863-b7a8-70d7f49b81e2' date '14 August 2010' time '5:55:49.082 pm' author 'dtl' ancestors ((name 'Kernel-eem.475' message 'Fix CompiledMethod>>decompileWithTemps to live up to its name.' id '299acbbc-d538-4103-8ce2-29099b29d6b9' date '12 August 2010' time '2:07:00.805 pm' author 'eem' ancestors ((name 'Kernel-eem.474' message 'BlockClosure>>#once Travis Griggs'' neat idiom for interning values of computations.  Use e.g. as in	myResourceMethod		^[time-consuming computation] once' id '292f2cc5-ba81-4d03-a64f-4e7cb878d68f' date '22 July 2010' time '1:42:05.4 pm' author 'eem' ancestors ((name 'Kernel-eem.473' message 'Change to older semantics of Integer>>hex for Cog VMMaker.' id '2255d998-2581-444e-9caf-7e51de7ba918' date '17 July 2010' time '5:13:29.985 pm' author 'eem' ancestors ((name 'Kernel-eem.472' message 'yet another snafu for BlockClosure>>value.' id '6c1ef6ed-4b21-4887-9c13-7ed690069f0e' date '7 July 2010' time '11:53:07.243 am' author 'eem' ancestors ((name 'Kernel-eem.471' message 'Restore the BlockClosure>>value[:....] primitive numbers snafu fromthe asContext fixes.' id '1ec2e53a-ad4f-42d4-90b2-4a413714f24d' date '7 July 2010' time '10:27:12.923 am' author 'eem' ancestors ((name 'Kernel-eem.470' message 'Fix the other dependencies of asContextWithSender:' id 'c0ed6502-acb0-4ab5-a352-16274fceec1a' date '2 July 2010' time '10:42:57.84 am' author 'eem' ancestors ((name 'Kernel-eem.469' message 'Make sure BlockClosure>asContext[WithSender:] pushes nils forany arguments and pushes any copied valuesI recommend that you load Kernel-eem.468 before loading this!' id '00b1358c-5201-4cfe-8fb4-c2e4c628fe09' date '1 July 2010' time '7:50:52.854 pm' author 'eem' ancestors ((name 'Kernel-eem.468' message 'Fix restart in blocks in the debugger.Also first part of fix for BlockClosure>asContext[WithSender:]' id 'cefa8bb0-aaaa-4ea6-b115-9d4ce1a84d6f' date '1 July 2010' time '7:48:07.5 pm' author 'eem' ancestors ((name 'Kernel-ul.467' message '- a bit faster DependentsArray >> #select: implementation- added missing MethodDictionary >> #associationAt:ifAbsent:' id 'fd9601ae-bedf-9342-b329-947d78cb0329' date '1 July 2010' time '9:11:12.989 pm' author 'ul' ancestors ((name 'Kernel-eem.466' message 'Add Object>>okToClose for multi-window browser support' id 'e7f77eee-fec2-441f-91ce-b505b87dd1db' date '1 July 2010' time '11:39:37.515 am' author 'eem' ancestors ((name 'Kernel-ar.465' message 'Cogification part 2: Float access primitives.' id '9a7edf96-1125-3646-b383-d2cbac094279' date '20 June 2010' time '2:29:04.886 pm' author 'ar' ancestors ((name 'Kernel-ar.464' message 'Cogification part 1: Remove unsafe prims from LargeInteger.' id 'f8f6461e-8062-0849-99f8-c19b58354a3d' date '20 June 2010' time '2:26:05.41 pm' author 'ar' ancestors ((name 'Kernel-cmm.463' message 'Removed implicit conversion of DateAndTime equality-testing argument.' id '1b05ff9c-c52f-4df5-9283-f8dcd5a88e3a' date '15 June 2010' time '3:18:03.121 pm' author 'cmm' ancestors ((name 'Kernel-ar.462' message 'TranslatedMethod can go, too.' id '88f629c7-3e53-f146-8fca-29f31e151dd4' date '14 June 2010' time '10:09:55.587 pm' author 'ar' ancestors ((name 'Kernel-ar.461' message 'Remove positively ancient j3 support that hasn''t been used in too many years.' id '86d9f9a3-3611-fa43-a6ec-dc6d3c69012a' date '14 June 2010' time '10:07:55.827 pm' author 'ar' ancestors ((name 'Kernel-nice.460' message 'add #methodsInCategory: from Pharo (needed by newer XMLParser package)Correct a minor typo in a comment (Pharo).' id 'f4fe2c21-dea0-4c4e-ad78-12c8151cf993' date '12 June 2010' time '2:19:25.578 am' author 'nice' ancestors ((name 'Kernel-nice.459' message 'Avoid an overflow when asking for LargeInteger>>#logSame for fractions of LargeInteger.This completes the work engaged for #ln and #log:Note 1: the code is duplicating #ln, but Idid not find any elegant way to avoid this duplication.Note 2: concerning accuracy, LargeInteger>>#log and#ln might be several ulp off (up to 3, maybe more).' id 'ab072b6c-709f-8748-ab49-d5f71ca3fc92' date '12 June 2010' time '12:48:39.803 am' author 'nice' ancestors ((name 'Kernel-dtl.458' message 'Fix discrepancy noted in Mantis 7525http://bugs.squeak.org/view.php?id=7525---------------------------------------------------------------------- JoachimGeidel - 06-10-10 12:20----------------------------------------------------------------------PseudoContext class>>initialize and TranslatedMethod class>>initialize testif the specialObjectsArray size equals 41 after recreating it and raise anError if it is not (in Squeak 4.1, latest update: 9957). The tests shouldeither be updated or removed.' id 'cbd7063b-14c0-46a6-80af-00ab06fef6cc' date '10 June 2010' time '7:19:48.745 pm' author 'dtl' ancestors ((name 'Kernel-dtl.457' message 'Merge Kernel-nice.453' id '9fefe953-125d-4872-b44c-8cddad771beb' date '3 June 2010' time '9:30:53.666 pm' author 'dtl' ancestors ((name 'Kernel-mtf.456' message 'Added a utility method to Behavior for testing whether a method is compiled correctly without overwriting the incorrectly compiled method if not' id 'b1e05e80-6bc8-47fd-adda-82388483e604' date '3 June 2010' time '11:05:37.324 am' author 'mtf' ancestors ((name 'Kernel-mtf.455' message 'Added a support method for making error handlers re-entrant. Needed for preserving Tweak island semantics in the presence of syncSends and error resignalling' id '515e8964-f471-4ac6-bcec-47e74b833f86' date '3 June 2010' time '9:41:09.471 am' author 'mtf' ancestors ((name 'Kernel-mtf.454' message 'added ProtoObject >> instVarsInclude:, which is used by the pointer tracer fixes:http://bugs.squeak.org/view.php?id=7158' id '744ec5f0-a005-4e29-b3c0-d76f96573393' date '3 June 2010' time '8:51:28.452 am' author 'mtf' ancestors ((name 'Kernel-ar.452' message 'Eliot''s fix for ContextPart>>tryNamedPrim...' id '468fbdc7-4fcb-9845-8223-5333334177b8' date '24 May 2010' time '8:43:58.049 pm' author 'ar' ancestors ((name 'Kernel-nice.451' message '1) Add a class comment for Categorizer (both for testing MC and because class comments are a good thing).2) Let a chance for NumberParser subclasses to parse a leading plus before an integer.3) Skip backward in case of invalid radix, just to have the message inlined where due in code panes.' id '55b7ba84-6fa3-9e49-89a6-c42ce2ae82fc' date '6 May 2010' time '9:15:03.298 pm' author 'nice' ancestors ((name 'Kernel-ar.450' message 'Merging Kernel-wiz.444:This adds Number>>roundDownTo:Currently it is missing. Essentialy it is an umimplemented call. Called by:''Point roundDownTo: {*Morphic-Truncation and Roundoff}'' ''Rectangle compressTo: {*Morphic-Truncation and Roundoff}'' ''Rectangle expandTo: {*Morphic-Truncation and Roundoff}''It doesn''t show up as unimplemented because the selector is used by Point. However, if it is not present the other three methods will raise a stink.' id 'f30101fa-2360-5249-8dc8-cf7d9f169246' date '5 May 2010' time '10:23:50.222 pm' author 'ar' ancestors ((name 'Kernel-ul.449' message '- #rehash doesn''t compress dictionaries, use #compact instead' id '67d79d4f-1329-644e-a7a6-3f63bc2904b8' date '2 May 2010' time '12:22:11.346 pm' author 'ul' ancestors ((name 'Kernel-fbs.448' message 'Support for Mantis 7517: a spawned workspace has no context menu.' id 'f46f80a9-5492-9542-9826-80a936a01df8' date '28 April 2010' time '10:30:41.538 pm' author 'fbs' ancestors ((name 'Kernel-ul.447' message '- use #quo: and #rem: instead of #// and #\\ to handle negative arguments properly in Duration class >> #milliSeconds:- also removed the method comment which was obsolete' id 'e4508c46-01d1-b943-8c11-b4a471f12488' date '28 April 2010' time '10:01:34.283 am' author 'ul' ancestors ((name 'Kernel-ar.446' message 'Merging Kernel-hmm.441:Proposal: wrap the parsing action in CompiledMethod>>methodNode in a SyntaxErrorNotification error handling block to decompile methods which can''t be parsed correctly.OMeta2 and probably other domain specific languages benefit from this.' id '8677fe4e-dc64-b449-b45d-46674a51961a' date '21 April 2010' time '8:53:39.616 pm' author 'ar' ancestors ((name 'Kernel-nice.445' message '1) Avoid overflow when (1.7976931348623157e308 printStringBase: 16.) - http://bugs.squeak.org/view.php?id=3493.2) cosmetic: use #bitShift:  because faster than #<< #>> and remove unecessary temps from #absPrintExactlyOn:base:' id '89933404-89fd-4dc7-838f-67300383b0b1' date '21 April 2010' time '12:00:42.462 am' author 'nice' ancestors ((name 'Kernel-ul.444' message '- merged' id '9e17b787-82e5-e947-99da-7ca2d6c2c97a' date '19 April 2010' time '2:33:10.77 am' author 'ul' ancestors ((name 'Kernel-ar.443' message 'Fix handling of duplicate/swap control and alt keys.' id '36dc17fd-f2de-d54d-b33f-435c2f08d6bb' date '17 April 2010' time '11:19:52.132 am' author 'ar' ancestors ((name 'Kernel-tbn.442' message 'remove unused Message>>pushReceiver(see also http://code.google.com/p/pharo/issues/detail?id=2308)' id '8b407e36-b213-ad42-ad55-5df9e6dadcbc' date '14 April 2010' time '9:44:34.675 pm' author 'tbn' ancestors ((name 'Kernel-tbn.441' message 'categorize accessor methods in ValueHolder' id '9334492f-264f-cc4f-8cb3-dea1986e5217' date '14 April 2010' time '1:25:04.516 pm' author 'tbn' ancestors ((name 'Kernel-cmm.440' message 'Fixed Duration bug.' id 'e685ace9-6aa0-46a4-a4a2-02b16b385eec' date '8 April 2010' time '12:21:17.282 pm' author 'cmm' ancestors ((name 'Kernel-jcg.439' message 'Fix Promise to address failing test added in KernelTests-jcg.146.' id '6055c684-bed4-44a4-9da3-a55fc22de5b6' date '6 April 2010' time '1:42:28.455 am' author 'jcg' ancestors ((name 'Kernel-jcg.438' message 'Fix embarrassing bug in Promise>>resolveWith:' id '8d53a86d-8fd5-8c42-9bc7-abea484a3e5d' date '5 April 2010' time '12:40:23.346 am' author 'jcg' ancestors ((name 'Kernel-ar.437' message 'Fixes needed for new condensing method:* Allow class comments to be moved to the sources file* Make CompiledMethod>>setSourcePointer: less expensive by avoiding #become: if at all possible' id 'fca21cc5-5dcb-e24d-af15-a1bf0241151d' date '31 March 2010' time '11:12:42.404 pm' author 'ar' ancestors ((name 'Kernel-ar.436' message 'Fix failing traits condenseChanges test. Since we do not share compiled methods, moving *all* trait methods (instead of just ''local'' ones) is CORRECT behavior.' id 'd85068dc-e213-1149-81df-1f71ed09846c' date '29 March 2010' time '9:02:14.348 pm' author 'ar' ancestors ((name 'Kernel-ar.435' message 'Include the selector of the failing primitive in the error message about primitive failure. For example:	Socket new primSocketDestroy: nilnow tells us that primSocketDestroy: failed instead of just ''a primitive has failed''.' id 'c4cbfefc-fcca-7643-9c6b-183eca2ccb8d' date '25 March 2010' time '3:27:26.733 pm' author 'ar' ancestors ((name 'Kernel-nice.434' message '1) Get rid of now unused MethodProperties2) remove a _ assignment in Random comment' id 'de185e6f-0fc2-ec4a-be45-aaae05306fbe' date '24 March 2010' time '9:12:27.573 pm' author 'nice' ancestors ((name 'Kernel-ar.433' message 'Add the underscore preferences in Behavior.' id 'be2ffaa2-8818-3445-a7bf-d1af190aa044' date '24 March 2010' time '1:22:53.859 am' author 'ar' ancestors ((name 'Kernel-djr.432' message 'Fix rootsOfTheWorld, broken since the SmalltalkImage refactoring.' id '2e0904c5-b15c-4c07-9915-1cf2b51e0410' date '23 March 2010' time '5:43:36.668 pm' author 'djr' ancestors ((name 'Kernel-nice.431' message 'Use literalEqual: rather than = to test for compiled code equality.We don''t want 256000.0s1 = 256000.0e0 nor = 256000' id '87f9485f-8b62-6740-93b3-e25f1710420b' date '22 March 2010' time '10:51:37.603 pm' author 'nice' ancestors ((name 'Kernel-nice.430' message 'Don''t use closeTo: when comparing compiledMethod.Either two methods are equals or not (or we could fuzzify String equality to with sameAs: or other trick....).The hack was previously necessary due to roundoff errors in printing and reading a Float.This is not the case anymore: Float literals now storeOn: and readFrom: exactly..' id '0b52ed47-5bac-5946-9625-04599fb094a3' date '22 March 2010' time '9:58:57.062 pm' author 'nice' ancestors ((name 'Kernel-laza.429' message 'reverting last change' id '5fceae69-95bb-4c8a-a95b-97006acf3086' date '22 March 2010' time '12:12:33.305 pm' author 'laza' ancestors ((name 'Kernel-laza.428' message 'Order instance variables alphabetically' id '5b1e683b-2d8c-4f21-b877-30e2426f1491' date '22 March 2010' time '11:47:56.242 am' author 'laza' ancestors ((name 'Kernel-ul.427' message '- don''t use SequenceableCollection >> #reverse' id '74f36aa8-f73c-7f43-b175-405c52de4af8' date '21 March 2010' time '5:52:49.226 pm' author 'ul' ancestors ((name 'Kernel-cmm.426' message 'Added remaining significant timezones for West / US.' id '1718cc0a-19ab-45ed-87b6-1f03715acd98' date '15 March 2010' time '6:56:53.665 pm' author 'cmm' ancestors ((name 'Kernel-nice.425' message 'Use Character>>digitValue..Now that it is fast enough, there is no point in replicating the algorithm.' id '3c10b52e-83ec-404b-9db9-4fcdae5bb28f' date '15 March 2010' time '12:18:40.839 am' author 'nice' ancestors ((name 'Kernel-nice.424' message 'Cache well known digit values in NumberParser for speed.Testing the base as of previous implementation was not a good idea, because some Unicode characters could have a digitValue < 10.' id '0ed744aa-5d6e-470a-9adc-a064c3d874df' date '14 March 2010' time '11:19:27.192 pm' author 'nice' ancestors ((name 'Kernel-laza.423' message 'Adds Host WindowEvent handling' id '4c7bfbb9-65d0-4419-a8be-432b2410216a' date '11 March 2010' time '9:33:09.112 am' author 'laza' ancestors ((id 'a8de6a84-8494-b34e-bfaa-eef854ed79e6')) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())(name 'Kernel-ul.441' message '- #compact protocol for MethodDictionary' id '060bac40-d722-4f46-b29e-49c1926243b6' date '13 April 2010' time '12:15:38.206 am' author 'ul' ancestors ((id 'e685ace9-6aa0-46a4-a4a2-02b16b385eec')) stepChildren ())) stepChildren ())) stepChildren ())(name 'Kernel-hmm.441' message 'Proposal: wrap the parsing action in CompiledMethod>>methodNode in a SyntaxErrorNotification error handling block to decompile methods which can''t be parsed correctly.OMeta2 and probably other domain specific languages benefit from this.' id 'a3347ac6-2e2b-4deb-a8db-dd9c24d3e0f2' date '16 April 2010' time '10:19:20.499 pm' author 'hmm' ancestors ((id 'e685ace9-6aa0-46a4-a4a2-02b16b385eec')) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())(name 'Kernel-wiz.444' message 'This adds Number>>roundDownTo:Currently it is missing. Essentialy it is an umimplemented call. Called by:''Point roundDownTo: {*Morphic-Truncation and Roundoff}'' ''Rectangle compressTo: {*Morphic-Truncation and Roundoff}'' ''Rectangle expandTo: {*Morphic-Truncation and Roundoff}''It doesn''t show up as unimplemented because the selector is used by Point. However, if it is not present the other three methods will raise a stink.' id '3a8f4eb1-7d22-4398-a30b-0c674e73a0f7' date '2 May 2010' time '3:39:34.852 pm' author 'wiz' ancestors ((id '36dc17fd-f2de-d54d-b33f-435c2f08d6bb')) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())(id '0d47896c-fa27-4804-b345-ea3c8a17c1d1')) stepChildren ())) stepChildren ())) stepChildren ())(name 'Kernel-nice.453' message 'After recent vwnc post, don''t let LargeInteger ln overflow.Same for Fraction with LargeInteger.Also avoid loss of precision due to gradual underflow.' id '5961f8b3-0010-b643-b1d1-56bd1e657937' date '28 May 2010' time '9:37:49.978 pm' author 'nice' ancestors ((id '468fbdc7-4fcb-9845-8223-5333334177b8')) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())(name 'Kernel-cbr.475' message 'New comments for Month, Year, Week. This time without additional cruft from my image (whoops.)' id '6834d591-a86a-49c7-aedc-6fb30a6086e5' date '28 July 2010' time '6:18:23.911 pm' author 'cbr' ancestors ((id '292f2cc5-ba81-4d03-a64f-4e7cb878d68f')) stepChildren ())) stepChildren ())(name 'Kernel-spd.476' message 'Fixed issue 7553 - DateAndTime now uses the local offset when creating an instance via readFrom: or fromString: if none is specified.  This is consistent with the behavior of year:day:hour:minute:second:' id 'c4428bcf-4372-4365-b38f-091178c5068c' date '5 August 2010' time '9:46:40.546 am' author 'spd' ancestors ((name 'Kernel-spd.475' message 'Fixed issue 7553 - DateAndTime now uses the local offset when creating an instance via readFrom: or fromString: if none is specified.  This is consistent with the behavior of year:day:hour:minute:second:' id '2c89c8a6-b4ee-4ace-beef-53a87ee1c021' date '5 August 2010' time '9:32:20.313 am' author 'spd' ancestors ((id '292f2cc5-ba81-4d03-a64f-4e7cb878d68f')) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())(name 'Kernel-topa.508' message 'added missing withAllSuperAndSubclassesDo:' id 'bd68254c-b0c4-4cd5-9926-6a5caa6c82eb' date '25 October 2010' time '10:30:52.354 am' author 'topa' ancestors ((id 'f2a1ac34-c8a3-ae48-b38c-271043354faa')) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())(name 'Kernel-HenrikSperreJohansen.522' message 'adoptInstance: , an alternative interface to primitiveChangeClassTo:.Uses primitive if available, if not the equivalent primitiveChangeClassTo: expression (only in Cog for now)' id '52384bb5-4b18-9e49-8292-cf8bb55e06aa' date '10 December 2010' time '11:35:02.564 am' author 'HenrikSperreJohansen' ancestors ((id '3b6f8cce-0310-2d4d-91aa-deab6d13bde9')) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())(name 'Kernel-nice.533' message '1) Let Behavior>>deepCopy return self, senders of deepCopy generally have no reason to copy a Behavior.Moreover, the old code did a shallowCopy which is a non sense.2) Make it explicit that veryDeepCopy does not copy any Behavior.This was explicit for Metaclass, but implicit for Class (see Object>>#veryDeepInner: ), and undefined for Traits (they are not used, but who knows...).' id '477d8325-a6e0-469f-a805-27e058d930fd' date '29 December 2010' time '12:23:26.17 pm' author 'nice' ancestors ((id '30e481ee-c2ee-4d10-8484-ec8da55ae54a')) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())(name 'Kernel-cmm.541' message '#asStringOrText should return the receiver #asString, not printString.  This is the correct behavior to be able to render first-class objects in PluggableListMorphs without quotes around them.' id '3d47b3f2-cb83-4759-a9b6-93f6dbda47f7' date '30 January 2011' time '3:12:21.568 pm' author 'cmm' ancestors ((id 'a66e5204-4090-2149-8c6a-d65fa1cc4dd3')) stepChildren ())) stepChildren ())) stepChildren ())(name 'Kernel-hsj.547' message 'Fixes inconsistency in return value of adoptInstance: on different VM''s.' id '46e9ff86-8023-4720-a146-7eb8a2d2fb30' date '16 February 2011' time '1:45:07.199 pm' author 'hsj' ancestors ((id '89f8153f-e938-c742-9f8b-002d8e55612c')) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())(name 'Kernel-ul.553' message '- refactored preamble and timestamp fetching/parsing' id 'a6323824-6a25-514f-a383-fb44cafabb42' date '16 March 2011' time '11:54:02.277 pm' author 'ul' ancestors ((id '9200081a-9eb0-7042-b9b5-3a792061f53d')) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())(name 'Kernel-ul.599' message '- Don''t send #forgetDoIts, because it''s not needed anymore.- Use #repeat instead of [ true ] whileTrue and friends.' id '153c6a95-543b-c044-915a-94fd0e7eef12' date '17 June 2011' time '4:33:17.842 pm' author 'ul' ancestors ((name 'Kernel-nice.598' message 'Speed up #primesUpTo:do: incrementing by 2 since it is well known that even numbers are not prime (except 2).Use sqrtFloor in #largePrimesUpTo:do:Also remove a useless #even test which is always performed on odd index' id 'a06f700c-45d2-4b73-802a-93efd44d22b1' date '17 June 2011' time '2:39:01.884 am' author 'nice' ancestors ((name 'Kernel-ul.597' message 'A more efficient implementation of Integer class >> #primesUpTo:do: using the Sieve of Eratosthenes.' id '579dc488-9b22-5f4c-8a32-d60e5a1f2032' date '17 June 2011' time '12:38:04.174 am' author 'ul' ancestors ((name 'Kernel-ul.596' message 'Merged.' id '4ec84fe6-a346-6544-aba2-60ae51a2937b' date '13 June 2011' time '12:02:09.223 pm' author 'ul' ancestors ((name 'Kernel-ul.595' message '- added CompiledMethod class >> #receiver:withArguments:executeMethod: which uses primitive 188 with three arguments (not all VMs support this yet, pre r2393 Cog VMs may crash when used with certain methods). If the primitive fails the fallback mechanism tries to use primitive 188 with two arguments (supported by all VMs).  CompiledMethod >> #valueWithReceiver:arguments: should use this method in the future, because it doesn''t send any messages to the receiver. The change was postponed, because older Cog versions would crash with this change.- updated ContextPart >> #doPrimitive:method:receiver:args: to support both two and three arguments variants of primitive 188 and added support for primitive 189, so it won''t "escape from the debugger" anymore.' id '992b01d8-bccb-604d-8348-6ece685506db' date '13 June 2011' time '11:52:02.639 am' author 'ul' ancestors ((name 'Kernel-ul.594' message 'Fixed a typo.' id '385c8487-9a12-1d42-a932-625ab60ddc72' date '10 June 2011' time '10:31:35.642 pm' author 'ul' ancestors ((name 'Kernel-wiz.592' message 'asNonFraction with updated comments.ceiling speed up for positive numbers by mirroring floor code rathar than calling floor.' id 'ce3c0c86-e4f2-4bf5-8c2a-efbc708af821' date '29 May 2011' time '6:40:45.398 pm' author 'wiz' ancestors ((name 'Kernel-wiz.591' message 'This is asNonFraction defined only for Number and Fraction but not Object. Fractions are converted to Floats other numbers are left alone. Non numbers including nil  will raise a DNU.' id '53586ad8-595c-477a-ac55-19471c286e26' date '29 May 2011' time '4:11:53.048 pm' author 'wiz' ancestors ((name 'Kernel-eem.590' message 'Fix whichSelectorsReferTo:special:byte:thorough: forFloat bindingOf: #NaN, so that one can browse referencesto the NaN class var.Use literaslsDo: instead of literals do: in spaceUsed.' id 'bbcacb44-5bd6-40fe-965a-697b4b126ffd' date '23 May 2011' time '6:10:15.256 pm' author 'eem' ancestors ((name 'Kernel-nice.589' message 'Optimize the way to count number of printed digits for Integer- by using iteration rather than recursion,- by providing a slightly better guess in the decimal case.Accelerate #raisedTo:modulo: because this operation is critical in cryptography.Avoid using recursive #raisedToInteger:modulo: for same speed reasons, and deprecate it.Sorry to sacrifice simplicity, hope you''ll understand..Implementation notes:#raisedTo:modulo: now uses the new montgomeryTimes primitive if present.Otherwise, it fallbacks to classical multiplication, remainder sequences.The Montgomery algorithm avoids division implied by the modulo operation and thus save a few CPU cycles (see http://en.wikipedia.org/wiki/Montgomery_reduction for an introduction).Both Montgomery and fallback version use a sliding window algorithm.It consists in exponentiating by bit packets rather than bit by bit and then save some multiplications.It is a classical CPU vs memory tradeoff. Hope the comments help if you''re interested.Note that raisedTo: could also use a slidingWindow if we want to. Do we?In such case, we would have 3 most identical methods and should think of a better refactoring.' id '094e80f6-660c-4e82-803e-7f4a2d5d5a5a' date '19 May 2011' time '2:41:37.27 am' author 'nice' ancestors ((name 'Kernel-dtl.588' message 'Fix from Jerome Peace for [M7632] String Holder class>>openLabel: returns the Class rather than the instance.' id '08000000-1508-ba00-1508-ba0014000000' date '15 May 2011' time '8:56:25.962 pm' author 'dtl' ancestors ((name 'Kernel-dtl.587' message 'Remove broken autoAccessors hook from Object>>doesNotUnderstand:Problem was reported with (partial) resolution agreed a year ago, but fix did not get applied. Background:<http://lists.squeakfoundation.org/pipermail/squeak-dev/2010-April/148889.html>Preferences autoAccessor when turned on seems to break badly the Object #doesNotUnderstand logic.try this is the latest image:	Preferences enable: #autoAccessors.	5 annoyWith: 7(beware it will hang the image for good)<http://lists.squeakfoundation.org/pipermail/squeak-dev/2010-April/149022.html>I think it''s safe to remove this part from Object >>> #doesNotUnderstand:>> (Preferences autoAccessors>  	 and: [self tryToDefineVariableAccess: aMessage]) ifTrue:>  		[^aMessage sentTo: self].>>> LeventeI agree, for the meantime there will be no automatic generation of accessors.I you search for ''auto'' in the Preferences Browser you do not find anentry for enabling the generation of them.Hannes' id '08000000-1508-061c-1508-061c14000000' date '15 May 2011' time '11:47:32.816 am' author 'dtl' ancestors ((name 'Kernel-dtl.586' message 'Igor''s fix for CompiledMethodTrailer>>encodeVarLengthSourcePointer, see CompiledMethodTrailerTest>>testEncodingZeroSourcePointer for test and <http://lists.squeakfoundation.org/pipermail/squeak-dev/2011-May/159822.html> for discussion.' id '08000000-1508-8a15-1508-8a1514000000' date '10 May 2011' time '8:47:40.644 pm' author 'dtl' ancestors ((name 'Kernel-fbs.585' message 'Minor spelling nits fixed.' id 'd9402d4c-6a38-174f-9b94-739082e073c4' date '8 May 2011' time '7:02:15.266 pm' author 'fbs' ancestors ((name 'Kernel-nice.584' message 'Correct #whichSelectorsStoreInto: again, obviously testing is required ;)Give Metaclass a chance to detect which method/selector writes into a class var.Otherwise, the extension is not really usefull, most of these write are in class side.' id '099b94aa-ca97-4f91-b60c-0509e9211391' date '7 May 2011' time '2:37:16.885 pm' author 'nice' ancestors ((name 'Kernel-ul.583' message '- use #instVarIndexFor:ifAbsent: for getting the index of an instance variable- fix: send #whichSelectorsStoreInto: to super instead of #whichMethodsStoreInto: from Class >> #whichSelectorsStoreInto:- deprecated Behavior >> #whichSelectorsAssign:' id '51d4d8d1-1710-6d49-8633-eb60d4680c6a' date '7 May 2011' time '2:50:42.698 am' author 'ul' ancestors ((name 'Kernel-nice.582' message '1) Restore #whichSelectorsAssign: and #whichSelectorsStoreInto: because used by many tools (RB/OB/EC...)2) While at it, extend their power to class variable names.3) let''em always answer an Array, not an IdentitySet or an Array4) correct #whichMethodsStoreInto: comment, they don''t answer a selector5) simplify #whichMethodsStoreInto: Maybe we shall deprecate the old selectors later, but for now, maintain 2 versions...' id '1a8988c2-e42f-4e41-992e-9bcc200d85de' date '6 May 2011' time '11:02:30.631 pm' author 'nice' ancestors ((name 'Kernel-cmm.581' message 'Factor out domain work from UI work; so that applications may save an object on file.' id 'ef06ace4-3546-4a3e-aae0-91c22cc7dd8a' date '4 May 2011' time '1:59:30.972 pm' author 'cmm' ancestors ((name 'Kernel-cmm.580' message 'Restored Behavior>>whichMethodsStoreInto:.' id '88d42e3f-ca37-4d1b-87d6-76ed21f69864' date '3 May 2011' time '9:38:48.056 am' author 'cmm' ancestors ((name 'Kernel-cmm.579' message '- Removed unused methods.- Fixed sender.' id 'bc0c0f5a-e690-458d-a2c1-5ca67389166c' date '2 May 2011' time '7:53:17.364 pm' author 'cmm' ancestors ((name 'Kernel-cmm.578' message '- Support for streamlined variable reference / assignment browsing.- Fix for Month class>>#readFrom:.' id '913d762f-e361-4f5e-814f-0b0692ffa4d9' date '2 May 2011' time '6:46:17.696 pm' author 'cmm' ancestors ((name 'Kernel-ul.577' message 'Merged.' id 'f674fdde-21e4-f14c-a297-a29dfe42219c' date '30 April 2011' time '4:06:16.848 am' author 'ul' ancestors ((name 'Kernel-ul.576' message '- documented the issues with Behavior >> #commentsIn:- remove SortedCollection (mis)usage from #allSubclassesWithLevelDo:startingLevel:' id '46b435fa-0bc5-954d-8b1b-37a9e581c85a' date '30 April 2011' time '3:48:56.834 am' author 'ul' ancestors ((name 'Kernel-ul.574' message 'Fixed an evil typo.' id 'c0c9cff9-5977-a14c-a3c0-7b53ba4c2771' date '27 April 2011' time '1:09:14.442 am' author 'ul' ancestors ((name 'Kernel-nice.573' message 'Arrange arCosh to answer a positive real part.Arrange arcCos + arcSin to answer halfPi.Implement sinh cosh without intermediate Complex creation.' id '6467b07b-fb80-8c41-8f33-91c673a57e88' date '24 April 2011' time '10:48:34.956 pm' author 'nice' ancestors ((name 'Kernel-nice.572' message 'Correct Complex arcSin and arcCosLet (1 arTanh) return inf' id '83be5282-f6ca-43d4-a8c9-6618feeb883e' date '23 April 2011' time '4:11:47.274 am' author 'nice' ancestors ((name 'Kernel-nice.571' message 'Connect the new DomainErrorCorrect (-1 copySignTo: 0.0) to return a negativeZero.Add hyperbolic and inverse hyperbolic functionsAdd plenty of Complex missing methods and few mathematical functions:	i (multiply by 1 i)	raisedTo:	conjugated	sqrt	squaredNorm	arcSin arcCos arcTan arcTan:	sinh cosh tanh arSinh arCosh arTanhSpeed up a few complex functions by using #real:imaginary: directly rather than intermediate arithmetic operations.' id '2bd91b82-067a-49c9-a7a7-61771de27b3b' date '23 April 2011' time '2:39:41.455 am' author 'nice' ancestors ((name 'Kernel-nice.570' message 'Remove #cachedStackTopRationale: we can''t always add, we must also removeMore: it''s unsent, old, implementation is weird, a request on squeak-dev about this method raised no interest, comment is outdated, no longer true and intimidating, which is probably the main reason for such long survival.Last chance to struggle against unawareness of a casual commiter just passed.' id '3b5fd891-4f36-4a7a-8187-ec1ff8f1887d' date '20 April 2011' time '2:01:43.829 am' author 'nice' ancestors ((name 'Kernel-dtl.569' message 'If the VM supports primitiveMillisecondClockMask, use this at image startup time to obtain the millisecond clock mask value, otherwise use a default of 16r1FFFFFFF. Maintain the mask value in a class variable for speed, and use this for duration calculations associated with the millisecond clock.Background - the millisecond clock in the VM rolls over when its value exceeds the mask value. The image may calculate durations (e.g. socket timeout values) using the millisecond clock, in which case the mask value is used to detect clock rollover. By making the mask value available through a primitive, the image can be assured that its mask value is the same as that being used in the VM. If the primitive is not available, the image should assume use of the traditional mask value 16r1FFFFFFF.' id 'c1d30608-4cc8-4db7-204a-2bf7a46c1508' date '14 April 2011' time '9:48:42.876 pm' author 'dtl' ancestors ((id '340ecdd9-40de-42e4-8388-09abc07cdedf')) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())(name 'Kernel-ul.575' message '- removed support for BlockContexts from ContextPart >> #copyTo:- added a new method #copyTo:bottomContextDo: which provides access to the bottom context during copying' id '33ed898b-6592-984b-b1e6-d9f2a778f216' date '28 April 2011' time '12:03:58.259 am' author 'ul' ancestors ((id 'c0c9cff9-5977-a14c-a3c0-7b53ba4c2771')) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())(name 'Kernel-cbc.593' message 'Added examples to the comments in Number #roundDownTo:, #roundUpTo:, and #truncateTo: to clarify how to use the methods.' id '6ea87b7a-6755-1446-b2fd-54350609142c' date '7 June 2011' time '10:25:11.435 pm' author 'cbc' ancestors ((id 'ce3c0c86-e4f2-4bf5-8c2a-efbc708af821')) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())(name 'Kernel-yo.543' message 'Implements "Button for it" feature.' id '3b429e66-fae8-4923-8ea9-6dc0c41c1e16' date '30 June 2011' time '2:45:30.432 pm' author 'yo' ancestors ((id 'ea1d8beb-aa2d-4cf3-8389-2072df48f6e3')) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())(name 'Kernel-ul.611' message 'Removed unnecessary blocks.' id 'f6f9f434-559e-4442-a77a-58e4c0e29442' date '3 August 2011' time '1:45:38.639 am' author 'ul' ancestors ((name 'Kernel-nice.610' message 'Pulizie.You shall not decently ask any object if it hasLiteralThorough:' id 'b6b7d674-a3ce-4967-876a-b041c32d03a8' date '20 July 2011' time '12:54:38.514 pm' author 'nice' ancestors ((name 'Kernel-nice.609' message 'Use literalEqual: in hasLiteral: and hasLiteralThorough:Remove hasLiteralThorough:from: because it is suspect:- it is not sent- it checks whether aLiteral == aBlock which cannot happen in Squeak implementation- it send hasLiteralThorough: to literals which was weired and is now deprecated' id '50b9cca2-c2a0-47c3-a367-2eae2ed530de' date '20 July 2011' time '9:29:30.183 am' author 'nice' ancestors ((name 'Kernel-eem.608' message 'Fix CompiledMethod>>hasLiteral: to not look for ==, butliteral equal (class == & value =)' id '0c48ee9d-2fdf-4ad9-9f55-5187010b71f7' date '19 July 2011' time '9:46:25.127 am' author 'eem' ancestors ((name 'Kernel-ul.607' message '- Behavior >> #allLocalCallsOn: was moved to the System package.- use LowBitPerByteTable from #lowBit implementations- enhanced Integer >> #lowBit' id '364aaf4f-24eb-4648-9612-2ba439cc26cd' date '18 July 2011' time '5:30:16.971 pm' author 'ul' ancestors ((name 'Kernel-ul.606' message 'Copy the lowBit per byte table from SmallInteger >> #lowBit to a class variable in Integer, so it can also be used from other methods without duplication.' id '765d93ce-2226-a942-abee-bd2f45d192f6' date '18 July 2011' time '5:26:44.832 pm' author 'ul' ancestors ((id '59831937-c6b3-4a5a-9f2a-a14f898e6fd7')) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())(name 'Kernel-ul.613' message 'Extracted and enhanced the ProcessSpecific from Pharo.' id 'cd3bc5e7-fabf-b74a-9f8c-18eee845bc9b' date '16 August 2011' time '11:33:03.743999999 am' author 'ul' ancestors ((id '4d1d5cde-63c0-4b82-ba0c-912fc1b880bd')) stepChildren ())(name 'Kernel-ul.619' message 'Proposed solution to the Monitor bug (see MonitorTest >> #testMonitorNotGainingUnwantedSignalsDuringUnwinding). The cause of the bug is that the process exits the monitor while it''s waiting and it''s expected to enter again (see #exitAndWaitInQueue:maxMilliseconds:), but that doesn''t happen if the process is terminated. If we ensure that it enters again, then the ensured exit in #critical: won''t cause any trouble.Also ensure that the delay is unscheduled. The goal of this change is to avoid accumulating MonitorDelays and Semaphores when a waiting process is terminated. This is unrelated to the bug described above.' id '7e939691-d828-ac44-9354-44665be1b9e5' date '10 September 2011' time '7:39:00.317 pm' author 'ul' ancestors ((id '5c9061ca-b336-460a-bd15-2dfb6ecd2d0c')) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())(name 'Kernel-ul.630' message 'Fix for the recently introduced MethodDictionary bug reported by Mariano Martinez Peck on the Pharo list and some other things.- added MethodDictionary class >> #newForCapacity: to reduce the complexity of the various methods which create new instances with a given capacity (#grow, #rehash, #removeAll). These changes make some comments unnecessary.- fix: #sizeFor: should allow 75% load factor' id '87434805-2f3c-c446-b12b-3af3c0043cea' date '27 September 2011' time '6:09:18.907 pm' author 'ul' ancestors ((id 'efcd1a80-4b32-4ccf-bdb7-8548ec1f040b')) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())(name 'Kernel-ul.656' message 'Eliot''s fix of ContextPart >> #runUntilErrorOrReturnFrom: from http://lists.squeakfoundation.org/pipermail/squeak-dev/2011-December/162373.html .' id '20587caf-780b-384d-ad01-6bd9cf635708' date '6 December 2011' time '3:18:17.526 am' author 'ul' ancestors ((id 'a7fda999-52a1-42f1-92da-9cdae7a9614a')) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ((name 'Kernel-laza.660' message 'empty log message' id 'c6619ce1-96af-4213-bbd8-584f215b98b2' date '14 December 2011' time '4:15:18.716 pm' author 'laza' ancestors ((name 'Kernel-laza.659' message 'empty log message' id 'f62293c0-8c6e-48c1-a004-c592ad2981ec' date '14 December 2011' time '3:21:32.792 pm' author 'laza' ancestors ((id '8f8f6e77-b113-446b-b593-aa5aa0f8db4e')) stepChildren ())) stepChildren ())))) stepChildren ())) stepChildren ())(name 'Kernel-nice.656' message 'Remove one unused message: now that Integer is polymorphic to Fraction he never has to #adaptToFraction:andSend:' id '506e1645-c5f3-8f4b-8307-0c22476c079e' date '19 November 2011' time '10:45:57.156 pm' author 'nice' ancestors ((id 'd13de9a3-b2e6-403e-ac68-66d94cb15a79')) stepChildren ())) stepChildren ())(name 'Kernel-nice.644' message 'Add Integer>>bitCount to count the bits set (to 1) in an Integer.' id '612f5a8e-66ec-4531-86ab-ebc494038a94' date '19 October 2011' time '10:26:06.268 pm' author 'nice' ancestors ((id '26bbac76-79b8-4600-ac86-f60a02ad6da3')) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())(name 'Kernel-nice.671' message 'Remove Random>>theItsCompletelyBrokenTestReplace it with a RandomTest.' id '8b75db5b-1aab-4de9-87e1-75c3fb99e976' date '3 March 2012' time '3:20:12.779 pm' author 'nice' ancestors ((name 'Kernel-eem.670' message 'Add accessors for a CompiledsMethod header''s sign bit.The sign bit is useful for experiments but may also be usedto select an alternate bytecode set in the VM, e.g. forsupporting multiple languages or evolving the bytecode set.' id '18d57d21-e007-4be6-b076-13d011b90565' date '19 February 2012' time '11:03:50.709 am' author 'eem' ancestors ((name 'Kernel-eem.669' message 'Fix CompiledMethod>>#= for class-side methods wherethe methodClassAssociation is not unique.' id 'a0cd06b2-129d-4601-b1f2-a2ef622e8ff0' date '13 February 2012' time '4:16:39.081 pm' author 'eem' ancestors ((id '6d7c03fa-7e34-49ee-af59-08c26564f9ef')) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())(name 'Kernel-nice.652' message 'PURPOSE:Any Float now prints with the minimal number of digits that describes it unambiguously.This way, every two different Float will have a different printed representation.More over, every Float can be reconstructed from its printed representation with #readFrom:.	self assert: ([:f | f isNaN or: [(Float readFrom: f printString) = f]] value: Float someInstance).Note that Float nan, Float infinity and Float infinity negated still print as ''NaN'' ''Infinity'' and ''-Infinity'' which are compatible with #readFrom:.RATIONALE:the old behaviour was obscuring our data like for example:       0.1 successor printString = 0.1 printString.       1.0e-100 printString = ''9.99999999999999e-101''.The old behaviour was returning many digits without any guaranty of exactness which is useless.The old behaviour was faster (x4) but this is less relevant than exactness.Similar or better speed should be obtained by controlling number of printed digits if we can afford inexactness.IMPLEMENTATION:The essential change was to use #absPrintExactlyOn:base: in #printOn:base:Side note: this is really a bad name, because it prints the shortest base-representation, not the exact one.Anyway, we can only print the exact one in even bases.For example, the exact representation of 0.1 in base 10 is:	0.1 asFraction asScaledDecimal = 0.1000000000000000055511151231257827021181583404541015625s55.The second change was to marginally fast-up #absPrintExactlyOn:base: main loop by avoiding a #not send and piping decimal point test.Avoiding the #not makes the intention a tiny bit clearer.Also of few formatting has been performed in the last lines.REJECTED CHANGES:It is possible to move self > 0.0 before self isNaN to statistically reduce the number of tests performed.This works because Float nan > 0.0 = false.But this speed-up is quite marginal.Similarly (self = Infinity) could replace (self isInfinite) and save another send and also another test (because NegativeInfinity can''t happen at this stage).This would be at the price of a class var reference leak.It could be more interesting to move this #isInfinite test in #printOn:base: in order to gather print rules for exceptional values.I didn''t to avoid duplicating the test in the two branches > 0.0 and < 0.0.A far more efficient speed-up would be to optimize LargeInteger arithmetic.I think there is room, the VM is still using byte operations (thus at most 16 bits).' id '6588c880-ca5d-4c3d-a39b-b75588ce0263' date '5 November 2011' time '12:54:57.688 am' author 'nice' ancestors ((id '9ee9cceb-4b76-3d41-8a57-bd0b6eb79dc0')) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())(name 'Kernel-nice.690' message '1) Correct the very new #printOn:maxDecimalPlaces: which often rounds inexactly for large Float or large number of digits.Rationale: the printed representation shall be rounded exactly2) Don''t print arbitrary digits beyond Float precision, just print zeros(0.1 printShowingDecimalPlaces: 20) now prints ''0.10000000000000000000'' instead of ''0.10000000000000000555'',Rationale: those digits, while reflecting internal representation exactly, are totally insignificant and could be replaced with any other digits, while still representing the same Float. 3) Print the negative sign, even if the number vanishes to zero at prescribed decimal places(-0.001 printShowingDecimalPlaces: 2) now prints ''-0.00'' instead of ''0.00'',Rationale: this behaves like classical lib printf, and is in the spirit of Float negativeZero printString: when the precision vanishes, the Float keeps its sign.Note: I find the scheme feature which prints # for insignificant digits is very nice, but we should find a re-interpretable format...Implementation details:Of course, algorithms are taken from:Robert G. Burger and R. Kent Dybvig	Printing Floating Point Numbers Quickly and Accurately	ACM SIGPLAN 1996 Conference on Programming Language Design and Implementation	June 1996.Note that there is lot of duplicated code between free format and fixed format Float printing.And we should also fix the case of fixed number of digits #absPrintOn:base:digitCount: ...' id '2c2aba8b-d8bd-4ec3-8b88-a873de9c68c4' date '20 May 2012' time '10:05:07.444 am' author 'nice' ancestors ((id '06728744-bdfb-4e41-aa4c-39da40f860a4')) stepChildren ())) stepChildren ())) stepChildren ())(name 'Kernel-nice.692' message 'Let Fraction readFrom: ''1/2'' and Fraction readFrom: ''0.1'' answer the expected fractions.The sign, if any, must be attached to numerator.' id '11e38193-788b-4aa2-8480-a04d6afb2ec5' date '22 May 2012' time '10:58:15.58 pm' author 'nice' ancestors ((id 'f69b524f-83bb-4ef0-b084-e7a96dd5d33e')) stepChildren ())) stepChildren ())) stepChildren ())(name 'Kernel-nice.694' message 'Protect floorLog: 2 for case of exceptional float values (because exponent does not)Change exponent primitive fallback code to avoid a recursion with floorLog2:Note that I created a separate selector #exponentFromBitPattern for handling fallback, because it''s easier to test.' id 'faa4f8ea-259e-47d4-adc7-eeb195787cad' date '3 June 2012' time '5:31:52.95 pm' author 'nice' ancestors ((id 'e88d4aab-9e87-4e64-82cd-0475d919faa5')) stepChildren ())) stepChildren ())(name 'Kernel-nice.695' message 'Provides a new version of significandAsInteger that relies on regular Float arithmetic and regular asInteger conversion.In case of exceptional values, use the old behaviour, that is directly extract the bit pattern, but without implied one at position 53.Marginally faster than old version - sorry, not significantly.' id '6e5aa981-c989-4ac5-9f18-542a7360f3a9' date '7 June 2012' time '1:20:38.119 am' author 'nice' ancestors ((id 'faa4f8ea-259e-47d4-adc7-eeb195787cad')) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())(name 'Kernel-cmm.701' message 'Merged.' id 'f0177e3d-73ed-4616-a772-83e7bf7d89f4' date '4 July 2012' time '1:51:54.85 pm' author 'cmm' ancestors ((id '18c57dcf-d75b-4c61-b5a3-67a9f8cfa4f6')(name 'Kernel-cmm.685' message '- Inline and then remove DateAndTime class>>#todayAtMilliseconds: and #todayAtNanoSeconds: into #nowWithOffset:.- Eliminate duplicate code in Integer printing methods and deprecate one of the methods.' id '42e3ebd5-8ae7-4231-a98d-c2e676009dc8' date '4 July 2012' time '1:47:58.748 pm' author 'cmm' ancestors ((id 'e838a325-27ec-4a62-a907-d4059451a046')) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())(name 'Kernel-cwp.709' message 'Remove support for per-class settings of #allowUnderscoreSelectors.' id '9a72beb4-7bfd-498b-b166-731155ad5180' date '13 August 2012' time '3:53:33.041 pm' author 'cwp' ancestors ((id '8d0ba08e-9374-4d98-8f6e-93d5fd9fbea2')) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())(name 'Kernel-nice.722' message 'Let 0.0 negated answer Float negativeZero.This let following code work:self assert: (Compiler evaluate: ''-0.0'') hex = Float negativeZero hex' id '4589308f-5685-426c-a60e-596a6f2221dc' date '20 December 2012' time '11:22:42.941 pm' author 'nice' ancestors ((id '0095160b-f0c9-48d2-8ed2-c19c408430a2')) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())(name 'Kernel-nice.730' message '1) connect primitive 20 for large integer modulo (in range 31 to 64 bits)2) simplify #digitDiv:neg: senders since it can cope with a negative SmallInteger as first parameterWARNING: do not use with COG 2662 because primitive 20 (rem) is broken for negative case.This will have to wait a few days in the inbox...NOTE: the fallback code for Euclidean division #digitDiv:neg: is awfully dated with its nibbles... our (positive) SmallInteger range is 30bits.' id 'a5bc2c5c-0e3e-428c-8fc4-b0cd633be9f4' date '9 January 2013' time '3:13:24.184 am' author 'nice' ancestors ((id '4e9cfbca-a21e-472b-9a0e-d598a982af3b')) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())(name 'Kernel-fbs.738' message 'Stay in the debugger for longer. Part 3 of _5_.Stack introspection so the Debugger doesn''t have to. Signal the new exceptions when necessary.' id '792498b5-658b-4286-a580-755e9ae392a0' date '5 February 2013' time '11:09:23.219 pm' author 'fbs' ancestors ((id 'c4663029-f1b5-48e3-ae29-402076e50f8f')) stepChildren ((name 'Kernel-fbs.737' message 'ContextPart introspection.' id 'a4be93df-b8c5-4929-8a81-2b220d20f963' date '5 February 2013' time '11:07:26.509 pm' author 'fbs' ancestors ((name 'Kernel-fbs.736' message 'Rename NotImplemented errors in line with conventions 2 of 3.' id '1d99c937-4c68-475c-987b-2990c8040c29' date '30 January 2013' time '8:04:08.926 pm' author 'fbs' ancestors ((name 'Kernel-fbs.735' message 'Actually, return a Message, and find out the receiver of the Message from the signalercontext.Also, _returning_ the value of #subclassResponsibility means that you can return to the original caller the value of your just implemented method.' id '18ffff61-cfcf-4843-8c64-caea3ceb3fbc' date '30 January 2013' time '6:33:47.078 pm' author 'fbs' ancestors ((name 'Kernel-fbs.734' message 'Implement Eliot''s suggestions:* make the throwing of a NotImplementedError the standard behvaiour for these related selectors;* I went with "exceptionMessage" rather than "messageException" because the latter sounds like something that returns an exception.* Pulled asMessageSend out because it makes the caseOf: easier to read and (YAGNI alert) it''s more generally useful.' id 'ef47c409-cc2c-4e5f-a903-d71ead6268e5' date '30 January 2013' time '12:29:05.829 pm' author 'fbs' ancestors ((name 'Kernel-fbs.733' message 'Move the Debugger''s introspection of a context into ContextPart. Use the new SubclassResponsibilityError API.' id '473959a5-97ca-425d-a84b-7440244c893b' date '29 January 2013' time '4:38:23.85 pm' author 'fbs' ancestors ((name 'Kernel-fbs.732' message '#subclassResponsibility in-Debugger method creation #1 of 4: Raise a SubclassResponsibility when something sends #subclassResponsibility, recording the offending class, the selector, and the arguments to the selector. (The Debugger uses this information.)' id 'b9ad1255-fa5b-4480-ae3f-923fd0969ca8' date '27 January 2013' time '11:23:27.822 am' author 'fbs' ancestors ((id 'c4663029-f1b5-48e3-ae29-402076e50f8f')) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())))) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())(name 'Kernel-nice.779' message 'To solve the update problem = fbs.779 + self environment change in Class>>declare:' id '77ed5cb0-0ac4-4379-9af2-6cb7551b8ca8' date '21 July 2013' time '3:23:58.705 pm' author 'nice' ancestors ((id 'e6029c34-53d1-a24e-8961-bb7c1cd4ad2a')) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())(name 'Kernel-bf.721' message 'Bob Arning''s fix for Delay snapshotting.' id 'd0943c86-6850-45b6-9176-7a43025357b5' date '7 August 2013' time '3:17:21.93 pm' author 'bf' ancestors ((id '0095160b-f0c9-48d2-8ed2-c19c408430a2')) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())(name 'Kernel-ul.811' message 'Changed Random for faster instance creation and better randomness:- moved constants q, r, a and m to class variables. There''s no need to calculate and store them in all instances. Haven''t inlined them, so they are documented and defined in one place.- try to use #primUTCMicrosecondClock for seed generation- don''t calculate seed, when the user provides it- updated constants in #bucketTest:, because machines are faster nowadays' id 'b32f1827-e63d-46dd-b6b9-0a15355aac6a' date '23 September 2013' time '6:48:32.356 pm' author 'ul' ancestors ((id 'eb2a7647-cf62-49f2-8436-40b3a52e18af')) stepChildren ())) stepChildren ())(name 'Kernel-cmm.814' message 'Added BlockClosure>>#valueWithAllPossibleArguments: to support passing a variable number of arguments to the image from the command-line.' id 'c757a2a8-26b1-422b-8b8b-4bf6640efbb4' date '25 October 2013' time '2:27:37.722 pm' author 'cmm' ancestors ((name 'Kernel-cmm.813' message '- When printing stack traces, the line-end preferences should be set externally.' id 'e1fe264f-55e3-4702-bd82-e7344a07e982' date '23 October 2013' time '9:04:14.522 pm' author 'cmm' ancestors ((name 'Kernel-cmm.812' message 'Printing utilities for Blocks which include the source code of the block, and Errors which include the description and stack-trace.' id '68690126-9bc1-4cbc-b97e-75280610af28' date '23 October 2013' time '3:13:11.812 pm' author 'cmm' ancestors ((id 'd8e4e28f-1d3d-49f1-a3d5-51b75f95b99e')) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())(name 'Kernel-nice.843' message 'Correct the bug I introduced for large integer sqrtFloor.If receiver was of the form 2^2n*uwe did answer 2^n *E(sqrt(u))But sqrt(u) = E(sqrt(u)) + residuewhere 0<=residue<1And result is rather	E(2^n*sqrt(u))	= E( 2^n*(E(sqrt(u)) + residue))	= 2^n*E(sqrt(u)) + E(2^n*residue)As 2^n * residue can be big (superior to 1), we miss the correct value by default.If we want to correct this, an approximation of residue is (u-E(sqrt(u))^2) / 2 E(sqrt(u))This is more or less like super Newton-Raphson inner loop...It would be possible to duplicate super work, but I feel like it''s adding too much complexity for small reward, so I prefer to remove offending code for now' id '28ea5418-9be7-964b-b0c1-fde1bf8528a3' date '21 March 2014' time '6:28:55.456 pm' author 'nice' ancestors ((name 'Kernel-nice.842' message 'Avoid using #reciprocalFloorLog:#reciprocalFloorLog: does the same as #floorLog: just with more noise.Once upon a time it was required, but it is not anymore and should be deprecated.Note that floorLog: already cumulates 3 rounding errors via (self ln / base ln)(-1 to: (Float fminDenormalized floorLog: 10) + 1 by: -1)	count: [:i |		| pow |		pow := 10 raisedTo: i.		(pow asFloat floorLog: 10) < i and: [pow asFloat >= pow]].89But reciprocalFloorLog: is even worse:(-1 to: (Float fminDenormalized floorLog: 10) + 1 by: -1)	count: [:i |		| pow |		pow := 10 raisedTo: i.		(pow asFloat reciprocalFloorLog: 10) < i and: [pow asFloat >= pow]]. 149' id 'c5833439-ae84-4711-a40a-b2db5d766cb3' date '16 March 2014' time '11:21:19.525 pm' author 'nice' ancestors ((name 'Kernel-nice.841' message 'Provide a somehow slower, but correct version of Integer>>#nthRoot: w.r.t. exactness' id 'e651c760-2924-469e-874b-deafb85737a0' date '13 March 2014' time '2:58:18.732 am' author 'nice' ancestors ((name 'Kernel-nice.840' message 'Correct a comment: integerPart is the integer part, not the fractional part.' id 'b9d8d15f-48f9-4986-b666-89241ecae19f' date '3 March 2014' time '4:17:47.597 pm' author 'nice' ancestors ((id '070493d0-68d5-4385-b3a6-4ddf4c64497f')) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())(name 'Kernel-nice.892' message 'Fix Float class>>fromIEEE32Bit: in the case of gradual underflow again...Details:A single precision (32bits) float gradual underflow is of the formbiased exponent = 0 (-127 unbiased, but true value to take into account is -126)significand of the form 0.bbb....b (23 bit after the floating point, no implied 1)Once converted to double precision, this will not underflow...So we must shift the significand left until the highest bit pass left of the floating point :for example 0.001b...b ==> 1.b...b000adjust the exponent (which is -126) by same number of shift (-129 in this example since there are 3 shifts)then remove the leading bit left of floating point - it is already taken into account as the implied 1 now that we do not underflow.' id '85017561-ba41-4e1f-9c6b-37f97730b5ea' date '23 December 2014' time '11:50:48.613 pm' author 'nice' ancestors ((name 'Kernel-eem.891' message 'Avoid primitive failure when instantiating anAdditionalMethodState.' id '9bb1186b-07b6-44f0-8a5e-db9bdde71395' date '19 December 2014' time '10:24:47.136 am' author 'eem' ancestors ((id '578f262a-c72b-4a4f-b9ce-813aeb77728b')) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())(name 'Kernel-bf.1006' message 'Provide a pragma to annotate senders of messages that would otherwise not be found, by invoking a custom hasLiteral: test on the methodClass.<hasLiteralTest: #myHasLiteral::>For example use see System-bf.806' id 'a907e233-dc3a-44f7-92a8-57f0cac8e089' date '16 March 2016' time '11:09:47.742872 am' author 'bf' ancestors ((id 'ef6c553c-70dc-4646-8a12-172594ff090a')) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())(name 'Kernel-nice.798' message 'Better fix for http://bugs.squeak.org/view.php?id=1554A class variable defined in a superclass should take precedence over a global variable.First look in local class variables.Then look in local sharedPools (a local sharedPool will shadow a super class variable, that sounds fair).Then look in superclass pools.When superclass chain is exhausted, look in the Environment that were provided as parameter.Note that this is mostly squeak 1.x implementation of #scopeHas:ifTrue: (or st-80), except that anEvironment parameter replaces Smalltalk.This way we avoid duplicate lookup of previous workaround.And we never ever look in superclass environment, that''s not necessarily ours.This currently breaks some EnvironmentTest because inheriting superclass environment is a cheap and easy way to  import all Smalltalk (unless you are not an Object or ProtoObject of course).The longest and proper way would be to properly export some symbols from Smalltalk globals, and import them explicitely in the tested environment.' id 'e02ae597-3f6d-40b9-9468-bf01416db6de' date '30 July 2013' time '10:34:15.34 pm' author 'nice' ancestors ((id 'c2ee61a3-86aa-4a39-ae2a-93ac3e8c81c6')) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())(name 'Kernel-nice.1041' message 'The last bits of intSpec are zero, so no need to mask it.Those bits are used in instances only - see intSpec comment.' id '80f9f68f-fad8-42d7-b1bc-bfa1ee876629' date '21 September 2016' time '9:06:09.983013 pm' author 'nice' ancestors ((name 'Kernel-nice.1040' message 'Prefer HalfWord to DoubleByte' id '02e2c754-2964-4b4a-8f91-102bd6c3a92d' date '20 September 2016' time '11:16:58.635456 pm' author 'nice' ancestors ((name 'Kernel-nice.1039' message 'Introduce HalfWord (16 bits) and DoubleWord (64 bits) subclasses which are possible in Spur format, but yet not exploited.' id 'b0aeabf6-f73d-44c4-be8b-d2c66a73486f' date '20 September 2016' time '11:00:27.302558 pm' author 'nice' ancestors ((id '8c354082-7d64-4039-8dc2-e2d78c537570')) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())(name 'Kernel-cbc.1054' message 'Fixes Behaviour>>basicNew: to recognize and invalid arugment and raise an appropriate error (not an ''out of memory'' error).' id '4707f619-341d-7241-918f-6c3215f93fce' date '27 January 2017' time '9:06:02.080673 am' author 'cbc' ancestors ((id '649183d7-831c-44a0-acc7-451ffcfa664f')) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())(name 'Kernel-ul.1059' message '- check the type of the argument of #& and #| of booleans' id 'b88b767b-b0d8-43ff-ba86-a19b11affe6d' date '11 February 2017' time '3:00:22.370854 am' author 'ul' ancestors ((id '62aa1881-7b99-4ba0-bfa5-a2599f1386a9')) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())(name 'Kernel-nice.1102' message 'Nuke pre-v3 closureCopy:copiedValues: method. No such message has been sent for a long long time.Simplify the BlockStartLocator, because there is no need to handle pre-v3 closure anymore.' id '5049a01f-53bd-4e40-a6a3-a906a14631ad' date '27 April 2017' time '12:07:32.099435 am' author 'nice' ancestors ((id 'e7668d92-95a7-4ece-967a-35a6bf61c946')) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())(name 'Kernel-nice.1120' message '1) Use // in Fraction>>gcd:, rather than / will was invoking the same gcd: computation 4 times!2) Enhance the Fraction comment The Fraction comment SHALL tell about the expected class invariants.At least, it should help answering questions like:https://stackoverflow.com/questions/46942103/squeak-smalltalk-why-sometimes-the-reduced-method-doesnt-workhttps://stackoverflow.com/questions/46905203/squeak-smalltalk-why-reduction-of-a-fraction-does-not-happen-after-numerator-anWhile at it, also tell why 3 isFraction answers true, and 3.0 asFraction -> an Integer, not a Fraction.VW (st80?) has chosen better #isRational and #asRational messages for making things a bit more clear, but without a Rational superclass, it''s not that obvious...' id '24277641-be23-40ea-85ef-1db0d48f63d3' date '13 November 2017' time '10:24:19.857289 pm' author 'nice' ancestors ((id 'a210d4c7-b8eb-e544-a857-2b0bbade9668')) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())(name 'Kernel-eem.1164' message 'The selector of a method should never be found (unless it occurs as a literal or in a pragma)  irrespective of thorough search.' id '1e50cd13-d194-479f-877a-eac64559142b' date '27 March 2018' time '11:44:42.020383 am' author 'eem' ancestors ((name 'Kernel-cbc.1163' message 'Update #xor: to work with argument being a block as well.' id '45d9dad8-7c81-034e-b578-b9ccd291cab6' date '21 March 2018' time '9:09:20.773568 pm' author 'cbc' ancestors ((name 'Kernel-dtl.1162' message 'Use #rootClasses introduced in Environments-fbs.27' id '46f46dde-06c6-4189-a8e6-4a07eda959bf' date '17 March 2018' time '3:11:04.807847 pm' author 'dtl' ancestors ((id '53deb012-ffaa-41f5-a0d0-7e8ddfb4bbb1')) stepChildren ())(name 'Kernel-fn.1152' message 'Move to "logical operations".' id '3f388945-f981-4f1e-830e-a296f4d45a2a' date '10 February 2018' time '5:39:43.015522 pm' author 'fn' ancestors ((name 'Kernel-fn.1151' message 'For consistency: allow blocks to be passed into #xor: (see #or: and #and:).' id '9fb7df4b-6bf4-4af8-9c75-7496c2f0b517' date '9 February 2018' time '12:32:25.516883 pm' author 'fn' ancestors ((id '6afb5455-c040-4572-a62a-b292e20856e6')) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())(name 'Kernel-nice.1200' message 'Let''s make basicInspect robust to crazy numbers.With http://www.squeaksource.com/ArbitraryPrecisionFl.htmlI can create crazy numbers like this:((1 asArbitraryPrecisionFloatNumBits: 100) timesTwoPower: 1e100)But then I can''t print to decimal form (a bit too many bytes to be allocated....).The problem when debugging such monster is that basicInspect is not basicEnough: it insists on printing the Number in the inspector title (label)!If we invoke basicInspect, we generally want something basic. Even if we just inspect, having a label spanning more than 100 chars is vain...So let''s be robust.' id '4608ee87-5859-4132-918f-df0f71dcc07e' date '9 December 2018' time '11:17:42.830548 am' author 'nice' ancestors ((id '7d8e709b-a9c9-49ad-b733-e34ce715a79c')) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())(name 'Kernel-nice.1216' message 'Connect #durationToRun to new high-resolution clock driven durationToRun: provided by Chronology-Core-nice.41This is a must for micro-benchmarks.' id 'e5e62c80-604a-4a15-a0ce-ec6486a0e3c0' date '24 April 2019' time '12:00:26.112717 am' author 'nice' ancestors ((id '9fa7a504-70d6-45ae-9514-d905578da5af')) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())(name 'Kernel-nice.1235' message 'Round accelerated arithmetic chunks to upper multiple of 4 bytes rather than to lower.I believe that this marginally improves the performance because it''s a tiny bit better to recompose a longer least significant chunk with a shorter most significant chunk.If someone wants to confirm...It''s better to tune the threshold before benchmarking.See LargeArithmeticBench from http://www.squeaksource.com/STEM.html and http://smallissimo.blogspot.com/2019/05 blog for details.' id 'dd74b668-0767-441e-a952-5c73af6327be' date '16 May 2019' time '12:08:27.320094 am' author 'nice' ancestors ((id '3c271006-81c5-49e7-8131-b65c154b009f')) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())(name 'Kernel-cmfcmf.1216' message 'Make Random>>roll: work again and add support for constant operandsThis version fixes three issues:1. Random>>roll: was not working anymore. The following code only produced an error:Random new roll: ''1d20''This happened due to an issue with Random>>diceToken: which used Number>>readFrom: to extract numbers from the string. Calling Number readFrom: ''1d20'' results in 100000000000000000000 instead of the expected 1, because $d is seen as an exponent letter by the ExtendedNumberParser used by Number>>readFrom: (see ExtendedNumberParser>>exponentLetters).I therefore replaced Number>>readFrom: by Integer>>readFrom:, which doesn''t use the exponent letters.2. I also fixed a minor issue with the mini-grammar''s ''dice'' rule. Before this version, it read as if it only supported one or two operands, when it really supported an unlimited number of operands.3. The mini-grammer''s ''expr'' rule read as if it supported constant operands (e.g., ''1d20+5'' or ''42''), because ''expr'' was allowed to be just ''num''. As far as I can gather, this has never worked (but I might be wrong). This is now also fixed by always setting res to the token read if the token is a number. If the token is neither a number nor $d, an error is now signalled.' id '3c20ffc1-89f8-474e-95a7-05fab06c9f9b' date '29 May 2019' time '10:09:51.240802 pm' author 'cmfcmf' ancestors ((id '9fa7a504-70d6-45ae-9514-d905578da5af')) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())(name 'Kernel-ct.1240' message 'Fix bug in simulation of primitive 188Read error report here: http://forum.world.st/Bug-Debugger-storm-when-trying-to-stepping-into-withArgs-executeMethod-td5101451.html' id 'ce89bb6f-3e51-914e-81a0-bd8c01071b92' date '21 July 2019' time '6:27:06.60977 pm' author 'ct' ancestors ((id 'c1b1ed0f-6055-e543-a389-510fea993ddb')) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())(name 'Kernel-ct.1256' message 'Deduplicate CompiledMethod>>#pragmasAt:' id '4b6baca9-0e16-ea4d-9913-b813ebf87863' date '9 August 2019' time '10:13:59.051412 pm' author 'ct' ancestors ((name 'Kernel-ct.1255' message 'Propose convenience method for pragma analysis' id '2355c96f-9cc4-2f45-aebe-385f6465737e' date '9 August 2019' time '10:08:18.927412 pm' author 'ct' ancestors ((id '196964fd-3ccf-a948-a547-59988b7fb079')) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())(name 'Kernel-nice.1270' message 'In SmallFloat64>>#truncated fallback, don''t bother with Infinities and NaN, since all SmallFloat64 are finite, nor with Float fractionPart, since all non-integer Float value fits in SmallInteger in a 64bits image, and thus are already handled by the primitive.It''s legitimate to inject such implementation specific knowledge into this implementation specific class.Also revise BoxedFloat64>>#truncated, mostly with comments. Dividing by SmallInteger maxVal + 1 / 2 would lead to an infinite loop in a 64bits image, fortunately this branch is unreachable then. Each time I read it, I have the shadow of a doubt ;)' id '05ae7bbb-2517-4c6e-a9c0-db89b42742e5' date '1 October 2019' time '9:22:39.460936 pm' author 'nice' ancestors ((id '8b2f93e4-d36e-6c45-a14a-610ba97a0e48')) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())(name 'Kernel-mt.1266' message 'Make #messagesSequence compatible with SistaV1 and CompiledBlcoks again *and* keep the meaning of #messagesSequence as restored in the previous commit by eem.' id '61361169-2419-8e48-9661-e79017d0c837' date '6 September 2019' time '8:11:10.403526 am' author 'mt' ancestors ((id '69e1a0f1-43f5-435e-999d-b8e81b52401a')) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())(name 'Kernel-ct.1270' message 'Add some printing functions for ComplexNot yet an equal concept to that one in Number, but still better than nothing :)Try this: Float pi i exp stringForReadout' id '52e94fc9-2445-7a42-8ec8-12542fa2e549' date '20 September 2019' time '8:08:13.335726 pm' author 'ct' ancestors ((id '8b2f93e4-d36e-6c45-a14a-610ba97a0e48')) stepChildren ())(name 'Kernel-ct.1278' message 'Fix a bug in #valueSupplyingAnswers:. If the pattern is not a regex, a RegexSyntaxError may be raised."Now works:"[self inform: ''Hello world'']	valueSupplyingAnswers: #((''*foo*'' nil))' id '1b93aa78-abca-b441-b409-9b58f1b2d2bf' date '1 November 2019' time '7:18:08.038562 pm' author 'ct' ancestors ((id '08c3b2dd-36ff-4da9-b7b9-c70f11e47b1b')) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())(name 'Kernel-ct.1296' message 'Fixes context simulation bug in #contextEnsure: and #contextOn:do:As ctxt is *not* a top context as required by #jump, we need to put a (fake) return value (nil) on its stack. Otherwise, #jump will pop something different from the stack. Concretely, this caused the bug described in [1] (Scenario 1) because the latest stack top was the closure vector {chain}. This closure vector was accidently popped away so that in the final return statement, #pushRemoteTemp:inVectorAt: raised an error subscript bounds (because the next stack item was not variable). Read the linked bug report for more details.[1] http://forum.world.st/BUG-s-in-Context-control-jump-runUntilErrorOrReturnFrom-td5107263.html' id 'e60f4637-b4fc-9947-94d3-50e7aa58ab82' date '27 January 2020' time '12:59:15.057199 pm' author 'ct' ancestors ((name 'Kernel-tonyg.1293' message 'Repair minor bug in Promise>>resolveWith:.' id '818c88e4-7f2f-473a-ace7-e286013c078e' date '24 January 2020' time '3:42:53.891725 pm' author 'tonyg' ancestors ((name 'Kernel-nice.1292' message 'Assuming that patched VM will produce ASCII control characters (code 1 to 26) again when pressing ctrl+letter, revert some of the recent keyboard event mapping changes (See https://github.com/OpenSmalltalk/opensmalltalk-vm/pull/460).Those recent changes have unexpected consequences and implications that we might better postpone post release. We should never have to say that, but it''s easier to fix the VM than the image in this case ;)One example of consequences is that cmd+7 is captured by DockingBarMorph as menu #7 rather than passed to theTextEditor if Preferences duplicateAllControlAndAltKeys.I guess that we have this preference enabled to make windows user experience not to werid wrt native feel (ctrl+key is the shortcut of choice)...' id '8cce1ea4-5e21-46f5-858f-0732cf2e33d5' date '28 December 2019' time '10:15:37.810563 pm' author 'nice' ancestors ((name 'Kernel-nice.1291' message 'Make AssertionFailure an Error rather than a Halt.This change is necessary for at least running the SUnit tests suite, otherwise the DecompilerTests hangs in a debugger...There was a consensus on this decision in squeak-dev thread last november, so let''s just do it:[squeak-dev] Squeak''s AssertionFailure vs. SUnit''s TestFailurehttp://lists.squeakfoundation.org/pipermail/squeak-dev/2019-November/205039.htmlFor now, keep it resumable. I don''t know if reasonable, but like that, AssertionFailure behavior should be mostly unchanged.' id 'ba77885c-3a21-4d74-a5a4-ef2c3572e192' date '26 December 2019' time '6:56:30.382504 pm' author 'nice' ancestors ((name 'Kernel-mt.1290' message 'Do actually *duplicate* CTRL and CMD/ALT keys if that preference is enabled.This means that such key-stroke events will always answer TRUE to both #controlKeyPressed and #commandKeyPressed. This solves various issues in client code. Now all paths that only check for #controlKeyPressed will match even if the duplication preference is enabled.Note that for applications that do want to make use of CTRL and ALT/CMD in separate ways, the PREFERENCE "duplicate (all) ctrl and alt keys" has to be DISABLED. Those applications can easily check and inform the user.Also note that key duplication means that there is no way to detect actual control keys. Disable that preference if you want to hit CTRL+C and, for example, access "Character enter" (ASCII 3) for that event''s #keyCharacter.Finally note that I will double-check effects in TextEditor asap.' id 'b2e649ef-ad9d-5040-b6b0-70b7e29e4085' date '23 December 2019' time '11:24:23.728349 am' author 'mt' ancestors ((name 'Kernel-mt.1289' message '- fixes ctrl <-> alt key swapping bug in #processEvent:- fixes ctrl <-> alt key swapping by extending the range to the same range as for "duplicate *all*"- LINUX ONLY: fixes swapping and duplication of ctrl/alt keys- LINUX ONLY: maps controls keys that arrive as ASCII 64 to 127 down to ASCII 0 to 31- document that other (older) "duplicate keys" preference to be deprecated after the 5.3 releaseSo, the current VM 201911282316 should be fine for all platforms for Squeak 5.3 at the moment.' id 'e9f9d6a0-0ce8-114e-b3d2-26b481f590a1' date '19 December 2019' time '11:45:58.637761 am' author 'mt' ancestors ((name 'Kernel-mt.1288' message 'Clean up documentation and code of latest key-code fix. Thanks Nicolas (nice) for the tip!' id '3e88e0c8-27ef-dc4a-9017-227b63e2ce72' date '16 December 2019' time '9:06:49.662845 am' author 'mt' ancestors ((id '2f99cd52-d053-cb40-a84a-6c257ee118f4')) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())(name 'Kernel-ct.1298' message 'Fixes a simulation bug regarding #doesNotUnderstand:. Don''t forget to indicate the correct lookup class.Steps to reproduce this bug:1. Debug "42 foo"2. Step overThe debugger label was: ''MessageNotUnderstood: nil>>foo''.' id 'd57152c7-359a-054c-9dd7-c6353a6f700f' date '17 February 2020' time '4:48:43.681432 pm' author 'ct' ancestors ((id '818c88e4-7f2f-473a-ace7-e286013c078e')) stepChildren ())(name 'Kernel-ct.1302' message 'Fixes and refines Object >> readCarefullyFrom:- repair syntax error handling- deduplicate #readFrom: and #readCarefullyFrom: by introducing #basicReadFrom:- add multilingual support' id '74a9f8fe-1a71-7243-897f-15e8d472f2ec' date '19 February 2020' time '12:34:30.375795 pm' author 'ct' ancestors ((name 'Kernel-eem.1296' message 'Fix a bug in allMethodCategoriesIntegratedThrough: which can cause an error in the Debugger when prompting to define a new method.Fix bugs in CompiledCode>>messagesDo:/selectorsDo: and define the former in terms of the latter (since the former is a misnomer).Fix a bug in the definition of CompiledMethod>>hasSameLiteralsAs: which should not be confused by the methodClass literal.Fix perform:with:with:with:with:with:''s comment.' id '78e95030-3521-4dd9-b26c-2c8c7939010b' date '18 February 2020' time '7:43:15.608431 pm' author 'eem' ancestors ((name 'Kernel-eem.1295' message 'Fix comment typo for perform:with:with:with:with:with:' id '1f1fc6c8-7160-4101-9c48-56ec5784616f' date '24 January 2020' time '12:09:14.247651 pm' author 'eem' ancestors ((name 'Kernel-eem.1294' message 'A much better Behavior>>instSpec using the newe integer array classes as examples.A resumable AssertionFailure (essential for my usage; I want to be able to log AssertFails and continue in one crucial VM debuggingissue that has been in the background for years).Nicolas''s primitive highBit faaaaaast.Nicolas'' fixes for event dispatch which make my system usable.But this one is really about Behavior>instSpec and resumable AssertFailure.' id '3c3915d5-7426-4d3b-91b7-479deaf5468d' date '24 January 2020' time '12:04:41.143093 pm' author 'eem' ancestors ((name 'Kernel-eem.1285' message 'Commit my own take on sendsSelector: vs sendsMessage:, and selectorsDo: vs messagesDo:.  IMNERHO sendsMessage: messagesDo: are *wrong*!! :-)  c.f. Behavior>>selectorsDo:' id '3dce70bd-9166-47fe-a86f-22456db9845a' date '11 December 2019' time '11:50:19.928718 am' author 'eem' ancestors ((id '8058d02f-d2cd-b942-aa93-095fa963a523')) stepChildren ())(name 'Kernel-nice.1293' message 'Connect the highBit primitive provided by new VM.Since the primitive is jitted, it''s about 3x faster than highBitOfPositiveReceiver.[0 to: 1<<24 do: #highBit] bench. ''7.66 per second. 131 milliseconds per run. 0 % GC time.''[0 to: 1<<24 do: #highBitOfPositiveReceiver] bench. ''2.59 per second. 386 milliseconds per run. 0 % GC time.''It''s even a bit faster than highBitOfByte.[0 to: 255 do: #highBit] bench. ''472,000 per second. 2.12 microseconds per run. 0 % GC time.''[0 to: 255 do: #highBitOfByte] bench. ''323,000 per second. 3.09 microseconds per run. 0 % GC time.''Note: this has been tested on intel x86 and x64 architecture.Please report the status on ARM (or mips).' id '2a023bb6-8b85-41b9-bc59-fb247fc48658' date '8 January 2020' time '12:56:57.717854 am' author 'nice' ancestors ((id '8cce1ea4-5e21-46f5-858f-0732cf2e33d5')) stepChildren ())) stepChildren ())) stepChildren ())(id '818c88e4-7f2f-473a-ace7-e286013c078e')) stepChildren ())) stepChildren ())(id '78e95030-3521-4dd9-b26c-2c8c7939010b')) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())